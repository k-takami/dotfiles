#Rails::ActionMailer例
https://github.com/LGDIS/LGDIS/blob/master/plugins/lgdis/lib/lgdis/ext_out/mailer.rb


#Gmail-　ruby標準ライブラリNET::SMTP例:

#   実行には以下のライブラリが必要です。#   $ gem install tmail tlsmail
require 'rubygems';require 'tmail';require "tlsmail"
class Mailer
  def initialize
    @mail = TMail::Mail.new;@mail.date = Time.now;@mail.mime_version = '1.0'
    @mail.set_content_type 'text', 'plain', {'charset'=>'utf-8'} #=>'iso-2022-jp'}
#     @mail.set_content_type 'text', 'plain', {'charset'=>'shift-jis'} #=>'iso-2022-jp'}

    # メールはNet::SMTPで送信。# gmailはTLSによる暗号化が必要なので、tlsmailを利用する。# また、認証も必須。
    Net::SMTP.enable_tls(OpenSSL::SSL::VERIFY_NONE)
  end 

  def gmail(to,from,subject,body,output)#,accountID,accountPW)
    # tmailでメールを作成
#     @mail=1

    to !=nil ? @mail.to=to : @mail.to = '********@docomo.ne.jp'
    from !=nil ? @mail.from=from : @mail.from = '***************@gmail.com'

    subject !=nil ? @mail.subject=subject : @mail.subject = 'test mail'
    body !=nil ? @mail.body =body : @mail.body = 'This is test mail.漢字'
    if output =="stdout" then puts @mail.to_s end # 作成されるメールを確認したい場合はこちら。

    Net::SMTP.start( "smtp.gmail.com",  587, "localhost.localdomain", "*********@gmail.com", "PASSWORD", "plain"){ |smtp|
      smtp.sendmail(@mail.encoded, @mail.from, @mail.to)
    }   

  end 


end


if __FILE__ == $0
#スクリプトとしての呼び出し例:
#  Mailer.new.gmail('some_body@willcom.com','unistandard@gmail.com','test mail','This is test mail.漢字',"stdout")
 mAILer.new.gmail('unistandard@gmail.com','unistandard@gmail.com','test mail','This is test mail.漢字',"stdout")
end



####################################################################################################

#CentOSでのポート開
	#停止
	/etc/init.d/iptables stop
	#無効
	chkconfig iptables off
	#状況確認
	/etc/init.d/iptables status
	vi /etc/sysconfig/^Ctables
	vi /etc/postfix/master.cf
    

    #postfix

        #インストール
        yum install postfix


     #設定のながれ
        vi /etc/postfix/main.cf
        hostname
        mkdir /root/Maildir; mkdir /home/apl/Maildir
        chmod 700  /root/Maildir; chmod 700  /home/apl/Maildir
        chown root:root  /root/Maildir
        chown apl:apl  /home/apl/Maildir
        /etc/rc.d/init.d/postfix restart

     #動作確認
	#ポート開放確認
        telnet localhost 25
	 quit

	#サーバーローカルshellレベルでの直接送信
        echo test|sendmail root


	#Mailbox確認(Mailbox型式は暫定的にMailDir型式)
        date;ls -alt /[$USERHOME]/Maildir/new
	cat /root/Maildir/new/*
        	例)	date;ls -alt /root/Maildir/new

	#Redmine admin>adminユーザー情報変更
	http://192.168.18.130:3000/users/1
		メールアドレス	root@localhost.localdomain　に設定
		password再設定
		time-zone	GMT+9 Tokyo 再設定

	#Redmine admin>設定>管理>メール通知画面　右下最下部のテストメール送信リンクでの確認
	http://192.168.18.130:3000/settings/edit?tab=notifications
		デフォルトの送信者名redmine@example.netを適宜変更して保存してから送信リンクをクリックしてテストする｡保存しないでクリックするとメールヘッダーの送信者名は変わらない｡
i #
  #Rails環境設定
#設定編集 vi /opt/fix/LGDIS/config/environments/development.rb

	#規定値:config.action_mailer.raise_delivery_errors = false　を以下のごとく変更;
	config.action_mailer.perform_deliveries = true
	config.action_mailer.raise_delivery_errors = true


	#potfixログ確認		
	tail /var/log/maillog


	
#SMTP-AUTH設定

	#curys-sasl
	cyrus-saslは非常に多機能で、
	一般的な テキスト 認証の他に暗号化認証も扱うことができますし、 
	構築中のLinuxサーバー の ユーザーアカウント 名とパスワードをそのまま認証に使うことも、
	別の データベース を使って認証を行うこともできるようになっています。 


	#install
		cyrus-sasl-xxxxxxx
		cyrus-sasl-plain


	vi /usr/lib/sasl2/smtpd.conf 
		pwcheck_method: saslauthd


	service saslauthd start
		saslauthdを起動中:                                         [  OK  ]

	vim /etc/postfix/main.cf  
		myorigin = $myhostname
		 "SMTP Auth"の利用を許可する
		smtpd_sasl_auth_enable = yes

		"anonymous"接続を拒否する。
		smtpd_sasl_security_options = noanonymous

		"OutlookExpress対応
		broken_sasl_auth_clients = yes

		smtpd_sasl_local_domain = $mydomain
		smtpd_recipient_restrictions =
		    permit_mynetworks,
		    permit_sasl_authenticated,
		    reject_unauth_destination,
		    permit_auth_destination,
		    reject	

		    permit_mynetworksは、サーバー内のネットワーク、つまり内部からの利用を許可するものです。
		    permit_sasl_authenticated は、sasl認証できたものだけ受け入れる。
		    reject_unauth_destination で、認証できなかったものは、拒否する。
		    permit_auth_destination で、認証できたものは、受け入れる。
		    reject で、その他は、拒否する。

	    etc/init.d/postfix restart

	#curys-sasl password config
		/useradd some_body -s /sbin/nologin
		/usr/sbin/saslpasswd -c some_body
		/usr/sbin/sasldblistusers
		
		chgrp postfix /etc/sasldb
		chmod 640 /etc/sasldb

	#Mailer-config
		→「アカウント設定」→「サーバー」→「このサーバーは認証が必要」または「送信サーバーは認証が必要」にチェックを入れる。 
		or
		→「送信(SMTP)サーバの設定」から「セキュリティと認証」の「ユーザ名とパスワードを使用する」にチェックを入れる
		
	    etc/init.d/postfix restart
	    または
	　　 service postfix restart
		#/etc/init.d/saslauthdも起動していれば成功　
		
	#参考:確認コマンド
		postfix　-n
		postfix check
		tail /var/log/maillog*; date;ls -alt /home/apl/Maildir/new/ ; ls -alt /root/Maildir/new/

