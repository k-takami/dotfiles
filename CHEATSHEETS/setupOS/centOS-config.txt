chkconfig --list netfs漢字
[-ecolinux-config-steps-]
[-vim-]
	[-vimScript-]
	[-vimWindowTab-]
[-RubyMainOTL-]
	[-hpricot-]
[-RailsApache-]
	[-railsDBapi-]
	[-rails_activescafhold-]
	[-hpricot-]#test
	漢字

#heroku
gem install heroku
ssh-keygen -t rsa
heroku keys:add /root/.ssh/id_rsa.pub
#すでにデプロイされてるものを取得
git clone git@heroku.com:tkt-redmine.git

#すでにデプロイされてるものを取得 createしたばあいはgit repo名も表示される
heroku [(create|destroy|rename)] [heroku_app_name]

#origin以外のremote repoとしてheroku-repoを登録してpush
# git clone とかして持ってきたときには明示的に追加する
git remote add heroku git@heroku.com:[app-name].git
git push heroku master
#ここでheroku側のBundle install & bootupがおきるが､RDBMSがpostgresql以外はこけ
るので事前点検すべし

#mongoid4+rails4: mongoid4のlocalインストール
  git clone https://github.com/mongoid/mongoid.git
  tar zcvf mongoid.tar.gz mongoid
  cd mongoid
  gem build mongoid.gemspec
  gem install mongoid-4.0.0.beta1.gem
  gem list --local|grep mongoid
#mongoidとbsoni mongoid-paranoia関連のgemと記述を消去
gem uninstall bson
gem uninstall bson_ext
gem uninstall mongoid-paranoia
vim Gemfile.lock
vi Gemfile
  gem 'rails', '4.0.2'
  gem 'mongoid', '~> 4.0.0.beta1'
  gem 'bson_ext'
  gem 'mongoid-paranoia','~>0.1', github: 'simi/mongoid-paranoia'
  gem 'mongoid_auto_increment'
  # gem 'mongoid-autoinc'
gem list --local|grep bson
gem list --local|grep mongoid
gem install bson -v 2.2.2
bundle install
cd /opt/me/sample_mongodb_app/
  rails s
  rails c



#RHEL version
  cat /etc/redhat-release
#RHEL cleaning :cache
  rm /tmp/*
  du -h /var/cache/yum
  # mkdir /home/yum
  # mount --bind /home/yum /var/cache/yum/i386/6/base/packages/
  cat "/home/yum /var/cache/yum/i386/6/base/packages none,rw bind 0 0" >
/etc/fstab
  # find /var/ -name "*.log" -print |xargs rm
  # find /opt/ -name "*.log" -print |xargs rm
  # find ~/ -name "*.gz" -print
  # find ~/ -name "*.zip" -print

#RVM
  #新ruby のインストール
　　rvm install x.x.x


#mongoDB

 # vi /etc/yum.repos.d/10gen.repo
    [10gen]
    name=10gen Repository
    ; 64 bit
    ; baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64
    ; 32 bit
    baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/i686
    gpgcheck=0
    enabled=1
 # yum install mongo-10gen mongo-10gen-server
 # service mongod start
~
~



  #centos+rails4.x
   gem 'mongoid'#,:git => 'git://github.com/mongoid/mongoid.git'
   gem 'bson_ext'
   gem 'mongoid-paranoia'#,'~>0.1', github: 'simi/mongoid-paranoia'
   gem 'mongoid_auto_increment'
   gem 'mongoid-autoinc'

  #mongoid




#github/some_body/vim メンテ方法
git add .
git status
git rm -r vim73/bundle/.vim-fuf-data/
git commit -m "update"
git pull origin master_win
git push origin master_win

#UNIX万能コマンド
　　 --help |grep  -nirE "(ignor|exclu|skip|行|名|\-e|show|list|disp|time)"

centOS

date -s "03/13 19:13 2013"

  http://www.linuxmaster.jp/linux_blog/2011/09/vmwaredevice-eth0-does-not-seem-to-be-present-delaying-initialization.html
  service network restart
	apachectl stop

  #nfs-disable
    chkconfig --list netfs
    chkconfig netfs off



■エラーメッセージDevice eth0 does not seem to be present, delaying initialization
	１．コマンド「/sbin/ifconfig -a」を実行してeth0が存在しない事を確認する
	２．「/etc/udev/rules.d/70-persistent-net.rules」ファイルを編集し、NAME="eth0"と記述されてる行を削除し、
	　　NAME="eth1"と記述されている箇所をNAME="eth0"に書き換えサーバーを再起動する
    ★vmware環境では デフォルトゲートウェイ=VMnet8のIPを指定
　　★windowsのipconfig結果ではなく、「Vmware仮想ネットワーク設定→NAT設定
ボタン」で表示されるIPアドレスを使う。通常既定値は最下位アドレスが2
	３．「/sbin/ifconfig -a」を実行してeth0のMACアドレスを取得する
	４．３で取得したMACアドレスを「/etc/sysconfig/network-scripts/ifcfg-eth0」ファイルのHWADDRの箇所にエディタで設定する
  ★VMwareをつかうときは、hostOSのVMware Network Adapter VMnet8のIPアドレスとマスクで通信しなければいけない。そのIPアドレスとサブネットクラス。サブネットマスクに注意。
	５．コマンド「ifup eth0」 を実行してeth0を起動（またはLinux自体を再起動）
	６．ネットワークに接続できることを確認する
  ★/etc/sysconfig/network でGATEWAY=****が固定的に（staticに）かいてあると、
DHCP環境でのdefault gatewayがまずいIPになる。

chkconfig --list
chkconfig --level 2345 httpd off

...が停止していますが PID ファイルが残っていますmaster が停止していますが PID ファイルが残っています
	--> ls -alt /var/run/*.pid ; rm /var/run/postmaster-9.2.pid
alternatives --display mta
rm /var/lock/subsys/postfix

DNSの設定
/etc/resolv.conf
nameserver 192.168.137.1  # VMnet8のIPアドレスを指定

#RVM
   bash -s stable < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer )

   vi ~/.bash_profile
   [[ -s "/root/.rvm/scripts/rvm" ]] && source "/root/.rvm/scripts/rvm"
   source /etc/profile.d/rvm.sh
    . ~/.bash_profile

   インストール可能なRubyのバージョンを確認します。
   $ rvm list known
   $ rvm use ruby-2.0.0-p195@rails3.2.13 --default


  root@localhost:/opt/me/tkt-redmine# rvm list
    rvm rubies
    => ruby-1.9.3-p429 [ i686 ]
     * ruby-2.0.0-p195 [ i686 ]

      # => - current
      # =* - current && default
      #  * - default

  rvm use ruby-2.0.0-p195
    rvm gemset use rails3ruby2 --default
    root@localhost:/opt/me/sample# rails -v
    Rails 3.2.13
  rvm use ruby-1.9.3-p429
    rvm gemset use rails323 --default
    rvm gemset rename rails323 rail40

#~/.gemrc
gem: --no-ri --no-rdoc

#removi rdoc and ri doc
rm -r `gem env gemdir`/doc

#rails3, rails4アプリ初期化
  #prep
  rvm use ruby-2.0.0-p195
  rvm gemset create rails405
  rvm gemset use rails405

　#required for rails3&4
  gem install therubyracer --version=0.10.2
　#required for rails4 only
  NOKOGIRI_USE_SYSTEM_LIBRARIES=1
  gem install nokogiri

  #commnt out all of therubyracer indication in Gemfle
  # https://github.com/cowboyd/libv8/issues/62
  bundle install

  #commnt in therubyracer indication in Gemfile to pass rake db:*** commands
  #otherwise you will see an error message "Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs for a list of available runtimes"
  rake db:setup

  #bootup
  git clone ***
  cd ***
  #copy frequent settngs
    cat config/database.yml ;ls -alt db; ls -alt db/migrate/
    cat .gitignore
    cat config/environments/development.rb
    cat Gefiles

  rake db:setup




#iDisplay wii tethering
   1. invoke iDisplay Server on PC
   2. invoke TetheringChanger on Android deve#1
   3. establish tethering ad-hoc connetion between PC and Android device#1
   4. turn on iDisplay on Adroid device#1, and configure IPaddress that points
  to iDisply Server#1 on PC

#MaxViwer
 remoteでViewer起動､リモートのPCのマウスを直にさわって窓を横2000にする｡
 remote viewerがわでブラウザー描画する場合は､ブラウザー枠がホスト側にはみでて
いないと､イベント細くされず描画更新されない｡



#.*rc
	 gem install wirble
	 cp *.rc ~/

#debugger:NG?
	gem install debugger
	vi RAils.root/plugin/Gemfile
		gem 'debugger'

	#NG
	gem install ruby-debug19
	gem install linecache19
	gem install ruby-debug-base19x --pre
	gem install ruby-debug-ide --pre


#Vmware
  converterをいれなくてもコンバートできる
  物理PCをVM化するまえに､VMwareWSを管理者権限で起動しないとだめ｡
#xperia
  Safe-mode:  reboot phone, Sony Ericsson or Sony appears, keep tapping menu key (volume down ).


#VIM
	yum -y install vim-enhanced
	vi /etc/profile
	 # 最終行にエイリアス追記
		alias vi='vim'
	source /etc/profile	# 変更を反映
	#1設定ファイル移植
	cd ~;rm vimhomeold.tar*;tar -cvf vimhomeold.tar .vim* *vim* .ve_* MyWiki/ .*rc  ;gzip vimhomeold.tar; cd -
	chgrp -R root .vim* *vim* .ve_* MyWiki/ .*rc
	chown -R root .vim* *vim* .ve_* MyWiki/ .*rc
	vim -S ~/Session.vim +VE +MRU
	:source ~/.vimrc
 :new +MRU
 :vnew +MRU
CTRL-W =        Make all windows (almost) equally high and wide,
 : set scrollbind   ;2窓同時スクロール　左ペインでコマンド発行
	#diff
		:vertical diffsplit C:\VMstatic\SOAP\SOAPClientExample-1.2\adsoltest.xml
	#今のペインをdiffモードにきりかえ｡左右両窓でやる
		:diffthis
2005年04月21日
vimエディタで「文字コード、改行コードを変更して保存する。」
vimエディタで、ファイルの文字コード、改行コードを修正、もしくは変更する時の話。

ファイルの文字コードや、改行コードを変更する時は、
変更したいファイルを開いた状態で、


・spell checker
  :setlocal spell spelllang=en_us | set spell
  :set nospell
  :h spell
  [s / ]s  <--  jump prev/fwd
  z=       <--- suggest
  zg / zw  <--- register current word as good/wrong

  #カーソル下利用
    * 検索
    yiw yank


	#plugin
		#align
i	comment box square:     :\abox

		:AlignCtrl |
		:Align -\+
" 最初のセパレータを左寄せ
" 2番目のセパレータを左寄せ
" 3番目のセパレータを右寄せ
" 以後、ループ
:AlignCtrl <<>
:Align -\+




  " 文字コードutf-8を指定保存。
  :set fenc=utf-8
  " Unixの改行形式を指定。
  :set ff=unix

  " Windowsの改行形式を指定。
  :set ff=dos
  " Macの改行形式を指定。
  :set ff=mac

  " エンコーディングeuc-jpを指定して開き直す。
  :e ++enc=euc-jp
  " エンコーディングshift_jisを指定して開き直す。
  :e ++enc=shift_jis
  " エンコーディングutf-8を指定して開き直す。
  :e ++enc=utf-8

  「++enc」「++ff」を同時に指定する場合のコマンド例
  :e ++ff=unix ++enc=utf-8


・文字コードの変更

:set fileencoding=文字コード
:set fenc=文字コード (上のコマンドの短い形式。こちらでも良い。)
:set fileencoding=euc-jp (エンコーディングEUC-JPに変更。)
:set fileencoding=shift_jis (エンコーディングSHIFT_JISに変更。)
:set fileencoding=utf-8 (エンコーディングUTF-8に変更。)

・ファイルフォーマットの種類の変更

:set fileformat=ファイルフォーマットの種類
:set ff=ファイルフォーマットの種類 (上のコマンドの短い形式。こちらでも良い。)
:set fileformat=dos (改行をWindowsの形式に変更。)
:set fileformat=mac (改行をMacの形式に変更。)
:set fileformat=unix (改行をUnixの形式に変更。)


  #vimgrep補習
  " カレントディレクトリ以下のあらゆるファイルを対象にする
  :vim {pattern} **
  " app/views以下のあらゆるファイルを対象にする（ディレクトリを再帰的に検索）
  :vim {pattern} app/views/**
  " app/views/users内のファイルを対象にする
  :vim {patter} app/views/users/*
  " app/views以下で_で始まるerbファイルを対象にする
  :vim {pattern} app/views/**/_*.erb

  何度も同じ検索対象を使う場合?――>## 展開
  :ar path/to/search/dir/**
  :vim foo ##




#Redmine
		cd /opt/personfinder
		#boot with ruby-debug
			rails server -u
      or
      rails s --debugger --port=80

		http://192.168.18.130/redmine
		 ls -alt /usr/local/lib/ruby/gems/1.9.1/gems


#redmine class counting
	grep -nirE "^ +def" * --exclude=*~ > /home/apl/TMP/rakestats.txt
	grep -nirE "^ +def" * --exclude=*~ >> /home/apl/TMP/rakestats.txt
	grep -nirE "^ *class " * --exclude=*~ > /home/apl/TMP/tmp2.txt
	grep -nirE "^ *class " * --exclude=*~ >> /home/apl/TMP/tmp2.txt

#git
	vi /home/apl/.netrc
	vi /home/apl/.gitconfig
	 mkdir redmine; chown apl /opt/redmine/; chgrp apl /opt/redmine/
	 git clone https://github.com/LGDIS/LGDIS.git /opt/redmine
	* git pull https://github.com/LGDIS/LGDIS.git master
	 cd redmine; git branch -a; echo "";git branch ; echo "";
	 git checkout master

     su - root
      bundle install
    su - apl
    cd /opt/redmine/

    rake redmine:plugins:migrate
      rake redmine:plugins:migrate RAILS_ENV=******
    rake db:migrate
    rake db:seed
    rake generate_secret_token
    rails runner Batches::MemcacheStore.execute

    rails server　--debugger
    rails console　--debugger
    rails server

　#Redmine
    admin>設定>プロジェクト>モジュールにチェック
    個別PJ>設定>モジュールにチェック

    /opt/redmine/plugins/lgdis/init.rb

    service httpd restart
    ※ポート3000はwebrick ,なしはapache
#redmine migrate options
/opt/fix/LGDIS/lib/redmine/plugin.rb
424     # Migrates all plugins or a single plugin to a given version
425     # Exemples:
426     #   Plugin.migrate
427     #   Plugin.migrate('sample_plugin')
428     #   Plugin.migrate('sample_plugin', 1)


 	------------------

    #準備
i
	 #history |grep mv
		 grep -nirE "debugger" /opt/fix/LGDIS/plugins/* --include=**  --exclude=*.sw* --exclude=*~ --exclude=*spec*
		Rails.root.Gemfile* Plugin[pluginname]Gemfile* を待避

	mv ../Gemfile*                                                 /opt/fix/stack-railsroot/
	mv lgdis/Gemfile*                                              /opt/fix/stack-LGDISPluginroot/

i	#e-mail送信前提
	mv config/environments/development.rb                          /opt/fix/stack-config/

	mv plugins/lgdis/app/controllers/deliver_issues_controller.rb  /opt/fix/stack-pluginCtrlr
	mv plugins/lgdis/config/destination_list.yml                   /opt/fix/stack-config/
	mv plugins/lgdis/lib/lgdis/issues_controller_patch.rb          /opt/fix/stack-liblgdis/
	mv plugins/lgdis/app/controllers/deliver_issues_controller.rb  /opt/fix/stack-appctrlr/
	mv plugins/lgdis/app/controllers/shelters_controller.rb        /opt/fix/stack-appctrlr/
	mv plugins/lgdis/files/xml/commons_evacuation.xml              /opt/fix/stack-xml
	mv plugins/lgdis/files/xml/some_bodySample.xml /opt/fix/stack-xml
	mv plugins/lgdis/files/xml/commons_evacuation.xml.sato         /opt/fix/stack-xml
	mv config/environments/development.rb                          /opt/fix/stack-config/
	mv plugins/lgdis/lib/lgdis/issue_patch.rb                      /opt/fix/stack-liblgdis/


    cp -p /home/apl/.gitconfig /root/
    cat  /root/.gitconfig
    git checkout master
    git status
    git pull			差分解消
    git status
    git branch -a
    git bra:qnch
    git push origin master
    ls -alt /root/.git*
    git status
    git rm config/routes.rb~ db/schema.rb
    git rm config/environments/development.rb~

	★refrain
    git status
    git st
    git diff [suspicious filename X]
    git add [suspicious filename X]

	★refrain
    git commit -m "some_body:苗字外部出力作成部分 不要ファイル削除版"
    git pull	#<----auto-merge 同じ窓で作業せず､初回おpull履歴を別窓に貼って一気に修正すること｡
    git add [手でmerge編集した個別のconflicted file]

		git diff
	★end of refrain


    git push origin master
    git branch -a
		Rails.root.Gemfile* Plugin[pluginname]Gemfile* をdiff後に復帰

		remote 削除はgit rm [deletable remote-filename]


  ★pattern#2 rebase and push
　　#windows
    find . -name *.rdf -o  -name *.sw* -o -name *.log -o -name *.*~ -o -name Thumbs.* -print |xargs rm --verbose
　　#linux
    find . -name *.rdf -o  -name *.sw* -o -name *.log -o -name *.*~  -print |xargs rm --verbose

rm ../public/*.rdf;  rm ../logs/*.log

find ./ -name *vim73* -print |xargs rm -rf --verbose

    git add [files 1..n]
    git commit -m ""
    git status
    git fetch
    git status
    git stash save
    git pull --rebase origin module_board
    git status
    git push origin module_board
    git stash pop

 ★こわれそうなとき、堂々巡りのときはcloneしなおす
　　git reflog
    git reset --hard HEAD@{6}


日々の開発のブランチの使い方
1. git checkout master
2. git pull origin master
3. git checkout -b feature-XXXXX
4. 修正をガシガシやる
5. git add && git commmit
6. 自信がない場合はここでbackup用のブランチを作成しとくと、めちゃくちゃになってもここで作ったブランチに戻せばなんとかなる。
7. git pull --rebase origin master
8. コンフリクトしたら色々直してaddして　git rebase --continue
9. git checkout master
10. git merge feature-XXXX --no-ff
11. git push origin master

feature-XXXとかはtopicブランチとかで検索すると意味がわかったりするかもしれませんが。
とりあえず機能追加はfeature-xxxx
バグフィックスはhotfix-xxxx



	#git そのほか
		stash一覧　（＋詳細つき）
			git stash list (-p)

      Stash-merge-conflict解消方法
      % git checkout --theirs test.txt
      直前のマージが衝突を起こしてまだ解決されていない時、ステージングエリアには“両側”の内容が記録されています。
      stashした内容を作業ツリーに持ってくるには--oursオプション、
      マージした内容を持ってくるには--theirsオプションを付けてgit checkoutコマンドを実行します。
      コンフリクトが発生した直後の状態にtest.txtを戻したい場合は、次のコマンドを実行します。
      % git checkout --merge test.txt



    ★GIT禁則NG:

       Git revert [commit-id]も変な手編集のあとは怪しい動作をする。
    　 stashは手でマージするな・。



    git checkout [filename/commit-id]
        変更前に移動したりまたもとに戻ってきたりできる
        ここでの違いは、ワーキングツリーの変更されたファイルは保護されることだ。も
    し checkout コマンドに -f オプションを渡したら、reset --hard をしたのと同じこ
    とになる。ただし、checkout がワーキングツリーだけを変更するのに対して、reset
    --hard は現在のブランチの HEAD を、指定したバージョンの tree を参照するように
    変更する



    #git localでいろいろ とりけす方法
      git checkout [filename/commit-id]
          変更前に移動したりまたもとに戻ってきたりできる
          ここでの違いは、ワーキングツリーの変更されたファイルは保護されることだ。も
      し checkout コマンドに -f オプションを渡したら、reset --hard をしたのと同じこ
      とになる。ただし、checkout がワーキングツリーだけを変更するのに対して、reset
      --hard は現在のブランチの HEAD を、指定したバージョンの tree を参照するように
      変更する

      git revert
          変更をなかったことにするためのコミットを作る(ログに残る)
      git reset
          変更をなかったことにする

    #git remote でいろいろ とりけす方法
     git push -f origin HEAD^:master
     #そのあとローカルの変更をpush

           --------------------------------------------------
        git reset --hard 05203ab6a8bfb4e18b01d831a745aad31fe26074
        git reset HEAD [filename-in-relative-path]

      #Gemfile.lockなどを中央管理からけすやりかた
        #管理下においてpush
        git add Gemfile.lock
        git add app/assets/javascripts/application.js
        git commit
        git push origin master
        #管理下からはずしてpush
        git rm app/assets/javascripts/application.js
        git rm Gemfile.lock

        <div class="actions">
          <%= f.submit %>
        </div>
      <% end %>
      root@localhost:/opt/me/sample# cat app/views/x06s/index.html.erb
        git commit
        git push origin master

      #git commitとりけし
      「git reset --soft filename」 → ワークディレクトリの内容はそのままでコミットだけを取り消す。
      「git reset --hard filename」 → コミット取り消した上でワークディレクトリの内容も書き換える。

      message cancel
      git commit --amend -m "fixed_commit_message_desu" -->



    #git検索
      特定のファイルの変更履歴を見る場合は
      git blame db/migrate/20130601182525_create_categories_contents.rb

      git log -p filename
      git log --follow -p filename

      コメント検索
      git log --grep=検索語正規表現

     ファイル名一覧だけ表示
     git show --name-only 1e78c04013e75b9faccc8d85c5d15741d770ebcd

     ～以降の更新ファイル名差分だけ表示
　　  git diff --name-only eb7d5ebe05fae487fa7a89a03e4a0202c50cdda3




    #git試行錯誤環境
    　git co -b branchname
    　git co master
      git merge　branchname
     http://git-scm.com/book/ja/Git-%E3%81%AE%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E6%A9%9F%E8%83%BD-%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%A8%E3%83%9E%E3%83%BC%E3%82%B8%E3%81%AE%E5%9F%BA%E6%9C%AC


    #git障害対応
      *GIT: error: bad index file sha1 signature fatal: index file corrupt
        rm .git/index; git reset
      *error: src refspec maser does not match any.
      *error: failed to push some refs to 'https://github.com/*****/*****.git'
        git show-ref ;
        git push origin HEAD:master

      *unable to update local ref)
         git gc --prune=now
         git remote prune origin

      *git branch detached from ([local branch name])
        差分fileをバックアップ待避 (Rails4root/binは不要)
        git checkout master
        差分fileを上書き復元
        commit & push
      * fatal: Unable to create '/opt/me/oksales_unistandard/.git/index.lock':
        rm .git/index.lock
#Windows short-cutkey
  Ctrl+Esc-Esc-Tab: task bar gropsにフォーカス移動､あとは矢印キーで選択

#Rails予約語　:-aで終わるロマンシュ語っぽい英語､information,policeもか?

#rvm-combination
 oksales     ;  rvm use ruby-2.0.0-p195; rvm gemset use rails405
 rubylancer  ;  rvm use ruby-1.9.3-p429; rvm gemset use rails323
 samplescodes;  rvm use ruby-1.9.3-p429; rvm gemset use rails323

#typus http://docs.typuscmf.com/index.html#installation
  gem 'typus'
  bundle install
  rails generate typus
  vi config/typus/[modelname].yml
    #to_labelがrenderエラー｡列名の定義もこれらモデルごとのファイルでおこなう｡
    # default: to_label
    default:

  #uninstall
    rails destroy typus
  #customize view
    rails generate typus:views

　#生成でひっかかればコメントアウト! 設定ファイルは config/typus/*yml, config/initializers/typus*

#typus リスト制御部分:調査中
  root@localhost:/opt/me/oksales_unistandard# grep -lnirE "@(data|items|data) *=" /usr/local/rvm/gems/ruby-2.0.0-p195@rails405/bundler/gems/typus-d06f85c7b345/* --exclude=*.sw* --exclude=*~ --exclude=*spec* --exclude=*log  --exclude=*svn* --exclude=*.log

sssssssssssssssss
/usr/local/rvm/gems/ruby-2.0.0-p195@rails405/bundler/gems/typus-d06f85c7b345/app/controllers/admin/resources_controller.rb
149   def get_objects
150     binding.pry
152     @resource = @resource.with_deleted

#N年に一度のPCメンテ作業
　モバイルバッテリー残電力チェック　:一番確実なのは純正バッテリー空にしてモバ
イルバッテリーだけで起動して残を目チェックすること｡電源オプションなどは期待した度差をしない

  HDDデータ移管: フォーマットはNTFSできまり｡パーティション統合はするな｡ウイル ス飛散を助長する｡

#ActiveADmin n Rails4　結論:typusの様には自動で既存モデルをよまないので 後述★の様な個別指定が要る｡また､既定で日本語ロケールを表示はしない｡ それから､ 保存しようとするとStrong parameter対応の記述をコントローラー単位でかかねばエ ラーになる｡ typusではこれらが全自動｡
  vim Gemfile
    gem 'activeadmin', github: 'gregbell/active_admin'#, branch: 'rails4'
  rails g active_admin:install --force
  ★rails g active_admin:resource product

  vim config/application.rb
    #coment out
    #     I18n.enforce_available_locales = true

  vim config/routes.rb
    #最下実行行に移動した方が無難
       devise_for :admin_users, ActiveAdmin::Devise.config
    end

  vim config/initializers/kaminari.rb
    #will_paginate使用の場合､以下を追加
    Kaminari.configure do |config|
      config.page_method_name = :per_page_kaminari
    end

  vim /opt/me/oksales_unistandard/db/migrate/20140208075341_create_active_admin_comments.rb
    change_tableブロック内を一切コメントアウト

  rake db:migrate
  vim config/application.rb
    #commentしかのをもどす｡
  bundle exec rails s
  #open localhost:3000/admin
  #login;
    Email: admin@example.com
    Pass: password



#SVN #Subversion
  TortoiseSVN ダウンロード
    http://tortoisesvn.net/downloads.html
  eclipse ssh mount plugin
    ●
  #svn up/down
    svn status
    svn checkout svn+ssh://***.***.***/(directory) [checkout-name --username --password ***]
      svn list https://172.18.200.144/jalt_internal/J-ALERT-SOURCE/trunk/10_受信機設定管理ツール/SetupInfoManagement --username kaihatsu4
    svn update
    svn commit svn+ssh://***.***.***/(directory) [option]
    svn add [filename1] [filename2] ...
    svn commit -m "活動名 コミット備忘録" a[filename1] [filename2] ...



#svn
 vim ~/.subversion/config
[miscellany]
 global-ignores = *.sw? *.*~ *vim73

 ながれ
　SVNでbranchからco --> branchにcommit

#aptana <-> vim
 S-C-l == shortcuts
 jump
   C-Q  <>  C-o

#DSL
  #CSS & SLIM/HAML
    mabopako: margin/border/padding/contents
    医者ｸラップ: .=> class, # =>ID
  #prototype.js
    #utility function :  $FARH(obj) (Fetch/Array/Range/Hash---conversion of Object)
  #DNS records
    A-CNAME NS-MX-SOA : Address



#postgres
  service postgresql-9.2 start
	su - postgres
	psql redmine_pg_dev
  psql SetupInfoManagement_production -U postgres -W
  #注意点
    .config/database.yml はhost: 127.0.0.1にしないと､既存user/pwでもident認証
にひっかかる｡postgresqlはident認証(unix id/pw = postgres d/pwで一致)がデフォル
ト｡
  #gem pg  fileでpgのインストールをもとめられたら
     REHL:
      事前にPATHとsoci-postgresql-devel.i686
       を準備しないとgem install はこける｡
       in case of REHL linuxes(REHL, centOS, fedora)
       you hae to make sure PATH and/or postgresql-devel is prepared as example below;
       export PATH=/usr/pgsql-9.2/bin:$PATH
       yum install soci-postgresql-devel.i686
      gem "pg", ">= 0.11.0", :platforms => [:mri, :mingw]
  　
    CentOS:
      パス指定しないとエラー Can't find the 'libpq-fe.h header
      gem  install pg -- --with-pg-dir=/usr/pgsql-9.2/

  #peer認証:既定のpeer認証では、ユーザ名がUnixのユーザ名と一致していないとエラーになります。
  /etc/init.d/postgresql-9.2 stop
   vim /var/lib/pgsql/9.2/data/pg_hba.conf
     --> peer を　passwordに
       81 # local   all             all                                     peer
       82 local   all             all                                  password
  /etc/init.d/postgresql-9.2 start
　　
　#connect t DB
   psql redmine_pg_dev -U root

  #db creation
    CREATE DATABASE tkt_redmine_development;
    \l:
  #user creation
    createuser root;
    SELECT * FROM pg_shadow;

  #password creation
    alter user postgres with password 'root';

　　su - postgres
    /etc/init.d/postgresql-9.2 stop
    psql redmine_pg_dev -U postgres
    alter user root with password '';
    /etc/init.d/postgresql-9.2 start


	select * from schema_migrations ;
	 \d issues_addtion_datat
	ALTER evacuation_advisories rename type to advisory_type;

	PostgreSQLの基本的(よく使う)コマンドです。
    \c dbname               db 接続
		\l　　　　　　　　　　　データベースの一覧
		\d+　　　　　　　　　 　テーブル一覧
		\d+ テーブル名|シークエンス名　　　テーブル|シークエンスの項目(フィールド)確認
      cf: mysql の show full columns [table_name]
		\i sqlファイル名　 　SQL(スクリプト)ファイルの実行
		\s                     コマンド履歴表示
		\q　 　　　　　　　　　psqll切断
		\x                     検索結果タテ表示　トグルで表示切り替え
      cf: mysql はSQL文末に \G;
           mysql の show full columns [table_name]

	root@localhost:/opt/fix/LGDIS# psql --version
	psql (PostgreSQL) 9.2.1

	ALTER TYPE
	Name
	列　拡張
		alter table hoge alter COLUMN hoge_column TYPE varchar(10)
	alter table issues add  mail_subject varchar(15)
/#
     cf: mysql列追加
alter table contents add deleted_at datetime;
     cf: mysql列型変更
      mysql> alter table contents change column newuser_max_num newuser_max_num  int;
     cf: mysqlt 列削除
　　　mysql> alter table categories_contents drop id;

#CSV出力
　　mysql> select * from stores into outfile '~/stores.csv' fields terminated by ',' optionally enclosed by '"' ;
  ls -alt /var/lib/mysql/realaf_development/;

#CSV入力
　RailsではまずCSVをUTF8保存してVIコマンド
  : set fenc=utf-8 | :set ff=unix | :w!
  | %s/^\w*,/NULL,/gc
　注意1:ID列のようなauto incrementカラムへはNULLを挿入する｡
        しかし時刻列にNULLをインポートするとNULLではなく0000-00-00 00:00:00 に
化けたりして､論理削除前提の動作環境では変になる｡(取得0件)
        Excelで空白列にNULLとかくと変なことになりうまくいかない｡

  LOAD DATA LOCAL INFILE "/opt/me/oksales_unistandard/db/seeds/var_prices.csv" INTO TABLE var_prices FIELDS TERMINATED BY ',';
　注意2:LOAD文はCSV名とtable-name二カ所なおすこと｡

  結論:デフォルトでUTF8-UNIXでない環境RoRにむかない｡データ作成に手間取るだけ｡
　-->SeedImporter.rbクラスだと､列名不整合やautoincrement対策もしてくれるのでよい｡ただしdeleted_at以降は削れ｡


# mysqlに接続（default character set はutf8に）
chkconfig --level 345 mysqld on
service mysqld start
 mysql -u root -p
	set names utf8;
	 show variables like "character !・>%";
	create database bikkuri_development
	create database bikkuri_mission_development
	create database bikkuri_hase_development
migrateとサーバー起動
	bundle exec rake db:migrate ;
	bundle exec rake db:seed
時計上の時間で検索したい場合は
Time.parse("2012-09-20 22:35").gmtime
といったようにやる。 MySQL上での時間データは、時差を加味しない時間が保存され
ているため、gmtimeで調整する/

SVN-trunkのダウンロード方法
★データ仕様書とダミーデータがあるだけ。
  svn list svn+ssh://svn.drecom.jp/svn/sg/bikkuri/doc/03_開発ドキュメント/

　"mysql履歴は vi ~/.mysql_history


#Ruby
present? blank? だけでなく try?(:symbol,args4symbol

Mysql2::Error: This version of MySQL doesn't yet support 'LIMIT & IN/ALL/ANY/SOME subquery':
User.where(:id=>User.limit(3))じゃなくてUser.where(:id=>User.limit(3).map(&:id))で回避(rails3.2にて発生)

　　　

plugins/lgdis/db/migrate/008_create_evacuation_advisories.rb
+    add_index(:evacuation_advisories, :area, :unique => true, :where => 'deleted_at is NULL')
  	56 	+    add_index(:evacuation_advisories, :identifier, :unique => true, :where => 'deleted_at is NULL')



#1-liner
	#grep結果ファイル中文字列をかきかえ
	grep -lnirE "issueorlift" .  --include=**  --exclude=*.sw* --exclude=*~ --exclude=*.log --exclude=*spec* |xargs  ruby -p -e  '$_.gsub!(/issueorlift/, "issueorlift")'  -i
		rake db:seed

  #ps結果をgrepしてkill
   kill -9 `ps -ef |grep -nirE "(rub|rail|vim)"| ruby -ane 'p $F[1].to_i'`



	irb(main):020:0> puts Issue.first.methods.grep(/addition/i)

	Issue.first.issues_additional_data[0].remarks

	insert into issues_addtion_data values(2, 15, '日本測地系', -141.17184600, -38.39582800, '宮城県気仙沼市波路	上岩井崎１の地球の裏側', 'test for issue#15')
	insert into issues_addtion_data values(1, 14, '日本測地系',, '１',             'test for issue#14');
	insert into issues_addtion_data values(3, 14, '日本測地系', -179,          -89,          '南極近辺ロンドンの真裏',                   'test for issue#14-3');
	SELECT "issues_addtion_data".* FROM "issues_addtion_data";
	 update  issues_addtion_data set issue_id = 14 where id=2;

	insert into issue_geographies values(2, 15, '日本測地系','宮城県気仙沼市の地球の裏側', '-38.39582800-141.17184600',  'test for issue#15')
	insert into issue_geographies values(1, 14, '日本測地系','宮城県気仙沼市波路上岩井崎１',             '+38.82815400+141.60417200',  'test for issue#14');
 insert into issue_geographies values(3, 14, '日本測地系','南極近辺',                   '(-179,-89)', NULL,NULL, 'test for issue#14-3');

 insert into issue_geographies values(4, 14, '日本測地系','南極近辺point', '(-179,-89)', NULL,NULL, 'test for issue#14-3','2010-11-30T14:59:00+09:00','2010-11-30T14:59:00+09:00');
 insert into issue_geographies values(6, 14, '日本測地系','南極近辺line# ',NULL,'((-179,-89),(+141, +38))',NULL, 'test for issue#14-3','2010-11-30T14:59:00+09:00','2010-11-30T14:59:00+09:00');
 insert into issue_geographies values(5, 14, '日本測地系','南極近辺polygon',NULL,NULL,'((-179,-89),(+141, +38),(+142,+38),(-179,-89))', 'test for issue#14-3', '2010-11-30T14:59:00+09:00','2010-11-30T14:59:00+09:00');

新
INSERT INTO evacuation_advisories (advisory_type, alert, alerting_area, alias, area, area_kana, category, cause, changed_at, created_at, deleted_at, district, emergency_hq_needed_city, emergency_hq_needed_prefecture, evacuate_from, evacuate_to, evacuation_order, evacuation_steps_by_authorities, full_name, head_count, headline, households, identifier, issueorlift, issued_at, lifted_at, message, remarks, siren_area, sort_criteria, staff_no, updated_at) VALUES ('2', '警報内容03', '範囲 03', '別名称 03', '地区名称03', 'かないち','09', '原因03',NULL, '2010-11-30T14:59:00+09:00', NULL, '2','市町村 03', '都道府県 03', '要避難地域 03', '避難先03', '指示内容 03', '講ずべき措置03', '発令権限者03', 2700, 'ヘッドライン 03', 1000, '04202E00000000000029', '1', '2010-11-30T14:59:00+09:00', NULL, '情報文 03','備考 03', 'サイレン03', '2', '99999', '2010-11-30T14:59:00+09:00') ;

旧
INSERT INTO evacuation_advisories (advisory_type, alert, alerting_area, alias, area, area_kana, category, cause, changed_at, created_at, deleted_at, disaster_code, district, emergency_hq_needed_city, emergency_hq_needed_prefecture, evacuate_from, evacuate_to, evacuation_order, evacuation_steps_by_authorities, full_name, head_count, headline, households, identifier, issueorlift, issued_at, lifted_at, message, project_id, remarks, siren_area, sort_criteria, staff_no, updated_at) VALUES ('2', '警報内容03', '範囲 03', '別名称 03', '地区名称03', 'かないち','09', '原因03',NULL, '2010-11-30T14:59:00+09:00', NULL, 'lgdrm','2','市町村 03', '都道府県 03', '要避難地域 03', '避難先03', '指示内容 03', '講ずべき措置03', '発令権限者03', 2700, 'ヘッドライン 03', 1000, '04202E00000000000029', '1', '2010-11-30T14:59:00+09:00', NULL, '情報文 03', 3, '備考 03', 'サイレン03', '2', '99999', '2010-11-30T14:59:00+09:00') ;

 insert into edition_managements values (1,5,1,105,1,1, 'a2b33758-31a3-4a41-800e-4e9cc82147b1' , '2010-11-30T14:59:00+09:00', '2010-11-30T14:59:00+09:00');

	alter table issues alter COLUMN xml_head_title TYPE varchar(100);
	alter table issues add  mail_subject varchar(15)
	alter table issues add closed_at timestamp without time zone;
	alter table issues add  mail_subject TYPE varchar(15);
	alter table issues add summary varchar(4000);
	alter table issues add type_update varchar(255);
	alter table issues add published_at timestamp without time zone;
	alter table issues add opened_at timestamp without time zone;
	alter table issues add closed_at timestamp without time zone;
	alter table issues add delivered_area varchar(255);
	alter table evacuation_advisories alter COLUMN project_id DROP NOT NULL;
	alter table evacuation_advisories alter COLUMN disaster_code  DROP NOT NULL;
	alter table evacuation_advisories add issueorlift varchar(100);






----------------------------------------------------------------

INSERT into evacuation_advisories (
project_id,
disaster_code, sort_criteria, issueorlift, area,
issued_at, changed_at, lifted_at,
households, head_count,
identifier, category, cause, advisory_type,
staff_no, full_name, alias,
headline, message,
emergency_hq_needed_prefecture, emergency_hq_needed_city,
alert, alerting_area, siren_area,
evacuation_order, evacuate_from, evacuate_to, evacuation_steps_by_authorities,
remarks, deleted_at,created_at,updated_at
)values (
5,
'lgdrm-APPLIC参照','避難指示','発令', 'area-100-石巻市某地区',
'2010-11-30T14:59:00+09:00',NULL ,NULL ,
3, 7,
'県2市3管理番号5','WN','cause-4000-CAPでは｢category/event｣に相当。減災情報共有スキーマでは避難勧告発令情報の「発令要因」に相当-type-2-APPLIC準拠','TS',
'staff_no01', 'full_name-100-氏名間全角スペース1文字', 'alias-100-氏名間全角スペース1文字',
'headline-100-', 'message-4000-',
'emergency_hq_needed_prefecture-100-宮城県', 'emergency_hq_needed_city-100-石巻市',
'alert-4000-警報文', 'alerting_area-4000-全国もしくは特定地域名', 'siren_area-4000-全国もしくは特定地域名､或いはサイレン不使用',
'evacuation_order-4000-避難措置の指示内容', 'evacuate_from-4000-要避難地域', 'evacuate_to-4000-避難先地域', 'evacuation_steps_by_authorities-4000-緊急通>報発令_攻撃の予防鎮圧_安全経路場所',
'remarks-4000-備考', NULL, '2010-11-30T14:59:00+09:00', '2010-11-30T14:59:00+09:00'
)
;

----------------------------------------------------------------


指示等なし、避難準備、避難勧告、避難指示、警戒区域


#diff
	C:\VMstatic\0000000-215\trunk\document\技術検討\AtomFeed
		・TOPプロジェクトにて、Feed用のカスタムクエリを作成し、購読させる
	i	・カスタムクエリの範疇にて、抽出条件のカスタマイズが可能



#redmine-plugin
	rails g redmine_plugin_model lgdis issues_addtion_datum id:integer:yes issue_id:integer

      create  plugins/lgdis/app/models/issues_addtion_datum.rb
      create  plugins/lgdis/test/unit/issues_addtion_datum_test.rb
      create  plugins/lgdis/db/migrate/005_create_issues_addtion_data.rb



■SOAP
	rubyでsoapサーバを作る - hippos-lab::net
	    WSDLの作成
	    wsdl2rubyでスケルトンを生成
	    中身を実装

	SOAPでは次のような事柄が規定されています。
	● エンベロープ構成要素
	├ メッセージ構成
	└ 処理仕様
	● エンコーディング規則
	└ データのシリアライズメカニズム
	● RPC表現規則
	└ 要求と応答の規則


	#server
	 wsdl2ruby.rb --wsdl a.wsdl --type server --force

	#client
	 wsdl2ruby.rb --wsdl a.wsdl --type client --force


	実行
	ターミナル1
	 $ ruby -I. CalcServer.rb

	ターミナル2
	 $ ruby -I. CalcServerClient.rb



	・Rubyで実行

	1.root権限で以下のコマンドを実行（soap4r-ruby1.9ライブラリのインストール）
	gem install soap4r-ruby1.9

	・Railsで実行

	2.Gemfileに以下を追加
	gem "soap4r-ruby1.9"

	3.下記コマンドを実行
	bundle install

	参考URL
	http://route477.net/w/?RubySOAPt（Route 477 - RubyでSOAP）




	コモンズノードシステム上の SOAP 発信設定 は、
	http://schemas.xmlsoap.org/soap/http
		publish(msg:any)
		返値
			getCode():int
			getResult():any




	公共情報コモンズ　マスタ管理システムの認証IDとパスワードを
	開発目的用につかいたいので､テスト用のIDとパスワードで十分です､
	https://www.publiccommons.ne.jp/SAMLService/SSO?returnURL=http%3A%2F%2FOS-PBS01%2FAssertionConsumer%2FSAML%2FArtifact&target=JJnDgAFi1PwDYjOs
		nttcom0@ishinomaki-city
		masasato@ishinomaki-city




■SOAPの問題点
	getCode
	X509




RESQUE
	 service redis restart
	rake resque:work                          # Start a Resque worker
	rake resque:workers                       # Start multiple Resque workers.
	rake resque:work QUEUE='*'
	rails s


mail
	BCC=ON

	#A社からは外部不特定通信先へのSSH通信(:443)とSMTP通信(:25)はみとめられていない｡したがってSMTP機能をつかったﾒｰﾙ配信機能はローカルホスト環境で行った｡

#ポート開放8
	#停止
	/etc/init.d/iptables stop
	#無効
	chkconfig iptables off
	#状況確認
	/etc/init.d/iptables status
	vi /etc/sysconfig/^Ctables
	vi /etc/postfix/master.cf


    #postfix

        #インストール
        yum install postfix


     #設定のながれ
        vi /etc/postfix/main.cf
        hostname
        mkdir /root/Maildir; mkdir /home/apl/Maildir
        chmod 700  /root/Maildir; chmod 700  /home/apl/Maildir
        chown root:root  /root/Maildir
        chown apl:apl  /home/apl/Maildir
        /etc/rc.d/init.d/postfix restart

     #動作確認
	#ポート開放確認
        telnet localhost 25
	 quit

	#サーバーローカルshellレベルでの直接送信
        echo test|sendmail root


	#Mailbox確認(Mailbox型式は暫定的にMailDir型式)
        date;ls -alt /[$USERHOME]/Maildir/new
	cat /root/Maildir/new/*
        	例)	date;ls -alt /root/Maildir/new
					date;ls -alt /root/Maildir/new; ls -alt  /home/apl/Maildir/new/
					cat /home/apl/Maildir/new/13617*

	#Redmine admin>adminユーザー情報変更
	http://192.168.18.130:3000/users/1
		メールアドレス	root@localhost.localdomain　に設定
		password再設定
		time-zone	GMT+9 Tokyo 再設定

	#Redmine admin>設定>管理>メール通知画面　右下最下部のテストメール送信リンクでの確認
	http://192.168.18.130:3000/settings/edit?tab=notifications
		デフォルトの送信者名redmine@example.netを適宜変更して保存してから送信リンクをクリックしてテストする｡保存しないでクリックするとメールヘッダーの送信者名は変わらない｡
i #
  #Rails環境設定
#設定編集 vi /opt/fix/LGDIS/config/environments/development.rb

	#規定値:config.action_mailer.raise_delivery_errors = false　を以下のごとく変更;
	config.action_mailer.perform_deliveries = true
	config.action_mailer.raise_delivery_errors = true
	Rails.application.config.action_mailer.perform_deliveries = true
	Rails.application.config.action_mailer.raise_delivery_errors = true

  #Uglifier無効化
    # Compress JavaScripts and CSS
    #some_body switched from true to false below
    config.assets.compress = false
    #some_body transplanted from development.rb
    # 必要に応じてproduction.rbにも以下を記述 Expands the lines which load the assets
    config.assets.debug = true




#IRB/ConsoleモードでRailsを起動し､以下のテストコマンド発行
<SMTP-Plain>
Lgdis::ExtOut::Mailer.setup( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "root@localhost.localdomain").deliver
Lgdis::ExtOut::SMTP_JichiShokuin.send_message({"mailing_list_name" =>"root@localhost.localdomain", "title" => "title漢字", "message" =>"sss漢字-------------"}, false)
Lgdis::ExtOut::Mailer.setup( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "apl@localhost.localdomain").deliver
Lgdis::ExtOut::Mailer.setup_auth( "apl@localhost.localdomain","SMTP-AUTH引数0", "########################################").deliver

/usr/local/lib/ruby/gems/1.9.1/gems/mail-2.4.4/lib/mail/message.rb
   229                                  debugger
   230          #debugcode  ActionMailer::Base.smtp_settings  ActionMailer::Base.raise_delivery_errors   ActionMailer::Base.perform_deliveries
=> 231          delivery_handler.deliver_mail(self) { do_delivery }

 "utf-8", "some_body@di-system.co.jp", "some_body@di-system.co.jp", "AlphaNumerics")


<SMTP-AUTH>
★Rootパスワードは社外秘
Lgdis::ExtOut::Mailer.setup_auth( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "root@localhost.localdomain", "root", "1qazxsw2").deliver
Lgdis::ExtOut::Mailer.setup_auth( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "root@localhost.localdomain", "apl", "AlphaNumerics").deliver
★MTAサーバー(postfixなど)にSMTP-AUTHの設定がされていない状況で､AUTHのコマンドを叩くと当然失敗する｡
これを複数回くりかえすと､不正接続とみなされて､正しいSMTP-PLAINでのコマンドも失敗する｡
→設定に工夫をくわえると解消される可能性あり｡

 Lgdis::ExtOut::SMTP_JichiShokuin.send_message({"mailing_list_name" =>"some_body@di-system.co.jp", "title" => "title漢字", "message" =>"sss漢字-------------"}, false)
[224, 233] in /usr/local/lib/ruby/gems/1.9.1/gems/mail-2.4.4/lib/mail/message.rb
   224      #  mail = Mail.read('file.eml')
   225      #  mail.deliver
   226      def deliver
   227        inform_interceptors
   228        if delivery_handler
=> 229          delivery_handler.deliver_mail(self) { do_delivery }
(rdb:1) delivery_handler.deliver_mail(self) { do_delivery }
SMTP-Plain postfix bug
Net::SMTPFatalError Exception: 554 5.7.1 <some_body@di-system.co.jp>: Relay access denied
Gmail bug
Encoding::CompatibilityError Exception: incompatible encoding regexp match (US-ASCII regexp with ISO-2022-JP string)
mail.body = mail.body.raw_source.encode('ISO-2022-JP', :invalid => :replace, :undef => :replace).encode('UTF-8')
mail.body = mail.body.raw_source.encode('iso-2022-jp', :invalid => :replace, :undef => :replace).encode('utf-8') #変換エラー対策




	#potfixログ確認
	tail /var/log/maillog



#SMTP-AUTH設定

	#curys-sasl
	cyrus-saslは非常に多機能で、
	一般的な テキスト 認証の他に暗号化認証も扱うことができますし、
	構築中のLinuxサーバー の ユーザーアカウント 名とパスワードをそのまま認証に使うことも、
	別の データベース を使って認証を行うこともできるようになっています。


	#install
		cyrus-sasl-xxxxxxx
		cyrus-sasl-plain


	vi /usr/lib/sasl2/smtpd.conf
		pwcheck_method: saslauthd


	service saslauthd start
		saslauthdを起動中:                                         [  OK  ]

	vim /etc/postfix/main.cf
		myorigin = $myhostname
		 "SMTP Auth"の利用を許可する
		smtpd_sasl_auth_enable = yes

		"anonymous"接続を拒否する。
		smtpd_sasl_security_options = noanonymous

		"OutlookExpress対応
		broken_sasl_auth_clients = yes

		smtpd_sasl_local_domain = $mydomain
		smtpd_recipient_restrictions =
		    permit_mynetworks,
		    permit_sasl_authenticated,
		    reject_unauth_destination,
		    permit_auth_destination,
		    reject

		    permit_mynetworksは、サーバー内のネットワーク、つまり内部からの利用を許可するものです。
		    permit_sasl_authenticated は、sasl認証できたものだけ受け入れる。
		    reject_unauth_destination で、認証できなかったものは、拒否する。
		    permit_auth_destination で、認証できたものは、受け入れる。
		    reject で、その他は、拒否する。

	    etc/init.d/postfix restart

	#curys-sasl password config
		/useradd some_body -s /sbin/nologin
		/usr/sbin/saslpasswd -c some_body
		/usr/sbin/sasldblistusers

		chgrp postfix /etc/sasldb
		chmod 640 /etc/sasldb

	#Mailer-config
		→「アカウント設定」→「サーバー」→「このサーバーは認証が必要」または「送信サーバーは認証が必要」にチェックを入れる。
		or
		→「送信(SMTP)サーバの設定」から「セキュリティと認証」の「ユーザ名とパスワードを使用する」にチェックを入れる

	    etc/init.d/postfix restart
	    または
	　　 service postfix restart
		#/etc/init.d/saslauthdも起動していれば成功　

	#参考:確認コマンド
		postfix　-n
		postfix check


SAMBA
	vi /etc/samba/smb.conf
	最終行に以下の記述を追加
	[opt]
	path = /home/apl
	read only = No

	#再起動する
	/etc/rc.d/init.d/smb restart

	#スタート＞ファイル名を指定して実行＞(VMのIP)でつながります
	#ネットワークドライブを割り当てると便利



================== ====================================
vim -S ~/session-130203 +VE +MRU
==================================================================


# Rubyコーディングスタイル
#
# then 省略
# .blank? .present?をつかう｡　.nil? .empty?はつかわない｡
# ※find_by_xxxという書き方はNG（元々あるメソッドを上書きしてし まうため）
#   find(:all, :conditions => ["name LIKE ?%", "A"], :order => "name ASC")
# ビジネスロジックはモデルに記入
# モデルは共通モデルクラスを継承
#  require_dependency 'model_helper'
#   class Foo < CustomModel extend ModelHelper
#
#文法チェックと警告
# ruby -wc <ファイル名>
	ruby -wTW2 <ファイル名>
#pwdのRDoc生成は　 rdoc -c utf8
#Rails全体の rake doc:app
#
# Stackはスタックを実装するクラスである。
class Stack

#RDoc コメントの付け方

■rdocの生成
rdoc は、手元でドキュメントを生成してみて、ちゃんと出力されることを確認する。
rdoc は、以下のコマンドで生成できる。
$ rdoc -c utf8
ドキュメントはカレントディレクトリの下の doc ディレクトリにHTML形式で生成される。また、オプションに -d をつけると、クラス図もつく（あまりわかりやすい図ではないが）
rails の場合は、以下のようにして生成する。
$ rake doc:app
カレントディレクトリの下の doc/app に生成される。
原則として、実装したクラス、モジュール、メソッド、定数には RDoc 形式のコメントを付ける。

  # スタック・アンダーフロー
  class UnderflowError < RuntimeError;  end

  # スタック・オーバーフロー
  class OverflowError < RuntimeError;  end

  # デフォルトのスタック容量
  DEFAULT_CAPACITY = 10

  # スタックの大きさ
  attr_reader :size
  # スタックの容量
  attr_reader :capacity

  # スタックへオブジェクトをプッシュする。
  # ==== Args
  # _obj_ :: プッシュするオブジェクト
  # ==== Raise
  # OverflowError :: スタック内のオブジェクトが容量を超える場合に発生。
  def push obj
    # TODO Stack#push の実装
  end

  # スタックからオブジェクトをポップする。
  # ==== Return
  # ポップされたオブジェクト。
  # ==== Raise
  # UnderflowError :: スタックが空である場合に発生。
  def pop
    # TODO Stack#pop の実装
  end
end


?	クラスコメント(ファイル先頭部分)のルール
o	require、namespace定義は、クラスコメントより上に記述する。
(クラスコメントより下に記述すると、ファイルのコメント部分に表示されるようになるため)
o	必ずクラス名を含める。
(この部分のRDocの出力にクラスのドキュメントへのリンクが自動で含まれないため)

?	メソッドのコメントルール
o	引数は　# ==== Args以下に # _"変数名"_ :: "変数の説明"形式で記述する。
o	戻り値が有る場合は # === Return以下に必ず記述する。
o	特筆すべき例外は # ==== Raise以下に # "例外クラス名" :: "例外の説明"形式で必ず記述する。


~



================================================================================
git
	linux GUI

	commit=pg uploading
	clone = pg downloading with history

	push = history uploading
		default repositry name = 'origin'
	pull = histoy downloading
		default repositry name = 'origin'
		エラーには
			git commit -a 	<--'automatic'
		か　
			git reset --hard　
		で対処

	merge(ウィthnon-fast-forwarding option)
	統合ブランチ（本流）と
	トピックブランチ（支流）
		default repositry name = 'head'
		checkout [of some branch]= work tree place of head
			stash	=	まだコミットしていない変更点が他のブランチのヘッドに移ることをふせぐ変更点隔離措置



		head~n = -n generation
		head^n = -n parantes

	mergeとrebaseは共に履歴を統合しますが、特徴が異なります。
		merge
		変更内容の履歴はそのまま残るが、履歴が複雑になる。
		rebase
		履歴は単純になるが、元のコミットから変更内容が変更される。
		そのため、元のコミットを動かない状態にしてしまうことがある。
		mergeとrebaseは、チームの運用方針に応じて使い分けます。
		例えば、履歴を一本化するように運用をするのであれば

		トピックブランチに統合ブランチの最新のコードを取り込む場合はrebaseを使う
		統合ブランチにトピックブランチを取り込む場合は、まずrebaseしてからmerge


		Gitでのブランチの運用モデルとして、A successful Git branching modelを紹介します。
		日本語訳:
		http://keijinsonyaban.blogspot.jp/2010/10/successful-git-branching-model.html

	#configurations.yml やroutes.rbなど開発専用ファイルを設定

	rails s --debugger



#Rspec
	vi /opt/fix/LGDIS/config/database.yml
		test:
			adapter: postgresql
			database: LGDIS_test
			host: 127.0.0.1
			username: dev
			password: devdev
			encoding: utf8
	vi ~/.rspecrc
		--debug

 export RAILS_ENV=.
	RAILS_ENV=test rake db:migrate:reset
	RAILS_ENV=test rake redmine:plugins:migrate
	RAILS_ENV=test rake redmine:load_default_data
	RAILS_ENV=test rake db:seed
	RAILS_ENV=test rspec /opt/fix/LGDIS/plugins/lgdis/spec/controllers/shelters_controller_spec.rb

★リダイレクト実行時にdebuggerはオフにすること





	rspec /opt/fix/LGDIS/plugins/lgdis/spec/controllers/evacuation_advisories_controller_spec.rb|less
bsbs

vi /opt/fix/LGDIS/spec/factories/evacuation_advisory_factory.rb

	describe/contect   ..... do
		it 'message' do
			*** should_XXXX
			***  == +++




apache+LDAP認証
Google map api
Rhodes


----
Linux GIT GUI


#認証とかの情報設定
ActionMailer::Base.smtp_settings =
{ :address => 'smtp.hoge.co.jp',
	:port => 25,
        :domain => 'hoge.co.jp',
        :user_name => 'sukottotaigaaa',
        :password => 'hogemogepyapypay',
        :authentication => :login
}


#rail3 routing
RedmineApp::Application.routes.url_helpers.
i RedmineApp::Application.routes.url_for(
rb(main):079:0>  Redmine::Plugin.registered_plugins[:lgdis].directory
=> "/opt/fix/LGDIS/plugins/lgdis"
irb(main):080:0> Redmine::Plugin.registered_plugins[:lgdis].public_directory
=> "/opt/fix/LGDIS/public/plugin_assets/lgdis"
irb(main):081:0>  Redmine::Plugin.registered_plugins[:lgdis].url
=> nil
irb(main):082:0>  Redmine::Plugin.registered_plugins[:lgdis].methods.sort
=> [:!, :!=, :!~, :<=>, :==, :===, :=~, :__id__, :__is_a__, :__metaclass__, :__send__, :_method, :`, :activity_provider, :acts_like?, :add_menu_item, :as_json, :assets_directory, :author, :author_url, :binding_n, :blank?, :breakpoint, :capture, :class, :class_eval, :clone, :configurable?, :dclone, :debugger, :define_singleton_method, :delete_menu_item, :description, :directory, :directory=, :display, :dup, :duplicable?, :enable_warnings, :enum_for, :eql?, :equal?, :expects, :extend, :freeze, :frozen?, :gem, :hash, :html_safe?, :id, :in?, :initialize_clone, :initialize_dup, :inspect, :instance_eval, :instance_exec, :instance_of?, :instance_values, :instance_variable_defined?, :instance_variable_get, :instance_variable_names, :instance_variable_set, :instance_variables, :is_a?, :kind_of?, :latest_migration, :load, :load_dependency, :menu, :method, :method_exists?, :methods, :migrate, :migration_directory, :migrations, :mirror_assets, :mocha, :mocha_inspect, :name, :nil?, :object_id, :permission, :presence, :present?, :pretty_inspect, :pretty_print, :pretty_print_cycle, :pretty_print_inspect, :pretty_print_instance_variables, :private_methods, :project_module, :protected_methods, :psych_to_yaml, :public_directory, :public_directory=, :public_method, :public_methods, :public_send, :quietly, :require, :require_association, :require_dependency, :require_or_load, :requires_redmine, :requires_redmine_plugin, :reset_mocha, :respond_to?, :respond_to_missing?, :send, :settings, :should, :should_not, :silence, :silence_stderr, :silence_stream, :silence_warnings, :singleton_class, :singleton_methods, :stubba_method, :stubba_object, :stubs, :suppress, :suppress_warnings, :taint, :tainted?, :tap, :to_enum, :to_json, :to_matcher, :to_param, :to_query, :to_s, :to_yaml, :to_yaml_properties, :trust, :try, :unloadable, :unstub, :untaint, :untrust, :untrusted?, :url, :version, :wiki_format_provider, :with_options, :with_warnings]


#irb technique
 helper.render :template => "common/feed", :formats => [:atom], :layout => false,  :content_type => 'application/atom+xml'
helper.request
ActiveRecord::Base.connection.select_values('SELECT * FROM evacuation_advisories')
 ActiveRecord::Base.connection.select_value("select nextval('evacuation_code_seq')")	#<---sequence name
privateメソッドはIRBからは定義行しか見えない｡


#Rails環境変数
Rails.application.config
@generators=#<Rails::Configuration::Generators:0x9b3e83c
@aliases={},
@options={:rails=>{:orm=>:active_record, :test_framework=>:test_unit, :integration_tool=>:test_unit, :performance_tool=>:test_unit}, :active_record=>{:migration=>true, :timestamps=>true}, :test_unit=>{:fixture=>true, :fixture_replacement=>nil}},
@fallbacks={},
@templates=[],
@colorize_logging=true,
@hidden_namespaces=[]>,
@encoding="utf-8",
@allow_concurrency=false,
@consider_all_requests_local=false,
@filter_parameters=[:password],
@helpers_paths=["/opt/fix/LGDIS/app/helpers"],
@dependency_loading=true,
@serve_static_assets=true,
@static_cache_control=nil,
@force_ssl=false,
@ssl_options={},
@session_store=:cookie_store,
@session_options={:key=>"_redmine_session", :secret=>"bdd227ec5f0dbfa5f5e774c15050beb83b60c5b0bdef2c18bdf51163a3d7", :coder=>#<Rack::Session::Cookie::Base64::Marshal:0xc2c9154>, :cookie_only=>true},
@time_zone="Tokyo",
@log_level=:debug,
@middleware=#<ActionDispatch::MiddlewareStack:0xc34220c
@middlewares=[ActionDispatch::Static, Rack::Lock, #<ActiveSupport::Cache::Strategy::LocalCache::Middleware:0xa3f2d20>, Rack::Runtime, Rack::MethodOverride, ActionDispatch::RequestId, Rails::Rack::Logger, ActionDispatch::ShowExceptions, ActionDispatch::DebugExceptions, ActionDispatch::RemoteIp, ActionDispatch::Reloader, ActionDispatch::Callbacks, ActiveRecord::ConnectionAdapters::ConnectionManagement, ActiveRecord::QueryCache, ActionDispatch::Cookies, ActionDispatch::Session::CookieStore, ActionDispatch::Flash, ActionDispatch::ParamsParser, ActionDispatch::Head, Rack::ConditionalGet, Rack::ETag, ActionDispatch::BestStandardsSupport, OpenIdAuthentication]>,
@cache_store=[:file_store, "/opt/fix/LGDIS/tmp/cache/"],
@railties_order=[:all],
@relative_url_root=nil,
@reload_classes_only_on_change=true,
@file_watcher=ActiveSupport::FileUpdateChecker,
@exceptions_app=nil,
@assets={:enabled=>false, :paths=>["/usr/local/lib/ruby/gems/1.9.1/gems/jquery-rails-2.2.0/vendor/assets/javascripts"], :precompile=>[#<Proc:0xacddbec
@/usr/local/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/application/configuration.rb:48>, /(?:\/|\\|\A)application\.(css|js)$/], :prefix=>"/assets", :version=>"1.0", :debug=>false, :compile=>true, :digest=>false, :manifest=>nil, :cache_store=>[:file_store, "/opt/fix/LGDIS/tmp/cache/assets/"], :js_compressor=>nil, :css_compressor=>nil, :initialize_on_precompile=>true, :logger=>nil},
@paths={"app"=>["app"], "app/assets"=>["app/assets"], "app/controllers"=>["app/controllers"], "app/helpers"=>["app/helpers"], "app/models"=>["app/models"], "app/mailers"=>["app/mailers"], "app/views"=>["app/views"], "lib"=>["lib"], "lib/assets"=>["lib/assets"], "lib/tasks"=>["lib/tasks"], "config"=>["config"], "config/environments"=>["config/environments"], "config/initializers"=>["config/initializers"], "config/locales"=>["config/locales"], "config/routes"=>["config/routes.rb"], "db"=>["db"], "db/migrate"=>["db/migrate"], "db/seeds"=>["db/seeds.rb"], "vendor"=>["vendor"], "vendor/assets"=>["vendor/assets"], "vendor/plugins"=>["vendor/plugins"], "config/database"=>["config/database.yml"], "config/environment"=>["config/environment.rb"], "lib/templates"=>["lib/templates"], "log"=>["log/development.log"], "public"=>["public"], "public/javascripts"=>["public/javascripts"], "public/stylesheets"=>["public/stylesheets"], "tmp"=>["tmp"]},
@autoload_paths=["/opt/fix/LGDIS/lib"],
@eager_load_paths=["/opt/fix/LGDIS/app/controllers", "/opt/fix/LGDIS/app/helpers", "/opt/fix/LGDIS/app/models"],
@autoload_once_paths=[],
@cache_classes=false,
@whiny_nils=true,
@secret_token="804c13d30e4b4d9bdbeb819e2aea4a6d9c



#Redmine環境変数
 Mailer.test_email(User.all[4]).deliver
ActionMailer::Base.smtp_settings

.config
#<Rails::Application::Configuration:0xb0c4e7c
@root=#<Pathname:/opt/fix/LGDIS>,
@generators=#<Rails::Configuration::Generators:0x9b3e83c
@aliases={},
@options={:rails=>{:orm=>:active_record, :test_framework=>:test_unit, :integration_tool=>:test_unit, :performance_tool=>:test_unit}, :active_record=>{:migration=>true, :timestamps=>true}, :test_unit=>{:fixture=>true, :fixture_replacement=>nil}},
@fallbacks={},  ""
@templates=[],
@colorize_logging=true,
@hidden_namespaces=[]>,
@encoding="utf-8",
@allow_concurrency=false,
@consider_all_requests_local=false,
@filter_parameters=[:password],
@helpers_paths=["/opt/fix/LGDIS/app/helpers"],
@dependency_loading=true,
@serve_static_assets=true,
@static_cache_control=nil,
@force_ssl=false,
@ssl_options={},
@session_store=:cookie_store,
@session_options={:key=>"_redmine_session", :secret=>"bdd227ec5f0dbfa5f5e774c15050beb83b60c5b0bdef2c18bdf51163a3d7", :coder=>#<Rack::Session::Cookie::Base64::Marshal:0xc2c9154>, :cookie_only=>true},
@time_zone="Tokyo",
@log_level=:debug,
@middleware=#<ActionDispatch::MiddlewareStack:0xc34220c
@middlewares=[ActionDispatch::Static, Rack::Lock, #<ActiveSupport::Cache::Strategy::LocalCache::Middleware:0xa3f2d20>, Rack::Runtime, Rack::MethodOverride, ActionDispatch::RequestId, Rails::Rack::Logger, ActionDispatch::ShowExceptions, ActionDispatch::DebugExceptions, ActionDispatch::RemoteIp, ActionDispatch::Reloader, ActionDispatch::Callbacks, ActiveRecord::ConnectionAdapters::ConnectionManagement, ActiveRecord::QueryCache, ActionDispatch::Cookies, ActionDispatch::Session::CookieStore, ActionDispatch::Flash, ActionDispatch::ParamsParser, ActionDispatch::Head, Rack::ConditionalGet, Rack::ETag, ActionDispatch::BestStandardsSupport, OpenIdAuthentication]>,
@cache_store=[:file_store, "/opt/fix/LGDIS/tmp/cache/"],
@railties_order=[:all],
@relative_url_root=nil,
@reload_classes_only_on_change=true,
@file_watcher=ActiveSupport::FileUpdateChecker,
@exceptions_app=nil,
@assets={:enabled=>false, :paths=>["/usr/local/lib/ruby/gems/1.9.1/gems/jquery-rails-2.2.0/vendor/assets/javascripts"], :precompile=>[#<Proc:0xacddbec
@/usr/local/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/application/configuration.rb:48>, /(?:\/|\\|\A)application\.(css|js)$/], :prefix=>"/assets", :version=>"1.0", :debug=>false, :compile=>true, :digest=>false, :manifest=>nil, :cache_store=>[:file_store, "/opt/fix/LGDIS/tmp/cache/assets/"], :js_compressor=>nil, :css_compressor=>nil, :initialize_on_precompile=>true, :logger=>nil},
@paths={"app"=>["app"], "app/assets"=>["app/assets"], "app/controllers"=>["app/controllers"], "app/helpers"=>["app/helpers"], "app/models"=>["app/models"], "app/mailers"=>["app/mailers"], "app/views"=>["app/views"], "lib"=>["lib"], "lib/assets"=>["lib/assets"], "lib/tasks"=>["lib/tasks"], "config"=>["config"], "config/environments"=>["config/environments"], "config/initializers"=>["config/initializers"], "config/locales"=>["config/locales"], "config/routes"=>["config/routes.rb"], "db"=>["db"], "db/migrate"=>["db/migrate"], "db/seeds"=>["db/seeds.rb"], "vendor"=>["vendor"], "vendor/assets"=>["vendor/assets"], "vendor/plugins"=>["vendor/plugins"], "config/database"=>["config/database.yml"], "config/environment"=>["config/environment.rb"], "lib/templates"=>["lib/templates"], "log"=>["log/development.log"], "public"=>["public"], "public/javascripts"=>["public/javascripts"], "public/stylesheets"=>["public/stylesheets"], "tmp"=>["tmp"]},
@autoload_paths=["/opt/fix/LGDIS/lib"],
@eager_load_paths=["/opt/fix/LGDIS/app/controllers", "/opt/fix/LGDIS/app/helpers", "/opt/fix/LGDIS/app/models"],
@autoload_once_paths=[],
@cache_classes=false,
@whiny_nils=true,
@secret_token="804c13d30e4b4d9bdbeb819e2aea4a6d9cdd12c0e209bedf08828cbcd32ee5f14d0ba5f9987f2ebc8c6d32fd58685d5991b6475828487fd923a03f74b6d4a013">



----------------------------------------





/opt/LGDIS/app/controllers/projects_controller.rb
 47   # Lists visible projects
 48   def index
 49     respond_to do |format|
 50       format.html {
 51         scope = Project
 52         unless params[:closed]
 53           scope = scope.active
 54         end
 55         @projects = scope.visible.order('lft').all
 56       }
 57       format.api  {
 58         @offset, @limit = api_offset_and_limit
 59         @project_count = Project.visible.count
 60         @projects = Project.visible.all(:offset => @offset, :limit => @limit, :order => 'lft')
 61       }
 62       format.atom {
 63         projects = Project.visible.find(:all, :order => 'created_on DESC',
 64                                               :limit => Setting.feeds_limit.to_i)
 65         render_feed(projects, :title => "#{Setting.app_title}: #{l(:label_project_latest)}")
 66       }
 67     end
 68   end


application_controller.rb|98 col 33| elsif params[:format] == 'atom' && params[:key] && request.get? && accept_rss_auth?
 98       elsif params[:format] == 'atom' && params[:key] && request.get? && accept_rss_auth?
 99         # RSS key authentication does not start a session
100         user = User.find_by_rss_key(params[:key])



 4 application_controller.rb|425 col 54| render :template => "common/feed", :formats => [:atom], :layout => false,
420   def render_feed(items, options={})
421     @items = items || []
422     @items.sort! {|x,y| y.event_datetime <=> x.event_datetime }
423     @items = @items.slice(0, Setting.feeds_limit.to_i)
424     @title = options[:title] || Setting.app_title
425     render :template => "common/feed", :formats => [:atom], :layout => false,
426            :content_type => 'application/atom+xml'
427   end


 10 issues_controller.rb|122 col 14| format.atom { render :template => 'journals/index', :layout => false, :content_type => 'application/atom+xml' }
102   def show
103     @journals = @issue.journals.includes(:user, :details).reorder("#{Journal.table_name}.id ASC").all
104     @journals.each_with_index {|j,i| j.indice = i+1}
105     @journals.reject!(&:private_notes?) unless User.current.allowed_to?(:view_private_notes, @issue.project)
106     @journals.reverse! if User.current.wants_comments_in_reverse_order?
107
108     @changesets = @issue.changesets.visible.all
109     @changesets.reverse! if User.current.wants_comments_in_reverse_order?
110
111     @relations = @issue.relations.select {|r| r.other_issue(@issue) && r.other_issue(@issue).visible? }
112     @allowed_statuses = @issue.new_statuses_allowed_to(User.current)
113     @edit_allowed = User.current.allowed_to?(:edit_issues, @project)
114     @priorities = IssuePriority.active
115     @time_entry = TimeEntry.new(:issue => @issue, :project => @issue.project)
116     respond_to do |format|
122       format.atom { render :template => 'journals/index', :layout => false, :content_type => 'application/atom+xml' }
127     end
128   end

rb(main):076:1> puts IssuesController.respond_to{|f| f.atom(ApplicationController.render_feed(Issue.first, :title => "test")  }
irb(main):077:2> puts IssuesController.respond_to{|f| f.atom(ApplicationController#render_feed(Issue.first, :title => "test")  }





require "cgi"
require "template"

class Feeder
    def self.get(tmpl_path, options = {})
        cgi = CGI.new
        mime_type = options[:mime_type] || "application/xml"
        encoding = options[:encoding] || "utf-8"
        language = options[:language] || "ja"

        v = Template.get(tmpl_path, {"type" => mime_type, "charset" => encoding})
        v.encoding = encoding
        v.language = language
        v.site_url = "http://" + cgi.server_name
        v.feed_url = v.site_url + cgi.script_name if v.methods.include?("feed_url")
        return v
    end
end


irb(main):152:0> issue.methods.sort.grep(/(author|er_name|title)/i)
=> [:_active_authorizer, :_active_authorizer=, :_active_authorizer?, :author, :author=, :author_id, :author_id=, :author_id?, :author_id_before_type_cast, :author_id_change,
:author_id_changed?, :author_id_was, :author_id_will_change!, :autosave_associated_records_for_author, :build_author, :create_author!, :event_author, :event_title,
:mass_assignment_authorizer, :reset_author_id!]



<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>平時・未割当: 活動</title>
  <link rel="self" href="http://192.168.18.130:3000/projects/lgdis000/activity.atom?key=6724553250c556a08a5ff4a76724d8b5ed1c3a45"/>
  <link rel="alternate" href="http://192.168.18.130:3000/projects/lgdis000/activity"/>
  <id>http://192.168.18.130:3000/</id>
  <updated>2013-01-24T07:59:01Z</updated>
  <author>
    <name>Redmine</name>
  </author>
  <generator uri="http://www.redmine.org/">
Redmine  </generator>
  <entry>
    <title>避難勧告・指示情報（公共情報コモンズ配信用） #14 (新規): ISSUE 01</title>
    <link rel="alternate" href="http://192.168.18.130:3000/issues/14"/>
    <id>http://192.168.18.130:3000/issues/14</id>
    <updated>2013-01-24T07:59:01Z</updated>
    <author>
      <name>Admin Redmine</name>
      <email>root@localhost.localdomain</email>
    </author>
    <content type="html">

&lt;p&gt;ISSUE 01msg&lt;/p&gt;    </content>
  </entry>
</feed>




redmine_pg_dev=# \d shelters
                                                 テーブル "public.shelters"
                  列                   |             型              |                        修飾語
---------------------------------------+-----------------------------+-------------------------------------------------------
 id                                    | integer                     | not null default nextval('shelters_id_seq'::regclass)
 project_id                            | integer                     | not null
 disaster_code                         | character varying(20)       | not null
 name                                  | character varying(30)       | not null
 name_kana                             | character varying(60)       |
 address                               | character varying(200)      | not null
 phone                                 | character varying(20)       |
 fax                                   | character varying(20)       |
 e_mail                                | character varying(255)      |
 person_responsible                    | character varying(100)      |
 shelter_type                          | character varying(255)      | not null
 shelter_type_detail                   | character varying(255)      |
 shelter_sort                          | character varying(255)      | not null
 opened_at                             | timestamp without time zone |
 closed_at                             | timestamp without time zone |
 capacity                              | integer                     |
 status                                | character varying(255)      |
 head_count                            | integer                     |
 head_count_voluntary                  | integer                     |
 households                            | integer                     |
 households_voluntary                  | integer                     |
 checked_at                            | timestamp without time zone |
 shelter_code                          | character varying(14)       | not null
 manager_code                          | character varying(10)       |
 manager_name                          | character varying(100)      |
 manager_another_name                  | character varying(100)      |
 reported_at                           | timestamp without time zone |
 building_damage_info                  | character varying(4000)     |
 electric_infra_damage_info            | character varying(4000)            | character varying(4000)     |
 other_damage_info                     | character varying(4000)     |
 usable_flag                           | character varying(1)        |
 openable_flag                         | character varying(1)        |
 injury_count                          | integer                     |
 upper_care_level_three_count          | integer                     |
 elderly_alone_count                   | integer                     |
 elderly_couple_count                  | integer                     |
 bedridden_elderly_count               | integer                     |
 elderly_dementia_count                | integer                     |
 rehabilitation_certificate_count      | integer                     |
 physical_disability_certificate_count | integer                     |
 note                                  | character varying(4000)     |
 deleted_at                            | timestamp without time zone |
 created_at                            | timestamp without time zone | not null
 updated_at                            | timestamp without time zone | not null
インデックス:
    "shelters_pkey" PRIMARY KEY, btree (id)

root@localhost:/opt/LGDIS/plugins/lgdis# find . -name "*shelter*" -print sort
./app/controllers/shelters_controller.rb
./app/helpers/shelters_helper.rb
./app/models/shelter.rb
./app/views/shelters
./assets/stylesheets/shelters.css
./db/migrate/001_shelters.rb


	rails g redmine_plugin_model lgdis  evacuation_advisory id:integer:yes project_id:integer
	rails g redmine_plugin_controller lgdis  evacuation_advisories index

		/app/controllers/evacuation_advisories_controller.rb
		/app/helpers/evacuation_advisories_helper.rb
		/app/models/evacuation_advisory.rb
		/app/views/evacuation_advisories/index.html.erb
		/db/migrate/007_create_evacuation_advisories.rb
		/test/functional/evacuation_advisories_controller_test.rb
		/test/unit/evacuation_advisory_test.rb

	 grep -nirE "remark" * --include=*.rb
grep -nirE "total_pages" /data/on_gree/bm_gree/* --include=**  --exclude=*.sw* --exclude=*~ --exclude=*spec* --exclude=*log  --exclude=*svn*

	前後5行を出力する例
grep -nirE "total_pages" /data/on_gree/bm_gree/* --include=**  --exclude=*.sw* --exclude=*~ --exclude=*spec* --exclude=*log  --exclude=*svn* -C5

##############
 rails g redmine_plugin_controller lgdis issue_geographies
 rails g redmine_plugin_model lgdis issue_geography
find . -name "*geog*" -print |sort


#LINUX運用コマンド　(開発系)
	#step数ステップ数 メソッド数
# find . -name "*rb" -o -name "*.yml" | xargs wc -l
grep -nirE "def \w" .  --include=**  --exclude=*.sw* --exclude=*~ --exclude=*.log > ../../GrepDef.txt

	rake -T |grep stat
	rake stats

		root@localhost:/opt/fix/LGDIS# rake stats

		*** Mocha deprecation warning: Change `require 'mocha'` to `require 'mocha/setup'`.

		+----------------------+-------+-------+---------+---------+-----+-------+
		| Name                 | Lines |   LOC | Classes | Methods | M/C | LOC/M |
		+----------------------+-------+-------+---------+---------+-----+-------+
		| Controllers          |  6397 |  4716 |      49 |     392 |   8 |    10 |
		| Helpers              |  3965 |  2665 |       2 |     234 | 117 |     9 |
		| Models               | 11569 |  8033 |      86 |     871 |  10 |     7 |
		| Libraries            | 32843 | 23889 |     155 |    1378 |   8 |    15 |
		| Integration tests    |  7711 |  5727 |      82 |     168 |   2 |    32 |
		| Functional tests     | 16661 | 13404 |      81 |    1221 |  15 |     8 |
		| Unit tests           | 22610 | 17290 |     119 |    1547 |  13 |     9 |
		+----------------------+-------+-------+---------+---------+-----+-------+
		| Total                | 101756 | 75724 |     574 |    5811 |  10 |    11 |
		+----------------------+-------+-------+---------+---------+-----+-------+
			Code LOC: 39303     Test LOC: 36421     Code to Test Ratio: 1:0.9

 16918 合計


	find . -name "*rb" | xargs wc -l
	find . -name "*rb" -o -name "*.yml" | xargs wc -l
	#手動バックアップ
	 tar cvf lgdis-imamondai4.tar lgdis/ ; mv lgdis-imamondai*.tar /opt/fix ; date; ls -alt /opt/fix/*tar ;


root@localhost:/opt/LGDIS# rake -T |grep redmine
rake redmine:attachments:prune            # Removes uploaded files left unattached after one day.
rake redmine:email:read                   # Read an email from standard input.
rake redmine:email:receive_imap           # Read emails from an IMAP server.
rake redmine:email:receive_pop3           # Read emails from an POP3 server.
rake redmine:email:test[login]            # Send a test email to the user with the provided login name
rake redmine:fetch_changesets             # Fetch changesets from the repositories
rake redmine:load_default_data            # Load Redmine default configuration data.
rake redmine:migrate_from_mantis          # Mantis migration script
rake redmine:migrate_from_trac            # Trac migration script
rake redmine:permissions                  # List all permissions and the actions registered with them
rake redmine:plugins                      # Migrates and copies plugins assets.
rake redmine:plugins:assets               # Copies plugins assets into the public directory.
rake redmine:plugins:migrate              # Migrates installed plugins.
rake redmine:plugins:test                 # Runs the plugins tests.
rake redmine:plugins:test:functionals     # Run tests for {:functionals=>"db:test:prepare"}
rake redmine:plugins:test:integration     # Run tests for {:integration=>"db:test:prepare"}
rake redmine:plugins:test:units           # Run tests for {:units=>"db:test:prepare"}
rake redmine:send_reminders               # Send reminders about issues due in the next days.
rake redmine:tokens:prune                 # Removes expired tokens.
rake redmine:watchers:prune               # Removes watchers from what they can no longer view.


root@localhost:/opt/LGDIS# rake routes|grep evacuation
GET	/evacuation_advisories(.:format)	evacuation_advisories#index
POST	/evacuation_advisories(.:format)	evacuation_advisories#create
GET	/evacuation_advisories/new(.:format)	evacuation_advisories#new
GET	/evacuation_advisories/:id/edit(.:format)	evacuation_advisories#edit
GET	/evacuation_advisories/:id(.:format)	evacuation_advisories#show
PUT	/evacuation_advisories/:id(.:format)	evacuation_advisories#update
DELETE	/evacuation_advisories/:id(.:format)	evacuation_advisories#destroy


root@localhost:/opt/LGDIS# rake routes|grep evacuation
         project_evacuation_advisories GET      /projects/:project_id/evacuation_advisories(.:format)                             evacuation_advisories#index
                                       POST     /projects/:project_id/evacuation_advisories(.:format)                             evacuation_advisories#create
       new_project_evacuation_advisory GET      /projects/:project_id/evacuation_advisories/new(.:format)                         evacuation_advisories#new
      edit_project_evacuation_advisory GET      /projects/:project_id/evacuation_advisories/:id/edit(.:format)                    evacuation_advisories#edit
           project_evacuation_advisory GET      /projects/:project_id/evacuation_advisories/:id(.:format)                         evacuation_advisories#show
                                       PUT      /projects/:project_id/evacuation_advisories/:id(.:format)                         evacuation_advisories#update
                                       DELETE   /projects/:project_id/evacuation_advisories/:id(.:format)                         evacuation_advisories#destroy


root@localhost:/opt/LGDIS# Connecting to database specified by database.yml
OpenIdAuthentication.store is nil. Using in-memory store.


root@localhost:/opt/LGDIS/plugins/lgdis# grep -nirE "note" * --include=*vacuat*.rb
:14:#                   :other_damage_info,:usable_flag,:openable_flag,:note,
app/models/evacuation_advisory.rb:132:#   validates :note,
app/models/evacuation_advisory.rb:290:      node_evacuation_advisory.add_element("備考").add_text("#{evacuation_advisory.note}")

app/views/evacuation_advisories/_form.html.erb:226:  <%= field_for :note do |key, label| %>
app/views/evacuation_advisories/_search_conditions.html.erb:122:  <%= field_for :note do |key, label| %>


※上の画像で分かると思うけど、自分はitemテーブル作って色々と試してみてる。

class Item < ActiveRecord::Base
  def name
    super.force_encoding('UTF-8')
  end
  def note
    super.force_encoding('UTF-8')
  end
end



#some_body dev:  @evacuation_advisory_const が避難所モデルのままなので､invertなどはつかえない｡%>

irb(main):112:0> Constant::hash_for_table(EvacuationAdvisory.table_name)
  Constant Load (212.0ms)  SELECT "constants".* FROM "constants" WHERE (kind1='TD' AND kind2='evacuation_advisories') ORDER BY kind3 ASC, _order ASC
=> {"openable_flag"=>{"1"=>"可", "0"=>"不可"}, "sort_criteria"=>{"1"=>"未開設", "2"=>"開設", "3"=>"閉鎖", "4"=>"不明", "5"=>"常設"}, "status"=>{"1"=>"空き", "2"=>"混雑", "3"=>"定員一杯", "4"=>"不明"}, "type"=>{"1"=>"避難所", "2"=>"臨時避難所", "3"=>"広域避難所：開設措置なし", "4"=>"一次避難所：開設措置なし"}, "usable_flag"=>{"1"=>"可", "0"=>"不可"}}



そのようなファイルやディレクトリはありません - /opt/fix/LGDIS/plugins/lgdis/config/settings.yml
/opt/fix/LGDIS/plugins/lgdis/init.rb:16:in `<top (required)>'
/opt/fix/LGDIS/lib/redmine/plugin.rb:130:in `block in load'
/opt/fix/LGDIS/lib/redmine/plugin.rb:121:in `each'
/opt/fix/LGDIS/lib/redmine/plugin.rb:121:in `load'
/opt/fix/LGDIS/config/initializers/30-redmine.rb:12:in `<top (required)>'
/opt/fix/LGDIS/config/environment.rb:14:in `<top (required)>'
Tasks: TOP => redmine:plugins:migrate => environment
(See full trace by running task with --trace)
o
 select * from issues_addtion_data ;
select * from geographies;

app/controllers/shelters_controller.rb:13:    @shelter_const = Constant::hash_for_table(Shelter.table_name)
app/models/shelter.rb:32:  CONST = Constant::hash_for_table(self.table_name).freeze

redmine_pg_dev=# delete  from schema_migrations where version = '9^Cgdis';
redmine_pg_dev=# select * from issue_geographies;
 id | issue_id | datum | location | point | line | polygon | remarks
----+----------+-------+----------+-------+------+---------+---------
(0 行)

redmine_pg_dev=# select * from issues_addtion_data ;
 id | issue_id | geodetic_datum |   latitude    |  longitude   |                 address                  |       remarks
----+----------+----------------+---------------+--------------+------------------------------------------+---------------------
  1 |       14 | 日本測地系     |   38.82815400 | 141.60417200 | 宮城県気仙沼市波路上岩井崎１             | test for issue#14
  3 |       14 | 日本測地系     | -179.00000000 | -89.00000000 | 南極近辺ロンドンの真裏                   | test for issue#14-3
  2 |       14 | 日本測地系     | -141.17184600 | -38.39582800 | 宮城県気仙沼市波路上岩井崎１の地球の裏側 | test for issue#15
(3 行)





配信管理は、queueに配置したところで、処理結果を取得できなくなります。（非同期処理のため）
外部配信は、外部配信処理自身が成功したかどうかを自らログに書くことは可能。
外部配信処理自身が成功したかどうかの判定の中で、
SOAPのような手順の中で成功可否を判断できるものは、外部配信先に届いたかどうかを判定できますが、
SMTPは判定できません。
RSSはファイルを生成できたことの可否を判定するまでです。


表 3.40.4.6 パラメータ一覧（②石巻市メールサーバ：入力/異常）
No 論理名称 物理名称 I/O 備考
1 処理完了ステータス I
※ 石巻市メールサーバへの★配信依頼★のSMTP 処理が異常終了したところまでの検知となる。
※ 石巻市メールサーバの配信が正常終了したかどうかは本システムでは検知しない。


表 3.40.5.6 パラメータ一覧（②SMTP-AUTH：入力/異常）
No 論理名称 物理名称 I/O 備考
1 処理完了ステータス I
※ 外部配信先への★配信依頼★のSMTP-AUTH 処理が異常終了したところまでの検知となる。
※ 外部配信先への配信が正常終了したかどうかは本システムでは検知しない。




表 3.40.6.6 パラメータ一覧（②Twitter：入力/異常）
No 論理名称 物理名称 I/O 備考
1 異常戻り値 I
※ Twitter 連携処理★（API 呼び出し）が異常終了★したところまでの検知となる。
※ 外部配信処理が異常終了した場合のエラー通知は、★★★メール配信★★★により行う。


表 3.40.7.5 パラメータ一覧（②Facebook：入力/異常）
No 論理名称 物理名称 I/O 備考
2 異常戻り値 I
※ Facebook ★連携処理（API 呼び出し）が異常終了★したところまでの検知となる。
※ 外部配信処理が異常終了した場合のエラー通知は、★★★メール配信★★★により行う。
Facebook に対するパラメータ一覧（上記I/O関連図②）を、表4.3.6.7.5.2.に示します。
表4.3.6.7.5.2.ファイル一覧（②Facebook）
No	論理名称	物理名称	I/O	備考
1	本文	message	O
2	処理完了ステータス		I


ATOM災害情報ポータルページ/デジタルサイネージに対するファイル一覧（上記I/O関連図②）を、表4.3.6.3.4.2に示します。
表4.3.6.3.4.2ファイル一覧（②設定ファイル）
No	論理名称	物理名称	I/O	備考
1	配信内容ATOM情報		I	2	処理完了ステータス		I


-----------------


表 3.40.3.6 パラメータ一覧（②公共情報コモンズ：入力/異常）
No 論理名称 物理名称 I/O 備考
1 処理完了ステータス I
※ 非同期処理のため、配信管理機能ではエラー検知を行わない。
※ 外部配信処理が異常終了した場合のエラー通知は、
★外部配信機能/公共情報コモンズ SOAP I/Fからメール配信★により行う。

-postit----------------------
ﾒｰﾙｻｰﾊﾞｰ@ubuntu
三菱重工(株)
xin7-pro-productkey:	3K9P7-R7GCK-D9MYH-QFMX4-WT8P7
.blank? 	.nil? 	.empty?	.present?	self.****	RDoc 記法
X.509 Cartificate Token ,SSL(:443)


/usr/local/lib/ruby/gems/1.9.1/gems/soap4r-ruby1.9-2.0.5/sample/showcase/wsdl/PayPalSvc/
gem install soap4r-ruby1.9
---------------------------------------------------------


#       log/LGDIS/
#       plugins/lgdis/config/settings.yml
#       plugins/lgdis/db/migrate/008_create_evacuations.rb
#       plugins/lgdis/lib/lgdis/ext_out/datum_conv.rb
#       plugins/lgdis/lib/lgdis/ext_out/georss1_0.tmpl

 mount Resque::Server, at: "/resque"

  2 MethodError (undefined method `xml_control_status' for #<Issue:0xb6ad5e10>):
  3 plugins/lgdis/app/models/shelter.rb:301:in `create_applic_issue'
  4 plugins/lgdis/app/controllers/shelters_controller.rb:95:in `block in ticket'
  5 plugins/lgdis/app/controllers/shelters_controller.rb:93:in `ticket'
  6 plugins/lgdis/app/controllers/shelters_controller.rb:45:in `index'




:6:  if issue.xml_control_status
/opt/LGDIS/plugins/lgdis/app/views/issues/_view_issues_show_description_bottom.html.erb:7:    rows.left l(:field_xml_control_status), h(issue.xml_control_status), :class => 'xml_control_status'


/opt/LGDIS/plugins/lgdis/lib/lgdis/issue_patch.rb:14:        validates :xml_control_status, :length => {:maximum => 12}
/opt/LGDIS/plugins/lgdis/lib/lgdis/issue_patch.rb:29:        safe_attributes 'xml_control_status',
/opt/LGDIS/plugins/lgdis/lib/lgdis/issue_patch.rb:31:          'xml_control_status',







localhost:/opt/fix/LGDIS# grep -nirE "disaster_code *=" /opt/LGDIS/plugins/* --include=*  --exclude=*.sw* --exclude=*~
/opt/LGDIS/plugins/lgdis/app/controllers/shelters_controller.rb:142:    @shelter.disaster_code = @project.identifier
/opt/LGDIS/plugins/lgdis/app/controllers/evacuation_advisories_controller.rb:146:    @evacuation_advisory.disaster_code = @project.identifier
o



1]+  停止                  rails s --debugger
root@localhost:/opt/fix/LGDIS# grep -nirE "import_initial_data" /opt/fix/LGDIS/plugins/* --include=*  --exclude=*.sw* --exclude=*~
/opt/fix/LGDIS/plugins/lgdis/app/models/evacuation_advisory.rb:423:  def self.import_initial_data(project)
/opt/fix/LGDIS/plugins/lgdis/app/models/shelter.rb:428:  def self.import_initial_data(project)

/opt/fix/LGDIS/plugins/lgdis/lib/lgdis/project_patch.rb:16:        after_create :import_initial_data
/opt/fix/LGDIS/plugins/lgdis/lib/lgdis/project_patch.rb:83:      def import_initial_data
/opt/fix/LGDIS/plugins/lgdis/lib/lgdis/project_patch.rb:84:        Shelter.import_initial_data(self) #避難所

root@localhost:/opt/fix/LGDIS# grep -nirE "import_initial_data" /opt/LGDIS/plugins/* --include=*  --exclude=*.sw* --exclude=*~
/opt/LGDIS/plugins/lgdis/lib/lgdis/project_patch.rb:16:        after_create :import_initial_data
/opt/LGDIS/plugins/lgdis/lib/lgdis/project_patch.rb:83:      def import_initial_data
/opt/LGDIS/plugins/lgdis/lib/lgdis/project_patch.rb:84:        Shelter.import_initial_data(self) #避難所

チケット一覧　Issueの表示


plugins/lgdis/app/views/issues/_view_issues_show_description_bottom.html.erb
	ActionView::Template::Error (undefined method `check_permissions' for #<#<Class:0xcf1b2b8>:0xd07db74>):
	ActionView::Template::Error (undefined method `print_xml_field' for #<#<Class:0xcf1b2b8>:0xb722033c>):


Rdoc
Rspec
GIT pull -->renraku ->commit
返値

--------------------------------------------------------------------------------------------------------
Memchachd
	#install

		wget -q -O - http://www.atomicorp.com/installers/atomic |sh
		yum install memcached

		vi /etc/sysconfig/memcached
			PORT=”11211″
		config.cache_classes     = false
		#optional 	config.cache_store = :dalli_store

		service memcached start
	#test
		 rails c --debugger
		Rails.cache.write("foo", "フー", :expires_in => 10)
		foo")
		Rails.cache.write("key", [1,2,3], expires_in: 1.hour)  # １時間で消える。
		# もちろんオブジェクトもキャッシュ可能
		Rails.cache.write('hash', {'hoge' => 'piyo', 'foo' => 'buz'})
		Rails.cache.read('hash') # => {'hoge' => 'piyo', 'foo' => 'buz'}

		Rails.cache.clear # すべてのキャッシュをクリア

	#CSV-locading

		#Rails.root/lib/batches に以下のファイルを配置
		　area.csv
		　address.csv
		　shelter.csv
		　memcache_store.rb

		#バッチを実行
		 rails runner Batches::MemcacheStore.execute

		#値の取得テスト
			Rails.cache.read("area")["6"]["name"]

		# ==== options
		 実行環境の指定 :: -e production
		以下の形式でstoreする

			file => {
				code => {
					項目1 => value,
					項目2 => value,
					項目3 => value,
					...
				}
			}

		住所のオートコンプリート用に以下の値もstoreする
		　state  : 都道府県
		　city   : 市区町村
		　street : 町丁目

		 state => {
			 code => name,
			 code => name,
			 code => name,
			 ...
		 }
	rails runner Batches::MemcacheStore.execute

#Rdoc
	# 処理内容
	# ==== Args

	# _objectname_ :: description
	# ==== Return
	# _objectname_ :: description
	# ==== Raise

	# 処理内容
	#
	# ==== Args
	# __ ::
	# ==== Return
	# __ ::
	# ==== Raise

	■rdocの生成
	rdoc は、手元でドキュメントを生成してみて、ちゃんと出力されることを確認する。
	rdoc は、以下のコマンドで生成できる。
	$ rdoc -c utf8
	ドキュメントはカレントディレクトリの下の doc ディレクトリにHTML形式で生成される。また、オプションに -d をつけると、クラス図もつく（あまりわかりやすい図ではないが）
	rails の場合は、以下のようにして生成する。
	$ rake doc:app


#HAML
  -debugger
  irbでの検証は以下括弧内にHAML式を代入
    Haml::Engine.new('  ').render

  Haml Comments: -#
  DRIW
  - --> run ruby code
  = insert ruby code
  `code`

  : --> filter
  & --><input>
  |


堤さん
Java標準のJKSキーストアをserverconfig.xmlのkeystore要素でフルパスしてやる
SharkWire指南


class User < ActiveRecord::Base
  # Userインスタンスに hoge1, hoge2 という名前で保持期間１時間のキャッシュを使用する場合
  cache_attr_accesor :hoge1, :hoge2, :span => 1.hour
end
#こんな感じで使用できます。放っておけば:spanで指定した時間経過後にキャッシュはクリアされます。
u = User.find(300)
u.hoge1 = 'value1'
u.hoge2 = 'value2'

# 実際には下記と等価になります
Cache.read('User_hoge1', 300)
Cache.write('User_hoge1', 300, 'value1', 1.hour)
#また、モデルのインスタンスだけでなくクラスの属性としても使用することができます。
class User < ActiveRecord::Base
 class << self
   cache_attr_accessor :hoge1
  end
end
User.hoge1 = 'value1'  #デフォルトでは２週間保持されます







################rake db: http://namakesugi.blog42.fc2.com/blog-entry-157.html

20130601182530_change_contents_rollout_store_type_to_string.rb
X
  注意：ファイル名とクラス名が完全一致しないと失敗します。
  class ChangeContentsRolloutStoreTypeToString < ActiveRecord::Migration
    def change
      change_column :contents, :rollout_store_type, :text
    end
  end


rake db:migrate:down VERSION=[バージョン番号]
  rake db:migrate:down VERSION=20130601182535

  特定のmigrationをrevertするmigration
    require_relative '20130414_migratino_file_name_without_extention_rb'

    class RevertProductsChangePrimaryKey < ActiveRecord::Migration
      def change
        revert ChangeProductsPrimaryKey
      end
    end



  Joinテーブルの作成をするmigrationファイルの作成
    書式: `CreateJoinTableXXXYYY XXX YYY` XXX, YYYには結合するモデル名を指定する。
    以下の場合はproductとcategoryのN:Nを結合するテーブルcategories_productsが生成される。
    rails g migration create_join_table_product_category product category

  フィールドの変更
    def change
      reversible do |dir|
        change_table :products do |t|
          dir.up { t.change :foo, :integer }
          dir.down { t.change :foo, :string, limit: 32 }
        end
      end
    end

  rails g migration RemoveFooFromProducts foo:string
    複数のフィールドの追加/削除のmigrationファイルの作成
    rails g migration add_foo_and_bar_to_products foo:integer bar:integer




#troubleshooting
  irm/mv Gemfile.lock
  rm db/schema.rb
  rake db:reset

#Device

Devise.secret_key was not set. Please add the following to your Devise initializer:

  config.secret_key = '7d221d00af9414240910d5dfa712d48d45dc6ca2b47e328ffa75787207ecaa9f5f827da630d3d9961b4a5b7f92d900e33f7f916ddee943fd8fdb9d59964aef9d'

　　　

plugins/lgdis/db/migrate/008_create_evacuation_advisories.rb
+    add_index(:evacuation_advisories, :area, :unique => true, :where => 'deleted_at is NULL')
  	56 	+    add_index(:evacuation_advisories, :identifier, :unique => true, :where => 'deleted_at is NULL')



#1-liner
	#grep結果ファイル中文字列をかきかえ
	grep -lnirE "issueorlift" .  --include=**  --exclude=*.sw* --exclude=*~ --exclude=*.log --exclude=*spec* |xargs  ruby -p -e  '$_.gsub!(/issueorlift/, "issueorlift")'  -i
		rake db:seed

  #ps結果をgrepしてkill
   kill -9 `ps -ef |grep -nirE "(rub|rail|vim)"| ruby -ane 'p $F[1].to_i'`



	irb(main):020:0> puts Issue.first.methods.grep(/addition/i)

	Issue.first.issues_additional_data[0].remarks

	insert into issues_addtion_data values(2, 15, '日本測地系', -141.17184600, -38.39582800, '宮城県気仙沼市波路	上岩井崎１の地球の裏側', 'test for issue#15')
	insert into issues_addtion_data values(1, 14, '日本測地系',, '１',             'test for issue#14');
	insert into issues_addtion_data values(3, 14, '日本測地系', -179,          -89,          '南極近辺ロンドンの真裏',                   'test for issue#14-3');
	SELECT "issues_addtion_data".* FROM "issues_addtion_data";
	 update  issues_addtion_data set issue_id = 14 where id=2;

	insert into issue_geographies values(2, 15, '日本測地系','宮城県気仙沼市の地球の裏側', '-38.39582800-141.17184600',  'test for issue#15')
	insert into issue_geographies values(1, 14, '日本測地系','宮城県気仙沼市波路上岩井崎１',             '+38.82815400+141.60417200',  'test for issue#14');
 insert into issue_geographies values(3, 14, '日本測地系','南極近辺',                   '(-179,-89)', NULL,NULL, 'test for issue#14-3');

 insert into issue_geographies values(4, 14, '日本測地系','南極近辺point', '(-179,-89)', NULL,NULL, 'test for issue#14-3','2010-11-30T14:59:00+09:00','2010-11-30T14:59:00+09:00');
 insert into issue_geographies values(6, 14, '日本測地系','南極近辺line# ',NULL,'((-179,-89),(+141, +38))',NULL, 'test for issue#14-3','2010-11-30T14:59:00+09:00','2010-11-30T14:59:00+09:00');
 insert into issue_geographies values(5, 14, '日本測地系','南極近辺polygon',NULL,NULL,'((-179,-89),(+141, +38),(+142,+38),(-179,-89))', 'test for issue#14-3', '2010-11-30T14:59:00+09:00','2010-11-30T14:59:00+09:00');

新
INSERT INTO evacuation_advisories (advisory_type, alert, alerting_area, alias, area, area_kana, category, cause, changed_at, created_at, deleted_at, district, emergency_hq_needed_city, emergency_hq_needed_prefecture, evacuate_from, evacuate_to, evacuation_order, evacuation_steps_by_authorities, full_name, head_count, headline, households, identifier, issueorlift, issued_at, lifted_at, message, remarks, siren_area, sort_criteria, staff_no, updated_at) VALUES ('2', '警報内容03', '範囲 03', '別名称 03', '地区名称03', 'かないち','09', '原因03',NULL, '2010-11-30T14:59:00+09:00', NULL, '2','市町村 03', '都道府県 03', '要避難地域 03', '避難先03', '指示内容 03', '講ずべき措置03', '発令権限者03', 2700, 'ヘッドライン 03', 1000, '04202E00000000000029', '1', '2010-11-30T14:59:00+09:00', NULL, '情報文 03','備考 03', 'サイレン03', '2', '99999', '2010-11-30T14:59:00+09:00') ;

旧
INSERT INTO evacuation_advisories (advisory_type, alert, alerting_area, alias, area, area_kana, category, cause, changed_at, created_at, deleted_at, disaster_code, district, emergency_hq_needed_city, emergency_hq_needed_prefecture, evacuate_from, evacuate_to, evacuation_order, evacuation_steps_by_authorities, full_name, head_count, headline, households, identifier, issueorlift, issued_at, lifted_at, message, project_id, remarks, siren_area, sort_criteria, staff_no, updated_at) VALUES ('2', '警報内容03', '範囲 03', '別名称 03', '地区名称03', 'かないち','09', '原因03',NULL, '2010-11-30T14:59:00+09:00', NULL, 'lgdrm','2','市町村 03', '都道府県 03', '要避難地域 03', '避難先03', '指示内容 03', '講ずべき措置03', '発令権限者03', 2700, 'ヘッドライン 03', 1000, '04202E00000000000029', '1', '2010-11-30T14:59:00+09:00', NULL, '情報文 03', 3, '備考 03', 'サイレン03', '2', '99999', '2010-11-30T14:59:00+09:00') ;

 insert into edition_managements values (1,5,1,105,1,1, 'a2b33758-31a3-4a41-800e-4e9cc82147b1' , '2010-11-30T14:59:00+09:00', '2010-11-30T14:59:00+09:00');

	alter table issues alter COLUMN xml_head_title TYPE varchar(100);
	alter table issues add  mail_subject varchar(15)
	alter table issues add closed_at timestamp without time zone;
	alter table issues add  mail_subject TYPE varchar(15);
	alter table issues add summary varchar(4000);
	alter table issues add type_update varchar(255);
	alter table issues add published_at timestamp without time zone;
	alter table issues add opened_at timestamp without time zone;
	alter table issues add closed_at timestamp without time zone;
	alter table issues add delivered_area varchar(255);
	alter table evacuation_advisories alter COLUMN project_id DROP NOT NULL;
	alter table evacuation_advisories alter COLUMN disaster_code  DROP NOT NULL;
	alter table evacuation_advisories add issueorlift varchar(100);






----------------------------------------------------------------

INSERT into evacuation_advisories (
project_id,
disaster_code, sort_criteria, issueorlift, area,
issued_at, changed_at, lifted_at,
households, head_count,
identifier, category, cause, advisory_type,
staff_no, full_name, alias,
headline, message,
emergency_hq_needed_prefecture, emergency_hq_needed_city,
alert, alerting_area, siren_area,
evacuation_order, evacuate_from, evacuate_to, evacuation_steps_by_authorities,
remarks, deleted_at,created_at,updated_at
)values (
5,
'lgdrm-APPLIC参照','避難指示','発令', 'area-100-石巻市某地区',
'2010-11-30T14:59:00+09:00',NULL ,NULL ,
3, 7,
'県2市3管理番号5','WN','cause-4000-CAPでは｢category/event｣に相当。減災情報共有スキーマでは避難勧告発令情報の「発令要因」に相当-type-2-APPLIC準拠','TS',
'staff_no01', 'full_name-100-氏名間全角スペース1文字', 'alias-100-氏名間全角スペース1文字',
'headline-100-', 'message-4000-',
'emergency_hq_needed_prefecture-100-宮城県', 'emergency_hq_needed_city-100-石巻市',
'alert-4000-警報文', 'alerting_area-4000-全国もしくは特定地域名', 'siren_area-4000-全国もしくは特定地域名､或いはサイレン不使用',
'evacuation_order-4000-避難措置の指示内容', 'evacuate_from-4000-要避難地域', 'evacuate_to-4000-避難先地域', 'evacuation_steps_by_authorities-4000-緊急通>報発令_攻撃の予防鎮圧_安全経路場所',
'remarks-4000-備考', NULL, '2010-11-30T14:59:00+09:00', '2010-11-30T14:59:00+09:00'
)
;

----------------------------------------------------------------


指示等なし、避難準備、避難勧告、避難指示、警戒区域


#diff
	C:\VMstatic\0000000-215\trunk\document\技術検討\AtomFeed
		・TOPプロジェクトにて、Feed用のカスタムクエリを作成し、購読させる
	i	・カスタムクエリの範疇にて、抽出条件のカスタマイズが可能



#redmine-plugin
	rails g redmine_plugin_model lgdis issues_addtion_datum id:integer:yes issue_id:integer

      create  plugins/lgdis/app/models/issues_addtion_datum.rb
      create  plugins/lgdis/test/unit/issues_addtion_datum_test.rb
      create  plugins/lgdis/db/migrate/005_create_issues_addtion_data.rb



■SOAP
	rubyでsoapサーバを作る - hippos-lab::net
	    WSDLの作成
	    wsdl2rubyでスケルトンを生成
	    中身を実装

	SOAPでは次のような事柄が規定されています。
	● エンベロープ構成要素
	├ メッセージ構成
	└ 処理仕様
	● エンコーディング規則
	└ データのシリアライズメカニズム
	● RPC表現規則
	└ 要求と応答の規則


	#server
	 wsdl2ruby.rb --wsdl a.wsdl --type server --force

	#client
	 wsdl2ruby.rb --wsdl a.wsdl --type client --force


	実行
	ターミナル1
	 $ ruby -I. CalcServer.rb

	ターミナル2
	 $ ruby -I. CalcServerClient.rb



	・Rubyで実行

	1.root権限で以下のコマンドを実行（soap4r-ruby1.9ライブラリのインストール）
	gem install soap4r-ruby1.9

	・Railsで実行

	2.Gemfileに以下を追加
	gem "soap4r-ruby1.9"

	3.下記コマンドを実行
	bundle install

	参考URL
	http://route477.net/w/?RubySOAPt（Route 477 - RubyでSOAP）




	コモンズノードシステム上の SOAP 発信設定 は、
	http://schemas.xmlsoap.org/soap/http
		publish(msg:any)
		返値
			getCode():int
			getResult():any




	公共情報コモンズ　マスタ管理システムの認証IDとパスワードを
	開発目的用につかいたいので､テスト用のIDとパスワードで十分です､
	https://www.publiccommons.ne.jp/SAMLService/SSO?returnURL=http%3A%2F%2FOS-PBS01%2FAssertionConsumer%2FSAML%2FArtifact&target=JJnDgAFi1PwDYjOs
		nttcom0@ishinomaki-city
		masasato@ishinomaki-city




■SOAPの問題点
	getCode
	X509




RESQUE
	 service redis restart
	rake resque:work                          # Start a Resque worker
	rake resque:workers                       # Start multiple Resque workers.
	rake resque:work QUEUE='*'
	rails s


mail
	BCC=ON

	#A社からは外部不特定通信先へのSSH通信(:443)とSMTP通信(:25)はみとめられていない｡したがってSMTP機能をつかったﾒｰﾙ配信機能はローカルホスト環境で行った｡

#ポート開放8
	#停止
	/etc/init.d/iptables stop
	#無効
	chkconfig iptables off
	#状況確認
	/etc/init.d/iptables status
	vi /etc/sysconfig/^Ctables
	vi /etc/postfix/master.cf


    #postfix

        #インストール
        yum install postfix


     #設定のながれ
        vi /etc/postfix/main.cf
        hostname
        mkdir /root/Maildir; mkdir /home/apl/Maildir
        chmod 700  /root/Maildir; chmod 700  /home/apl/Maildir
        chown root:root  /root/Maildir
        chown apl:apl  /home/apl/Maildir
        /etc/rc.d/init.d/postfix restart

     #動作確認
	#ポート開放確認
        telnet localhost 25
	 quit

	#サーバーローカルshellレベルでの直接送信
        echo test|sendmail root


	#Mailbox確認(Mailbox型式は暫定的にMailDir型式)
        date;ls -alt /[$USERHOME]/Maildir/new
	cat /root/Maildir/new/*
        	例)	date;ls -alt /root/Maildir/new
					date;ls -alt /root/Maildir/new; ls -alt  /home/apl/Maildir/new/
					cat /home/apl/Maildir/new/13617*

	#Redmine admin>adminユーザー情報変更
	http://192.168.18.130:3000/users/1
		メールアドレス	root@localhost.localdomain　に設定
		password再設定
		time-zone	GMT+9 Tokyo 再設定

	#Redmine admin>設定>管理>メール通知画面　右下最下部のテストメール送信リンクでの確認
	http://192.168.18.130:3000/settings/edit?tab=notifications
		デフォルトの送信者名redmine@example.netを適宜変更して保存してから送信リンクをクリックしてテストする｡保存しないでクリックするとメールヘッダーの送信者名は変わらない｡
i #
  #Rails環境設定
#設定編集 vi /opt/fix/LGDIS/config/environments/development.rb

	#規定値:config.action_mailer.raise_delivery_errors = false　を以下のごとく変更;
	config.action_mailer.perform_deliveries = true
	config.action_mailer.raise_delivery_errors = true
	Rails.application.config.action_mailer.perform_deliveries = true
	Rails.application.config.action_mailer.raise_delivery_errors = true

#IRB/ConsoleモードでRailsを起動し､以下のテストコマンド発行
<SMTP-Plain>
Lgdis::ExtOut::Mailer.setup( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "root@localhost.localdomain").deliver
Lgdis::ExtOut::SMTP_JichiShokuin.send_message({"mailing_list_name" =>"root@localhost.localdomain", "title" => "title漢字", "message" =>"sss漢字-------------"}, false)
Lgdis::ExtOut::Mailer.setup( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "apl@localhost.localdomain").deliver
Lgdis::ExtOut::Mailer.setup_auth( "apl@localhost.localdomain","SMTP-AUTH引数0", "########################################").deliver

/usr/local/lib/ruby/gems/1.9.1/gems/mail-2.4.4/lib/mail/message.rb
   229                                  debugger
   230          #debugcode  ActionMailer::Base.smtp_settings  ActionMailer::Base.raise_delivery_errors   ActionMailer::Base.perform_deliveries
=> 231          delivery_handler.deliver_mail(self) { do_delivery }

 "utf-8", "some_body@di-system.co.jp", "some_body@di-system.co.jp", "AlphaNumerics")


<SMTP-AUTH>
★Rootパスワードは社外秘
Lgdis::ExtOut::Mailer.setup_auth( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "root@localhost.localdomain", "root", "1qazxsw2").deliver
Lgdis::ExtOut::Mailer.setup_auth( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "root@localhost.localdomain", "apl", "AlphaNumerics").deliver
★MTAサーバー(postfixなど)にSMTP-AUTHの設定がされていない状況で､AUTHのコマンドを叩くと当然失敗する｡
これを複数回くりかえすと､不正接続とみなされて､正しいSMTP-PLAINでのコマンドも失敗する｡
→設定に工夫をくわえると解消される可能性あり｡

 Lgdis::ExtOut::SMTP_JichiShokuin.send_message({"mailing_list_name" =>"some_body@di-system.co.jp", "title" => "title漢字", "message" =>"sss漢字-------------"}, false)
[224, 233] in /usr/local/lib/ruby/gems/1.9.1/gems/mail-2.4.4/lib/mail/message.rb
   224      #  mail = Mail.read('file.eml')
   225      #  mail.deliver
   226      def deliver
   227        inform_interceptors
   228        if delivery_handler
=> 229          delivery_handler.deliver_mail(self) { do_delivery }
(rdb:1) delivery_handler.deliver_mail(self) { do_delivery }
SMTP-Plain postfix bug
Net::SMTPFatalError Exception: 554 5.7.1 <some_body@di-system.co.jp>: Relay access denied
Gmail bug
Encoding::CompatibilityError Exception: incompatible encoding regexp match (US-ASCII regexp with ISO-2022-JP string)
mail.body = mail.body.raw_source.encode('ISO-2022-JP', :invalid => :replace, :undef => :replace).encode('UTF-8')
mail.body = mail.body.raw_source.encode('iso-2022-jp', :invalid => :replace, :undef => :replace).encode('utf-8') #変換エラー対策




	#potfixログ確認
	tail /var/log/maillog



#SMTP-AUTH設定

	#curys-sasl
	cyrus-saslは非常に多機能で、
	一般的な テキスト 認証の他に暗号化認証も扱うことができますし、
	構築中のLinuxサーバー の ユーザーアカウント 名とパスワードをそのまま認証に使うことも、
	別の データベース を使って認証を行うこともできるようになっています。


	#install
		cyrus-sasl-xxxxxxx
		cyrus-sasl-plain


	vi /usr/lib/sasl2/smtpd.conf
		pwcheck_method: saslauthd


	service saslauthd start
		saslauthdを起動中:                                         [  OK  ]

	vim /etc/postfix/main.cf
		myorigin = $myhostname
		 "SMTP Auth"の利用を許可する
		smtpd_sasl_auth_enable = yes

		"anonymous"接続を拒否する。
		smtpd_sasl_security_options = noanonymous

		"OutlookExpress対応
		broken_sasl_auth_clients = yes

		smtpd_sasl_local_domain = $mydomain
		smtpd_recipient_restrictions =
		    permit_mynetworks,
		    permit_sasl_authenticated,
		    reject_unauth_destination,
		    permit_auth_destination,
		    reject

		    permit_mynetworksは、サーバー内のネットワーク、つまり内部からの利用を許可するものです。
		    permit_sasl_authenticated は、sasl認証できたものだけ受け入れる。
		    reject_unauth_destination で、認証できなかったものは、拒否する。
		    permit_auth_destination で、認証できたものは、受け入れる。
		    reject で、その他は、拒否する。

	    etc/init.d/postfix restart

	#curys-sasl password config
		/useradd some_body -s /sbin/nologin
		/usr/sbin/saslpasswd -c some_body
		/usr/sbin/sasldblistusers

		chgrp postfix /etc/sasldb
		chmod 640 /etc/sasldb

	#Mailer-config
		→「アカウント設定」→「サーバー」→「このサーバーは認証が必要」または「送信サーバーは認証が必要」にチェックを入れる。
		or
		→「送信(SMTP)サーバの設定」から「セキュリティと認証」の「ユーザ名とパスワードを使用する」にチェックを入れる

	    etc/init.d/postfix restart
	    または
	　　 service postfix restart
		#/etc/init.d/saslauthdも起動していれば成功　

	#参考:確認コマンド
		postfix　-n
		postfix check


SAMBA
	vi /etc/samba/smb.conf
	最終行に以下の記述を追加
	[opt]
	path = /home/apl
	read only = No

	#再起動する
	/etc/rc.d/init.d/smb restart

	#スタート＞ファイル名を指定して実行＞(VMのIP)でつながります
	#ネットワークドライブを割り当てると便利



================== ====================================
vim -S ~/session-130203 +VE +MRU
==================================================================


# Rubyコーディングスタイル
#
# then 省略
# .blank? .present?をつかう｡　.nil? .empty?はつかわない｡
# ※find_by_xxxという書き方はNG（元々あるメソッドを上書きしてし まうため）
#   find(:all, :conditions => ["name LIKE ?%", "A"], :order => "name ASC")
# ビジネスロジックはモデルに記入
# モデルは共通モデルクラスを継承
#  require_dependency 'model_helper'
#   class Foo < CustomModel extend ModelHelper
#
#文法チェックと警告
# ruby -wc <ファイル名>
	ruby -wTW2 <ファイル名>
#pwdのRDoc生成は　 rdoc -c utf8
#Rails全体の rake doc:app
#
# Stackはスタックを実装するクラスである。
class Stack

#RDoc コメントの付け方

■rdocの生成
rdoc は、手元でドキュメントを生成してみて、ちゃんと出力されることを確認する。
rdoc は、以下のコマンドで生成できる。
$ rdoc -c utf8
ドキュメントはカレントディレクトリの下の doc ディレクトリにHTML形式で生成される。また、オプションに -d をつけると、クラス図もつく（あまりわかりやすい図ではないが）
rails の場合は、以下のようにして生成する。
$ rake doc:app
カレントディレクトリの下の doc/app に生成される。
原則として、実装したクラス、モジュール、メソッド、定数には RDoc 形式のコメントを付ける。

  # スタック・アンダーフロー
  class UnderflowError < RuntimeError;  end

  # スタック・オーバーフロー
  class OverflowError < RuntimeError;  end

  # デフォルトのスタック容量
  DEFAULT_CAPACITY = 10

  # スタックの大きさ
  attr_reader :size
  # スタックの容量
  attr_reader :capacity

  # スタックへオブジェクトをプッシュする。
  # ==== Args
  # _obj_ :: プッシュするオブジェクト
  # ==== Raise
  # OverflowError :: スタック内のオブジェクトが容量を超える場合に発生。
  def push obj
    # TODO Stack#push の実装
  end

  # スタックからオブジェクトをポップする。
  # ==== Return
  # ポップされたオブジェクト。
  # ==== Raise
  # UnderflowError :: スタックが空である場合に発生。
  def pop
    # TODO Stack#pop の実装
  end
end


?	クラスコメント(ファイル先頭部分)のルール
o	require、namespace定義は、クラスコメントより上に記述する。
(クラスコメントより下に記述すると、ファイルのコメント部分に表示されるようになるため)
o	必ずクラス名を含める。
(この部分のRDocの出力にクラスのドキュメントへのリンクが自動で含まれないため)

?	メソッドのコメントルール
o	引数は　# ==== Args以下に # _"変数名"_ :: "変数の説明"形式で記述する。
o	戻り値が有る場合は # === Return以下に必ず記述する。
o	特筆すべき例外は # ==== Raise以下に # "例外クラス名" :: "例外の説明"形式で必ず記述する。


~



================================================================================
git
	linux GUI

	commit=pg uploading
	clone = pg downloading with history

	push = history uploading
		default repositry name = 'origin'
	pull = histoy downloading
		default repositry name = 'origin'
		エラーには
			git commit -a 	<--'automatic'
		か　
			git reset --hard　
		で対処

	merge(ウィthnon-fast-forwarding option)
	統合ブランチ（本流）と
	トピックブランチ（支流）
		default repositry name = 'head'
		checkout [of some branch]= work tree place of head
			stash	=	まだコミットしていない変更点が他のブランチのヘッドに移ることをふせぐ変更点隔離措置



		head~n = -n generation
		head^n = -n parantes

	mergeとrebaseは共に履歴を統合しますが、特徴が異なります。
		merge
		変更内容の履歴はそのまま残るが、履歴が複雑になる。
		rebase
		履歴は単純になるが、元のコミットから変更内容が変更される。
		そのため、元のコミットを動かない状態にしてしまうことがある。
		mergeとrebaseは、チームの運用方針に応じて使い分けます。
		例えば、履歴を一本化するように運用をするのであれば

		トピックブランチに統合ブランチの最新のコードを取り込む場合はrebaseを使う
		統合ブランチにトピックブランチを取り込む場合は、まずrebaseしてからmerge


		Gitでのブランチの運用モデルとして、A successful Git branching modelを紹介します。
		日本語訳:
		http://keijinsonyaban.blogspot.jp/2010/10/successful-git-branching-model.html

	#configurations.yml やroutes.rbなど開発専用ファイルを設定

	rails s --debugger



#Rspec
	vi /opt/fix/LGDIS/config/database.yml
		test:
			adapter: postgresql
			database: LGDIS_test
			host: 127.0.0.1
			username: dev
			password: devdev
			encoding: utf8
	vi ~/.rspecrc
		--debug

 export RAILS_ENV=.
	RAILS_ENV=test rake db:migrate:reset
	RAILS_ENV=test rake redmine:plugins:migrate
	RAILS_ENV=test rake redmine:load_default_data
	RAILS_ENV=test rake db:seed
	RAILS_ENV=test rspec /opt/fix/LGDIS/plugins/lgdis/spec/controllers/shelters_controller_spec.rb

★リダイレクト実行時にdebuggerはオフにすること





	rspec /opt/fix/LGDIS/plugins/lgdis/spec/controllers/evacuation_advisories_controller_spec.rb|less
bsbs

vi /opt/fix/LGDIS/spec/factories/evacuation_advisory_factory.rb

	describe/contect   ..... do
		it 'message' do
			*** should_XXXX
			***  == +++




apache+LDAP認証
Google map api
Rhodes


----
Linux GIT GUI


#認証とかの情報設定
ActionMailer::Base.smtp_settings =
{ :address => 'smtp.hoge.co.jp',
	:port => 25,
        :domain => 'hoge.co.jp',
        :user_name => 'sukottotaigaaa',
        :password => 'hogemogepyapypay',
        :authentication => :login
}


#rail3 routing
RedmineApp::Application.routes.url_helpers.
i RedmineApp::Application.routes.url_for(
rb(main):079:0>  Redmine::Plugin.registered_plugins[:lgdis].directory
=> "/opt/fix/LGDIS/plugins/lgdis"
irb(main):080:0> Redmine::Plugin.registered_plugins[:lgdis].public_directory
=> "/opt/fix/LGDIS/public/plugin_assets/lgdis"
irb(main):081:0>  Redmine::Plugin.registered_plugins[:lgdis].url
=> nil
irb(main):082:0>  Redmine::Plugin.registered_plugins[:lgdis].methods.sort
=> [:!, :!=, :!~, :<=>, :==, :===, :=~, :__id__, :__is_a__, :__metaclass__, :__send__, :_method, :`, :activity_provider, :acts_like?, :add_menu_item, :as_json, :assets_directory, :author, :author_url, :binding_n, :blank?, :breakpoint, :capture, :class, :class_eval, :clone, :configurable?, :dclone, :debugger, :define_singleton_method, :delete_menu_item, :description, :directory, :directory=, :display, :dup, :duplicable?, :enable_warnings, :enum_for, :eql?, :equal?, :expects, :extend, :freeze, :frozen?, :gem, :hash, :html_safe?, :id, :in?, :initialize_clone, :initialize_dup, :inspect, :instance_eval, :instance_exec, :instance_of?, :instance_values, :instance_variable_defined?, :instance_variable_get, :instance_variable_names, :instance_variable_set, :instance_variables, :is_a?, :kind_of?, :latest_migration, :load, :load_dependency, :menu, :method, :method_exists?, :methods, :migrate, :migration_directory, :migrations, :mirror_assets, :mocha, :mocha_inspect, :name, :nil?, :object_id, :permission, :presence, :present?, :pretty_inspect, :pretty_print, :pretty_print_cycle, :pretty_print_inspect, :pretty_print_instance_variables, :private_methods, :project_module, :protected_methods, :psych_to_yaml, :public_directory, :public_directory=, :public_method, :public_methods, :public_send, :quietly, :require, :require_association, :require_dependency, :require_or_load, :requires_redmine, :requires_redmine_plugin, :reset_mocha, :respond_to?, :respond_to_missing?, :send, :settings, :should, :should_not, :silence, :silence_stderr, :silence_stream, :silence_warnings, :singleton_class, :singleton_methods, :stubba_method, :stubba_object, :stubs, :suppress, :suppress_warnings, :taint, :tainted?, :tap, :to_enum, :to_json, :to_matcher, :to_param, :to_query, :to_s, :to_yaml, :to_yaml_properties, :trust, :try, :unloadable, :unstub, :untaint, :untrust, :untrusted?, :url, :version, :wiki_format_provider, :with_options, :with_warnings]


#irb technique
 helper.render :template => "common/feed", :formats => [:atom], :layout => false,  :content_type => 'application/atom+xml'
helper.request
ActiveRecord::Base.connection.select_values('SELECT * FROM evacuation_advisories')
 ActiveRecord::Base.connection.select_value("select nextval('evacuation_code_seq')")	#<---sequence name
privateメソッドはIRBからは定義行しか見えない｡


#Rails環境変数
Rails.application.config
@generators=#<Rails::Configuration::Generators:0x9b3e83c
@aliases={},
@options={:rails=>{:orm=>:active_record, :test_framework=>:test_unit, :integration_tool=>:test_unit, :performance_tool=>:test_unit}, :active_record=>{:migration=>true, :timestamps=>true}, :test_unit=>{:fixture=>true, :fixture_replacement=>nil}},
@fallbacks={},
@templates=[],
@colorize_logging=true,
@hidden_namespaces=[]>,
@encoding="utf-8",
@allow_concurrency=false,
@consider_all_requests_local=false,
@filter_parameters=[:password],
@helpers_paths=["/opt/fix/LGDIS/app/helpers"],
@dependency_loading=true,
@serve_static_assets=true,
@static_cache_control=nil,
@force_ssl=false,
@ssl_options={},
@session_store=:cookie_store,
@session_options={:key=>"_redmine_session", :secret=>"bdd227ec5f0dbfa5f5e774c15050beb83b60c5b0bdef2c18bdf51163a3d7", :coder=>#<Rack::Session::Cookie::Base64::Marshal:0xc2c9154>, :cookie_only=>true},
@time_zone="Tokyo",
@log_level=:debug,
@middleware=#<ActionDispatch::MiddlewareStack:0xc34220c
@middlewares=[ActionDispatch::Static, Rack::Lock, #<ActiveSupport::Cache::Strategy::LocalCache::Middleware:0xa3f2d20>, Rack::Runtime, Rack::MethodOverride, ActionDispatch::RequestId, Rails::Rack::Logger, ActionDispatch::ShowExceptions, ActionDispatch::DebugExceptions, ActionDispatch::RemoteIp, ActionDispatch::Reloader, ActionDispatch::Callbacks, ActiveRecord::ConnectionAdapters::ConnectionManagement, ActiveRecord::QueryCache, ActionDispatch::Cookies, ActionDispatch::Session::CookieStore, ActionDispatch::Flash, ActionDispatch::ParamsParser, ActionDispatch::Head, Rack::ConditionalGet, Rack::ETag, ActionDispatch::BestStandardsSupport, OpenIdAuthentication]>,
@cache_store=[:file_store, "/opt/fix/LGDIS/tmp/cache/"],
@railties_order=[:all],
@relative_url_root=nil,
@reload_classes_only_on_change=true,
@file_watcher=ActiveSupport::FileUpdateChecker,
@exceptions_app=nil,
@assets={:enabled=>false, :paths=>["/usr/local/lib/ruby/gems/1.9.1/gems/jquery-rails-2.2.0/vendor/assets/javascripts"], :precompile=>[#<Proc:0xacddbec
@/usr/local/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/application/configuration.rb:48>, /(?:\/|\\|\A)application\.(css|js)$/], :prefix=>"/assets", :version=>"1.0", :debug=>false, :compile=>true, :digest=>false, :manifest=>nil, :cache_store=>[:file_store, "/opt/fix/LGDIS/tmp/cache/assets/"], :js_compressor=>nil, :css_compressor=>nil, :initialize_on_precompile=>true, :logger=>nil},
@paths={"app"=>["app"], "app/assets"=>["app/assets"], "app/controllers"=>["app/controllers"], "app/helpers"=>["app/helpers"], "app/models"=>["app/models"], "app/mailers"=>["app/mailers"], "app/views"=>["app/views"], "lib"=>["lib"], "lib/assets"=>["lib/assets"], "lib/tasks"=>["lib/tasks"], "config"=>["config"], "config/environments"=>["config/environments"], "config/initializers"=>["config/initializers"], "config/locales"=>["config/locales"], "config/routes"=>["config/routes.rb"], "db"=>["db"], "db/migrate"=>["db/migrate"], "db/seeds"=>["db/seeds.rb"], "vendor"=>["vendor"], "vendor/assets"=>["vendor/assets"], "vendor/plugins"=>["vendor/plugins"], "config/database"=>["config/database.yml"], "config/environment"=>["config/environment.rb"], "lib/templates"=>["lib/templates"], "log"=>["log/development.log"], "public"=>["public"], "public/javascripts"=>["public/javascripts"], "public/stylesheets"=>["public/stylesheets"], "tmp"=>["tmp"]},
@autoload_paths=["/opt/fix/LGDIS/lib"],
@eager_load_paths=["/opt/fix/LGDIS/app/controllers", "/opt/fix/LGDIS/app/helpers", "/opt/fix/LGDIS/app/models"],
@autoload_once_paths=[],
@cache_classes=false,
@whiny_nils=true,
@secret_token="804c13d30e4b4d9bdbeb819e2aea4a6d9c



#Redmine環境変数
 Mailer.test_email(User.all[4]).deliver
ActionMailer::Base.smtp_settings

.config
#<Rails::Application::Configuration:0xb0c4e7c
@root=#<Pathname:/opt/fix/LGDIS>,
@generators=#<Rails::Configuration::Generators:0x9b3e83c
@aliases={},
@options={:rails=>{:orm=>:active_record, :test_framework=>:test_unit, :integration_tool=>:test_unit, :performance_tool=>:test_unit}, :active_record=>{:migration=>true, :timestamps=>true}, :test_unit=>{:fixture=>true, :fixture_replacement=>nil}},
@fallbacks={},  ""
@templates=[],
@colorize_logging=true,
@hidden_namespaces=[]>,
@encoding="utf-8",
@allow_concurrency=false,
@consider_all_requests_local=false,
@filter_parameters=[:password],
@helpers_paths=["/opt/fix/LGDIS/app/helpers"],
@dependency_loading=true,
@serve_static_assets=true,
@static_cache_control=nil,
@force_ssl=false,
@ssl_options={},
@session_store=:cookie_store,
@session_options={:key=>"_redmine_session", :secret=>"bdd227ec5f0dbfa5f5e774c15050beb83b60c5b0bdef2c18bdf51163a3d7", :coder=>#<Rack::Session::Cookie::Base64::Marshal:0xc2c9154>, :cookie_only=>true},
@time_zone="Tokyo",
@log_level=:debug,
@middleware=#<ActionDispatch::MiddlewareStack:0xc34220c
@middlewares=[ActionDispatch::Static, Rack::Lock, #<ActiveSupport::Cache::Strategy::LocalCache::Middleware:0xa3f2d20>, Rack::Runtime, Rack::MethodOverride, ActionDispatch::RequestId, Rails::Rack::Logger, ActionDispatch::ShowExceptions, ActionDispatch::DebugExceptions, ActionDispatch::RemoteIp, ActionDispatch::Reloader, ActionDispatch::Callbacks, ActiveRecord::ConnectionAdapters::ConnectionManagement, ActiveRecord::QueryCache, ActionDispatch::Cookies, ActionDispatch::Session::CookieStore, ActionDispatch::Flash, ActionDispatch::ParamsParser, ActionDispatch::Head, Rack::ConditionalGet, Rack::ETag, ActionDispatch::BestStandardsSupport, OpenIdAuthentication]>,
@cache_store=[:file_store, "/opt/fix/LGDIS/tmp/cache/"],
@railties_order=[:all],
@relative_url_root=nil,
@reload_classes_only_on_change=true,
@file_watcher=ActiveSupport::FileUpdateChecker,
@exceptions_app=nil,
@assets={:enabled=>false, :paths=>["/usr/local/lib/ruby/gems/1.9.1/gems/jquery-rails-2.2.0/vendor/assets/javascripts"], :precompile=>[#<Proc:0xacddbec
@/usr/local/lib/ruby/gems/1.9.1/gems/railties-3.2.11/lib/rails/application/configuration.rb:48>, /(?:\/|\\|\A)application\.(css|js)$/], :prefix=>"/assets", :version=>"1.0", :debug=>false, :compile=>true, :digest=>false, :manifest=>nil, :cache_store=>[:file_store, "/opt/fix/LGDIS/tmp/cache/assets/"], :js_compressor=>nil, :css_compressor=>nil, :initialize_on_precompile=>true, :logger=>nil},
@paths={"app"=>["app"], "app/assets"=>["app/assets"], "app/controllers"=>["app/controllers"], "app/helpers"=>["app/helpers"], "app/models"=>["app/models"], "app/mailers"=>["app/mailers"], "app/views"=>["app/views"], "lib"=>["lib"], "lib/assets"=>["lib/assets"], "lib/tasks"=>["lib/tasks"], "config"=>["config"], "config/environments"=>["config/environments"], "config/initializers"=>["config/initializers"], "config/locales"=>["config/locales"], "config/routes"=>["config/routes.rb"], "db"=>["db"], "db/migrate"=>["db/migrate"], "db/seeds"=>["db/seeds.rb"], "vendor"=>["vendor"], "vendor/assets"=>["vendor/assets"], "vendor/plugins"=>["vendor/plugins"], "config/database"=>["config/database.yml"], "config/environment"=>["config/environment.rb"], "lib/templates"=>["lib/templates"], "log"=>["log/development.log"], "public"=>["public"], "public/javascripts"=>["public/javascripts"], "public/stylesheets"=>["public/stylesheets"], "tmp"=>["tmp"]},
@autoload_paths=["/opt/fix/LGDIS/lib"],
@eager_load_paths=["/opt/fix/LGDIS/app/controllers", "/opt/fix/LGDIS/app/helpers", "/opt/fix/LGDIS/app/models"],
@autoload_once_paths=[],
@cache_classes=false,
@whiny_nils=true,
@secret_token="804c13d30e4b4d9bdbeb819e2aea4a6d9cdd12c0e209bedf08828cbcd32ee5f14d0ba5f9987f2ebc8c6d32fd58685d5991b6475828487fd923a03f74b6d4a013">



----------------------------------------





/opt/LGDIS/app/controllers/projects_controller.rb
 47   # Lists visible projects
 48   def index
 49     respond_to do |format|
 50       format.html {
 51         scope = Project
 52         unless params[:closed]
 53           scope = scope.active
 54         end
 55         @projects = scope.visible.order('lft').all
 56       }
 57       format.api  {
 58         @offset, @limit = api_offset_and_limit
 59         @project_count = Project.visible.count
 60         @projects = Project.visible.all(:offset => @offset, :limit => @limit, :order => 'lft')
 61       }
 62       format.atom {
 63         projects = Project.visible.find(:all, :order => 'created_on DESC',
 64                                               :limit => Setting.feeds_limit.to_i)
 65         render_feed(projects, :title => "#{Setting.app_title}: #{l(:label_project_latest)}")
 66       }
 67     end
 68   end


application_controller.rb|98 col 33| elsif params[:format] == 'atom' && params[:key] && request.get? && accept_rss_auth?
 98       elsif params[:format] == 'atom' && params[:key] && request.get? && accept_rss_auth?
 99         # RSS key authentication does not start a session
100         user = User.find_by_rss_key(params[:key])



 4 application_controller.rb|425 col 54| render :template => "common/feed", :formats => [:atom], :layout => false,
420   def render_feed(items, options={})
421     @items = items || []
422     @items.sort! {|x,y| y.event_datetime <=> x.event_datetime }
423     @items = @items.slice(0, Setting.feeds_limit.to_i)
424     @title = options[:title] || Setting.app_title
425     render :template => "common/feed", :formats => [:atom], :layout => false,
426            :content_type => 'application/atom+xml'
427   end


 10 issues_controller.rb|122 col 14| format.atom { render :template => 'journals/index', :layout => false, :content_type => 'application/atom+xml' }
102   def show
103     @journals = @issue.journals.includes(:user, :details).reorder("#{Journal.table_name}.id ASC").all
104     @journals.each_with_index {|j,i| j.indice = i+1}
105     @journals.reject!(&:private_notes?) unless User.current.allowed_to?(:view_private_notes, @issue.project)
106     @journals.reverse! if User.current.wants_comments_in_reverse_order?
107
108     @changesets = @issue.changesets.visible.all
109     @changesets.reverse! if User.current.wants_comments_in_reverse_order?
110
111     @relations = @issue.relations.select {|r| r.other_issue(@issue) && r.other_issue(@issue).visible? }
112     @allowed_statuses = @issue.new_statuses_allowed_to(User.current)
113     @edit_allowed = User.current.allowed_to?(:edit_issues, @project)
114     @priorities = IssuePriority.active
115     @time_entry = TimeEntry.new(:issue => @issue, :project => @issue.project)
116     respond_to do |format|
122       format.atom { render :template => 'journals/index', :layout => false, :content_type => 'application/atom+xml' }
127     end
128   end

rb(main):076:1> puts IssuesController.respond_to{|f| f.atom(ApplicationController.render_feed(Issue.first, :title => "test")  }
irb(main):077:2> puts IssuesController.respond_to{|f| f.atom(ApplicationController#render_feed(Issue.first, :title => "test")  }





require "cgi"
require "template"

class Feeder
    def self.get(tmpl_path, options = {})
        cgi = CGI.new
        mime_type = options[:mime_type] || "application/xml"
        encoding = options[:encoding] || "utf-8"
        language = options[:language] || "ja"

        v = Template.get(tmpl_path, {"type" => mime_type, "charset" => encoding})
        v.encoding = encoding
        v.language = language
        v.site_url = "http://" + cgi.server_name
        v.feed_url = v.site_url + cgi.script_name if v.methods.include?("feed_url")
        return v
    end
end


irb(main):152:0> issue.methods.sort.grep(/(author|er_name|title)/i)
=> [:_active_authorizer, :_active_authorizer=, :_active_authorizer?, :author, :author=, :author_id, :author_id=, :author_id?, :author_id_before_type_cast, :author_id_change,
:author_id_changed?, :author_id_was, :author_id_will_change!, :autosave_associated_records_for_author, :build_author, :create_author!, :event_author, :event_title,
:mass_assignment_authorizer, :reset_author_id!]



<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>平時・未割当: 活動</title>
  <link rel="self" href="http://192.168.18.130:3000/projects/lgdis000/activity.atom?key=6724553250c556a08a5ff4a76724d8b5ed1c3a45"/>
  <link rel="alternate" href="http://192.168.18.130:3000/projects/lgdis000/activity"/>
  <id>http://192.168.18.130:3000/</id>
  <updated>2013-01-24T07:59:01Z</updated>
  <author>
    <name>Redmine</name>
  </author>
  <generator uri="http://www.redmine.org/">
Redmine  </generator>
  <entry>
    <title>避難勧告・指示情報（公共情報コモンズ配信用） #14 (新規): ISSUE 01</title>
    <link rel="alternate" href="http://192.168.18.130:3000/issues/14"/>
    <id>http://192.168.18.130:3000/issues/14</id>
    <updated>2013-01-24T07:59:01Z</updated>
    <author>
      <name>Admin Redmine</name>
      <email>root@localhost.localdomain</email>
    </author>
    <content type="html">

&lt;p&gt;ISSUE 01msg&lt;/p&gt;    </content>
  </entry>
</feed>




redmine_pg_dev=# \d shelters
                                                 テーブル "public.shelters"
                  列                   |             型              |                        修飾語
---------------------------------------+-----------------------------+-------------------------------------------------------
 id                                    | integer                     | not null default nextval('shelters_id_seq'::regclass)
 project_id                            | integer                     | not null
 disaster_code                         | character varying(20)       | not null
 name                                  | character varying(30)       | not null
 name_kana                             | character varying(60)       |
 address                               | character varying(200)      | not null
 phone                                 | character varying(20)       |
 fax                                   | character varying(20)       |
 e_mail                                | character varying(255)      |
 person_responsible                    | character varying(100)      |
 shelter_type                          | character varying(255)      | not null
 shelter_type_detail                   | character varying(255)      |
 shelter_sort                          | character varying(255)      | not null
 opened_at                             | timestamp without time zone |
 closed_at                             | timestamp without time zone |
 capacity                              | integer                     |
 status                                | character varying(255)      |
 head_count                            | integer                     |
 head_count_voluntary                  | integer                     |
 households                            | integer                     |
 households_voluntary                  | integer                     |
 checked_at                            | timestamp without time zone |
 shelter_code                          | character varying(14)       | not null
 manager_code                          | character varying(10)       |
 manager_name                          | character varying(100)      |
 manager_another_name                  | character varying(100)      |
 reported_at                           | timestamp without time zone |
 building_damage_info                  | character varying(4000)     |
 electric_infra_damage_info            | character varying(4000)            | character varying(4000)     |
 other_damage_info                     | character varying(4000)     |
 usable_flag                           | character varying(1)        |
 openable_flag                         | character varying(1)        |
 injury_count                          | integer                     |
 upper_care_level_three_count          | integer                     |
 elderly_alone_count                   | integer                     |
 elderly_couple_count                  | integer                     |
 bedridden_elderly_count               | integer                     |
 elderly_dementia_count                | integer                     |
 rehabilitation_certificate_count      | integer                     |
 physical_disability_certificate_count | integer                     |
 note                                  | character varying(4000)     |
 deleted_at                            | timestamp without time zone |
 created_at                            | timestamp without time zone | not null
 updated_at                            | timestamp without time zone | not null
インデックス:
    "shelters_pkey" PRIMARY KEY, btree (id)

root@localhost:/opt/LGDIS/plugins/lgdis# find . -name "*shelter*" -print sort
./app/controllers/shelters_controller.rb
./app/helpers/shelters_helper.rb
./app/models/shelter.rb
./app/views/shelters
./assets/stylesheets/shelters.css
./db/migrate/001_shelters.rb


	rails g redmine_plugin_model lgdis  evacuation_advisory id:integer:yes project_id:integer
	rails g redmine_plugin_controller lgdis  evacuation_advisories index

		/app/controllers/evacuation_advisories_controller.rb
		/app/helpers/evacuation_advisories_helper.rb
		/app/models/evacuation_advisory.rb
		/app/views/evacuation_advisories/index.html.erb
		/db/migrate/007_create_evacuation_advisories.rb
		/test/functional/evacuation_advisories_controller_test.rb
		/test/unit/evacuation_advisory_test.rb

	 grep -nirE "remark" * --include=*.rb
grep -nirE "total_pages" /data/on_gree/bm_gree/* --include=**  --exclude=*.sw* --exclude=*~ --exclude=*spec* --exclude=*log  --exclude=*svn*

	前後5行を出力する例
grep -nirE "total_pages" /data/on_gree/bm_gree/* --include=**  --exclude=*.sw* --exclude=*~ --exclude=*spec* --exclude=*log  --exclude=*svn* -C5

##############
 rails g redmine_plugin_controller lgdis issue_geographies
 rails g redmine_plugin_model lgdis issue_geography
find . -name "*geog*" -print |sort


#LINUX運用コマンド　(開発系)
	#step数ステップ数 メソッド数
# find . -name "*rb" -o -name "*.yml" | xargs wc -l
grep -nirE "def \w" .  --include=**  --exclude=*.sw* --exclude=*~ --exclude=*.log > ../../GrepDef.txt

	rake -T |grep stat
	rake stats

		root@localhost:/opt/fix/LGDIS# rake stats

		*** Mocha deprecation warning: Change `require 'mocha'` to `require 'mocha/setup'`.

		+----------------------+-------+-------+---------+---------+-----+-------+
		| Name                 | Lines |   LOC | Classes | Methods | M/C | LOC/M |
		+----------------------+-------+-------+---------+---------+-----+-------+
		| Controllers          |  6397 |  4716 |      49 |     392 |   8 |    10 |
		| Helpers              |  3965 |  2665 |       2 |     234 | 117 |     9 |
		| Models               | 11569 |  8033 |      86 |     871 |  10 |     7 |
		| Libraries            | 32843 | 23889 |     155 |    1378 |   8 |    15 |
		| Integration tests    |  7711 |  5727 |      82 |     168 |   2 |    32 |
		| Functional tests     | 16661 | 13404 |      81 |    1221 |  15 |     8 |
		| Unit tests           | 22610 | 17290 |     119 |    1547 |  13 |     9 |
		+----------------------+-------+-------+---------+---------+-----+-------+
		| Total                | 101756 | 75724 |     574 |    5811 |  10 |    11 |
		+----------------------+-------+-------+---------+---------+-----+-------+
			Code LOC: 39303     Test LOC: 36421     Code to Test Ratio: 1:0.9

 16918 合計


	find . -name "*rb" | xargs wc -l
	find . -name "*rb" -o -name "*.yml" | xargs wc -l
	#手動バックアップ
	 tar cvf lgdis-imamondai4.tar lgdis/ ; mv lgdis-imamondai*.tar /opt/fix ; date; ls -alt /opt/fix/*tar ;


root@localhost:/opt/LGDIS# rake -T |grep redmine
rake redmine:attachments:prune            # Removes uploaded files left unattached after one day.
rake redmine:email:read                   # Read an email from standard input.
rake redmine:email:receive_imap           # Read emails from an IMAP server.
rake redmine:email:receive_pop3           # Read emails from an POP3 server.
rake redmine:email:test[login]            # Send a test email to the user with the provided login name
rake redmine:fetch_changesets             # Fetch changesets from the repositories
rake redmine:load_default_data            # Load Redmine default configuration data.
rake redmine:migrate_from_mantis          # Mantis migration script
rake redmine:migrate_from_trac            # Trac migration script
rake redmine:permissions                  # List all permissions and the actions registered with them
rake redmine:plugins                      # Migrates and copies plugins assets.
rake redmine:plugins:assets               # Copies plugins assets into the public directory.
rake redmine:plugins:migrate              # Migrates installed plugins.
rake redmine:plugins:test                 # Runs the plugins tests.
rake redmine:plugins:test:functionals     # Run tests for {:functionals=>"db:test:prepare"}
rake redmine:plugins:test:integration     # Run tests for {:integration=>"db:test:prepare"}
rake redmine:plugins:test:units           # Run tests for {:units=>"db:test:prepare"}
rake redmine:send_reminders               # Send reminders about issues due in the next days.
rake redmine:tokens:prune                 # Removes expired tokens.
rake redmine:watchers:prune               # Removes watchers from what they can no longer view.


root@localhost:/opt/LGDIS# rake routes|grep evacuation
GET	/evacuation_advisories(.:format)	evacuation_advisories#index
POST	/evacuation_advisories(.:format)	evacuation_advisories#create
GET	/evacuation_advisories/new(.:format)	evacuation_advisories#new
GET	/evacuation_advisories/:id/edit(.:format)	evacuation_advisories#edit
GET	/evacuation_advisories/:id(.:format)	evacuation_advisories#show
PUT	/evacuation_advisories/:id(.:format)	evacuation_advisories#update
DELETE	/evacuation_advisories/:id(.:format)	evacuation_advisories#destroy


root@localhost:/opt/LGDIS# rake routes|grep evacuation
         project_evacuation_advisories GET      /projects/:project_id/evacuation_advisories(.:format)                             evacuation_advisories#index
                                       POST     /projects/:project_id/evacuation_advisories(.:format)                             evacuation_advisories#create
       new_project_evacuation_advisory GET      /projects/:project_id/evacuation_advisories/new(.:format)                         evacuation_advisories#new
      edit_project_evacuation_advisory GET      /projects/:project_id/evacuation_advisories/:id/edit(.:format)                    evacuation_advisories#edit
           project_evacuation_advisory GET      /projects/:project_id/evacuation_advisories/:id(.:format)                         evacuation_advisories#show
                                       PUT      /projects/:project_id/evacuation_advisories/:id(.:format)                         evacuation_advisories#update
                                       DELETE   /projects/:project_id/evacuation_advisories/:id(.:format)                         evacuation_advisories#destroy


root@localhost:/opt/LGDIS# Connecting to database specified by database.yml
OpenIdAuthentication.store is nil. Using in-memory store.


root@localhost:/opt/LGDIS/plugins/lgdis# grep -nirE "note" * --include=*vacuat*.rb
:14:#                   :other_damage_info,:usable_flag,:openable_flag,:note,
app/models/evacuation_advisory.rb:132:#   validates :note,
app/models/evacuation_advisory.rb:290:      node_evacuation_advisory.add_element("備考").add_text("#{evacuation_advisory.note}")

app/views/evacuation_advisories/_form.html.erb:226:  <%= field_for :note do |key, label| %>
app/views/evacuation_advisories/_search_conditions.html.erb:122:  <%= field_for :note do |key, label| %>


※上の画像で分かると思うけど、自分はitemテーブル作って色々と試してみてる。

class Item < ActiveRecord::Base
  def name
    super.force_encoding('UTF-8')
  end
  def note
    super.force_encoding('UTF-8')
  end
end



#some_body dev:  @evacuation_advisory_const が避難所モデルのままなので､invertなどはつかえない｡%>

irb(main):112:0> Constant::hash_for_table(EvacuationAdvisory.table_name)
  Constant Load (212.0ms)  SELECT "constants".* FROM "constants" WHERE (kind1='TD' AND kind2='evacuation_advisories') ORDER BY kind3 ASC, _order ASC
=> {"openable_flag"=>{"1"=>"可", "0"=>"不可"}, "sort_criteria"=>{"1"=>"未開設", "2"=>"開設", "3"=>"閉鎖", "4"=>"不明", "5"=>"常設"}, "status"=>{"1"=>"空き", "2"=>"混雑", "3"=>"定員一杯", "4"=>"不明"}, "type"=>{"1"=>"避難所", "2"=>"臨時避難所", "3"=>"広域避難所：開設措置なし", "4"=>"一次避難所：開設措置なし"}, "usable_flag"=>{"1"=>"可", "0"=>"不可"}}



そのようなファイルやディレクトリはありません - /opt/fix/LGDIS/plugins/lgdis/config/settings.yml
/opt/fix/LGDIS/plugins/lgdis/init.rb:16:in `<top (required)>'
/opt/fix/LGDIS/lib/redmine/plugin.rb:130:in `block in load'
/opt/fix/LGDIS/lib/redmine/plugin.rb:121:in `each'
/opt/fix/LGDIS/lib/redmine/plugin.rb:121:in `load'
/opt/fix/LGDIS/config/initializers/30-redmine.rb:12:in `<top (required)>'
/opt/fix/LGDIS/config/environment.rb:14:in `<top (required)>'
Tasks: TOP => redmine:plugins:migrate => environment
(See full trace by running task with --trace)
o
 select * from issues_addtion_data ;
select * from geographies;

app/controllers/shelters_controller.rb:13:    @shelter_const = Constant::hash_for_table(Shelter.table_name)
app/models/shelter.rb:32:  CONST = Constant::hash_for_table(self.table_name).freeze

redmine_pg_dev=# delete  from schema_migrations where version = '9^Cgdis';
redmine_pg_dev=# select * from issue_geographies;
 id | issue_id | datum | location | point | line | polygon | remarks
----+----------+-------+----------+-------+------+---------+---------
(0 行)

redmine_pg_dev=# select * from issues_addtion_data ;
 id | issue_id | geodetic_datum |   latitude    |  longitude   |                 address                  |       remarks
----+----------+----------------+---------------+--------------+------------------------------------------+---------------------
  1 |       14 | 日本測地系     |   38.82815400 | 141.60417200 | 宮城県気仙沼市波路上岩井崎１             | test for issue#14
  3 |       14 | 日本測地系     | -179.00000000 | -89.00000000 | 南極近辺ロンドンの真裏                   | test for issue#14-3
  2 |       14 | 日本測地系     | -141.17184600 | -38.39582800 | 宮城県気仙沼市波路上岩井崎１の地球の裏側 | test for issue#15
(3 行)





配信管理は、queueに配置したところで、処理結果を取得できなくなります。（非同期処理のため）
外部配信は、外部配信処理自身が成功したかどうかを自らログに書くことは可能。
外部配信処理自身が成功したかどうかの判定の中で、
SOAPのような手順の中で成功可否を判断できるものは、外部配信先に届いたかどうかを判定できますが、
SMTPは判定できません。
RSSはファイルを生成できたことの可否を判定するまでです。


表 3.40.4.6 パラメータ一覧（②石巻市メールサーバ：入力/異常）
No 論理名称 物理名称 I/O 備考
1 処理完了ステータス I
※ 石巻市メールサーバへの★配信依頼★のSMTP 処理が異常終了したところまでの検知となる。
※ 石巻市メールサーバの配信が正常終了したかどうかは本システムでは検知しない。


表 3.40.5.6 パラメータ一覧（②SMTP-AUTH：入力/異常）
No 論理名称 物理名称 I/O 備考
1 処理完了ステータス I
※ 外部配信先への★配信依頼★のSMTP-AUTH 処理が異常終了したところまでの検知となる。
※ 外部配信先への配信が正常終了したかどうかは本システムでは検知しない。




表 3.40.6.6 パラメータ一覧（②Twitter：入力/異常）
No 論理名称 物理名称 I/O 備考
1 異常戻り値 I
※ Twitter 連携処理★（API 呼び出し）が異常終了★したところまでの検知となる。
※ 外部配信処理が異常終了した場合のエラー通知は、★★★メール配信★★★により行う。


表 3.40.7.5 パラメータ一覧（②Facebook：入力/異常）
No 論理名称 物理名称 I/O 備考
2 異常戻り値 I
※ Facebook ★連携処理（API 呼び出し）が異常終了★したところまでの検知となる。
※ 外部配信処理が異常終了した場合のエラー通知は、★★★メール配信★★★により行う。
Facebook に対するパラメータ一覧（上記I/O関連図②）を、表4.3.6.7.5.2.に示します。
表4.3.6.7.5.2.ファイル一覧（②Facebook）
No	論理名称	物理名称	I/O	備考
1	本文	message	O
2	処理完了ステータス		I


ATOM災害情報ポータルページ/デジタルサイネージに対するファイル一覧（上記I/O関連図②）を、表4.3.6.3.4.2に示します。
表4.3.6.3.4.2ファイル一覧（②設定ファイル）
No	論理名称	物理名称	I/O	備考
1	配信内容ATOM情報		I	2	処理完了ステータス		I


-----------------


表 3.40.3.6 パラメータ一覧（②公共情報コモンズ：入力/異常）
No 論理名称 物理名称 I/O 備考
1 処理完了ステータス I
※ 非同期処理のため、配信管理機能ではエラー検知を行わない。
※ 外部配信処理が異常終了した場合のエラー通知は、
★外部配信機能/公共情報コモンズ SOAP I/Fからメール配信★により行う。

-postit----------------------
ﾒｰﾙｻｰﾊﾞｰ@ubuntu
三菱重工(株)
xin7-pro-productkey:	3K9P7-R7GCK-D9MYH-QFMX4-WT8P7
.blank? 	.nil? 	.empty?	.present?	self.****	RDoc 記法
X.509 Cartificate Token ,SSL(:443)


/usr/local/lib/ruby/gems/1.9.1/gems/soap4r-ruby1.9-2.0.5/sample/showcase/wsdl/PayPalSvc/
gem install soap4r-ruby1.9
---------------------------------------------------------


#       log/LGDIS/
#       plugins/lgdis/config/settings.yml
#       plugins/lgdis/db/migrate/008_create_evacuations.rb
#       plugins/lgdis/lib/lgdis/ext_out/datum_conv.rb
#       plugins/lgdis/lib/lgdis/ext_out/georss1_0.tmpl

 mount Resque::Server, at: "/resque"

  2 MethodError (undefined method `xml_control_status' for #<Issue:0xb6ad5e10>):
  3 plugins/lgdis/app/models/shelter.rb:301:in `create_applic_issue'
  4 plugins/lgdis/app/controllers/shelters_controller.rb:95:in `block in ticket'
  5 plugins/lgdis/app/controllers/shelters_controller.rb:93:in `ticket'
  6 plugins/lgdis/app/controllers/shelters_controller.rb:45:in `index'




:6:  if issue.xml_control_status
/opt/LGDIS/plugins/lgdis/app/views/issues/_view_issues_show_description_bottom.html.erb:7:    rows.left l(:field_xml_control_status), h(issue.xml_control_status), :class => 'xml_control_status'


/opt/LGDIS/plugins/lgdis/lib/lgdis/issue_patch.rb:14:        validates :xml_control_status, :length => {:maximum => 12}
/opt/LGDIS/plugins/lgdis/lib/lgdis/issue_patch.rb:29:        safe_attributes 'xml_control_status',
/opt/LGDIS/plugins/lgdis/lib/lgdis/issue_patch.rb:31:          'xml_control_status',







localhost:/opt/fix/LGDIS# grep -nirE "disaster_code *=" /opt/LGDIS/plugins/* --include=*  --exclude=*.sw* --exclude=*~
/opt/LGDIS/plugins/lgdis/app/controllers/shelters_controller.rb:142:    @shelter.disaster_code = @project.identifier
/opt/LGDIS/plugins/lgdis/app/controllers/evacuation_advisories_controller.rb:146:    @evacuation_advisory.disaster_code = @project.identifier
o



1]+  停止                  rails s --debugger
root@localhost:/opt/fix/LGDIS# grep -nirE "import_initial_data" /opt/fix/LGDIS/plugins/* --include=*  --exclude=*.sw* --exclude=*~
/opt/fix/LGDIS/plugins/lgdis/app/models/evacuation_advisory.rb:423:  def self.import_initial_data(project)
/opt/fix/LGDIS/plugins/lgdis/app/models/shelter.rb:428:  def self.import_initial_data(project)

/opt/fix/LGDIS/plugins/lgdis/lib/lgdis/project_patch.rb:16:        after_create :import_initial_data
/opt/fix/LGDIS/plugins/lgdis/lib/lgdis/project_patch.rb:83:      def import_initial_data
/opt/fix/LGDIS/plugins/lgdis/lib/lgdis/project_patch.rb:84:        Shelter.import_initial_data(self) #避難所

root@localhost:/opt/fix/LGDIS# grep -nirE "import_initial_data" /opt/LGDIS/plugins/* --include=*  --exclude=*.sw* --exclude=*~
/opt/LGDIS/plugins/lgdis/lib/lgdis/project_patch.rb:16:        after_create :import_initial_data
/opt/LGDIS/plugins/lgdis/lib/lgdis/project_patch.rb:83:      def import_initial_data
/opt/LGDIS/plugins/lgdis/lib/lgdis/project_patch.rb:84:        Shelter.import_initial_data(self) #避難所

チケット一覧　Issueの表示


plugins/lgdis/app/views/issues/_view_issues_show_description_bottom.html.erb
	ActionView::Template::Error (undefined method `check_permissions' for #<#<Class:0xcf1b2b8>:0xd07db74>):
	ActionView::Template::Error (undefined method `print_xml_field' for #<#<Class:0xcf1b2b8>:0xb722033c>):


Rdoc
Rspec
GIT pull -->renraku ->commit
返値

--------------------------------------------------------------------------------------------------------
Memchachd
	#install

		wget -q -O - http://www.atomicorp.com/installers/atomic |sh
		yum install memcached

		vi /etc/sysconfig/memcached
			PORT=”11211″
		config.cache_classes     = false
		#optional 	config.cache_store = :dalli_store

		service memcached start
	#test
		 rails c --debugger
		Rails.cache.write("foo", "フー", :expires_in => 10)
		foo")
		Rails.cache.write("key", [1,2,3], expires_in: 1.hour)  # １時間で消える。
		# もちろんオブジェクトもキャッシュ可能
		Rails.cache.write('hash', {'hoge' => 'piyo', 'foo' => 'buz'})
		Rails.cache.read('hash') # => {'hoge' => 'piyo', 'foo' => 'buz'}

		Rails.cache.clear # すべてのキャッシュをクリア

	#CSV-locading

		#Rails.root/lib/batches に以下のファイルを配置
		　area.csv
		　address.csv
		　shelter.csv
		　memcache_store.rb

		#バッチを実行
		 rails runner Batches::MemcacheStore.execute

		#値の取得テスト
			Rails.cache.read("area")["6"]["name"]

		# ==== options
		 実行環境の指定 :: -e production
		以下の形式でstoreする

			file => {
				code => {
					項目1 => value,
					項目2 => value,
					項目3 => value,
					...
				}
			}

		住所のオートコンプリート用に以下の値もstoreする
		　state  : 都道府県
		　city   : 市区町村
		　street : 町丁目

		 state => {
			 code => name,
			 code => name,
			 code => name,
			 ...
		 }
	rails runner Batches::MemcacheStore.execute

#Rdoc
	# 処理内容
	# ==== Args

	# _objectname_ :: description
	# ==== Return
	# _objectname_ :: description
	# ==== Raise

	# 処理内容
	#
	# ==== Args
	# __ ::
	# ==== Return
	# __ ::
	# ==== Raise

	■rdocの生成
	rdoc は、手元でドキュメントを生成してみて、ちゃんと出力されることを確認する。
	rdoc は、以下のコマンドで生成できる。
	$ rdoc -c utf8
	ドキュメントはカレントディレクトリの下の doc ディレクトリにHTML形式で生成される。また、オプションに -d をつけると、クラス図もつく（あまりわかりやすい図ではないが）
	rails の場合は、以下のようにして生成する。
	$ rake doc:app


#HAML
  -debugger
  irbでの検証は以下括弧内にHAML式を代入
    Haml::Engine.new('  ').render

  Haml Comments: -#
  DRIW
  - --> run ruby code
  = insert ruby code
  `code`

  : --> filter
  & --><input>
  |


堤さん
Java標準のJKSキーストアをserverconfig.xmlのkeystore要素でフルパスしてやる
SharkWire指南


class User < ActiveRecord::Base
  # Userインスタンスに hoge1, hoge2 という名前で保持期間１時間のキャッシュを使用する場合
  cache_attr_accesor :hoge1, :hoge2, :span => 1.hour
end
#こんな感じで使用できます。放っておけば:spanで指定した時間経過後にキャッシュはクリアされます。
u = User.find(300)
u.hoge1 = 'value1'
u.hoge2 = 'value2'

# 実際には下記と等価になります
Cache.read('User_hoge1', 300)
Cache.write('User_hoge1', 300, 'value1', 1.hour)
#また、モデルのインスタンスだけでなくクラスの属性としても使用することができます。
class User < ActiveRecord::Base
 class << self
   cache_attr_accessor :hoge1
  end
end
User.hoge1 = 'value1'  #デフォルトでは２週間保持されます







################rake db: http://namakesugi.blog42.fc2.com/blog-entry-157.html

20130601182530_change_contents_rollout_store_type_to_string.rb
X
  注意：ファイル名とクラス名が完全一致しないと失敗します。
  class ChangeContentsRolloutStoreTypeToString < ActiveRecord::Migration
    def change
      change_column :contents, :rollout_store_type, :text
    end
  end


rake db:migrate:down VERSION=[バージョン番号]
  rake db:migrate:down VERSION=20130601182535

  特定のmigrationをrevertするmigration
    require_relative '20130414_migratino_file_name_without_extention_rb'

    class RevertProductsChangePrimaryKey < ActiveRecord::Migration
      def change
        revert ChangeProductsPrimaryKey
      end
    end



  Joinテーブルの作成をするmigrationファイルの作成
    書式: `CreateJoinTableXXXYYY XXX YYY` XXX, YYYには結合するモデル名を指定する。
    以下の場合はproductとcategoryのN:Nを結合するテーブルcategories_productsが生成される。
    rails g migration create_join_table_product_category product category

  フィールドの変更
    def change
      reversible do |dir|
        change_table :products do |t|
          dir.up { t.change :foo, :integer }
          dir.down { t.change :foo, :string, limit: 32 }
        end
      end
    end

  rails g migration RemoveFooFromProducts foo:string
    複数のフィールドの追加/削除のmigrationファイルの作成
    rails g migration add_foo_and_bar_to_products foo:integer bar:integer




#陰私
  jaime.le.cafe
  much.more.user.friendly
　lefthan0


*postgresql 9.3, Java SpringToolSuite 4,x, spring-batch-framework

報告
#Java言語でのi18n国際化手順

#spring-tool-framework
  ★spring-tool-suite-3.3.0.RELEASE-e4.3-win32-installer 550MB required : はﾛｰｶﾙｲﾝｽﾄｰﾙしないとJDK認識ｴﾗｰ
  " error coping file "...と表示されるときはworkspaceつくりなおす

  #plugin
    dashbord--> ページ左下の2タブ目 Extentions→SEarch subclipse --> check , next, install
    or
    Help-> Install New Software
      url : http://subclipse.tigris.org/update_1.6.x

   utf-8 editing = ecklipse property editor
    http://propedit.sourceforge.jp/eclipse/updates/



  #既存PJのマウントは file-import-general-"Existing Project into WorkSpace"
    File->new->others-> SVNからcheckout-> 新規repoi
        ->http://192.168.216.127/svn/tmdb

 MVCうごかないときは右クリックでmaven-upgrade

 #I/O
  workspace間の設定ファイルI/O：Eclipseの設定をクリックして、エクスポート先と名前を選択する


#jUnit(eclipseやnetbeans IntelliIDEには初めから組み込み済み )
 project right-click--> new--> other--> java-> junit-> test case
 junit test生成後 以下の如くする

	public void test() {
		//fail("Not yet implemented");
		assertEquals(1,1);
	}

 テストクラス右クリック→run as jUnit testをえらぶ

 log設定は
   /tmdb/target/m2e-wtp/web-resources/log4j.properties
   /tmdb/target/m2e-wtp/web-resources/log4j.xml

  DB設定は
  /tmdb/src/main/resources/META-INF/spring/database.properties
  dbschemaは
    pgadmin->プラグイン->psql consoleで
      \l

  controllerは
    /tmdb/src/main/java/jp/co/nttcom/business/tmdb/web

  VIEWは
  /APPROOT/src/main/webapp/WEB-INF/views
  Localeは
  /APPROOT/src/main/webapp/WEB-INF/i18n


  /tmdb/src/main/webapp/WEB-INF/layouts/*jsp
  に
  <%@ taglib uri="http://www.springframework.org/tags" prefix="spring"%>
  と記述すると；
  /tmdb/src/main/webapp/WEB-INF/views/ 直下の*jspについては言語別ロケールファ
イル(i18n/*.properties)のメッセージを認識できるようになる；

  /tmdb/src/main/webapp/WEB-INF/views/ 配下サブフォルダーの下の*jspについて
は、各*.jspファイルごとに同様の記述をしないといけない。

各i18n/*.properties内部の記述はRailsのlocale/*ymlのインデント階層で表現はでき
ない。
  xxx.yyy.zzzの如くピリオドで階層構造を表現した単一階層的表記しかできない。

※グローバル変数的にタグライブラリーとその名前の宣言をするやり方は、いろいろし
らべましたが、Javaの初心者には調査がつきませんでした。
  <%@ taglib uri="http://www.springframework.org/tags" prefix="spring"%>

#eclipseでのライブラリー追加方法
　target -> libにはりつけ→PJ property→ JavaBuild path -> library -> Add jars
  tool->Run->Run configurations -> config -> EnvironmentにDOS変数追加
    MAIN (java)
    Arguments (JVM+プログラム)

# LINUXとWindows環境の同期について
  #winとgithub/some_body/vimの同期
    git add .
    git pull origin master_win
    git commit
    git push origin master_win
    #some_body jBC

  #winとlinuxの同期
    fireftp たちあげ
    ADSOL-VMに接続
    windowsからlinuxに差分ファイル手作業同期


#RoR請負面談時要望
  作業密度を提示しない みなしは原則不可｡→請負&月固定みなし､日割りと業務委託は不可｡
  #打ち合わせの場でも紙印刷はやめて､はじめからデジタル互換性の高いデジタル資料を事前にメール送信してもらう
#PJの優先順位を事前ヒアリング:生産性､速度
    xls2003で提供
    レコード定義書の列のならび改版提供｡


ecoinux
	sudo link /usr/bin/perl /usr/local/bin/perl
	sudo apt-get gcc make vim gnome-terminal
	#vim config
		# ~/.vimrc
			set number
			set tabstop=2
			# set nocompatible
			syntax on
			...etc
	#transpantation of Windows file
		/user/bin/perl --
		or
		chang to \n= LF

	#FereFox3 -prifile config & transplantation
	#uninstall gnome pre-installed apps
		-rwxr-xr-x 1 root root 151396 2008-05-24 05:07 /usr/bin/xfce4-terminal
		xterm

	#customize ,desktop, Iterface, (mousepad,Thuanr)

	#ctrlpanel-->add system-source
		deb http://cz.archive.ubuntu.com/ubuntu dapper-backports main universe
		deb http://packages.mediaubuntu.org/gutsy free non-free
	ctrlpanel-->add "gthumb clamAV"
	ctrlpanel-->権限add?
	sudo apt-get install adobereader-jpn realplayer sysv-rc-conf ntfs-config
	sudo apt-get install streamtuner streamripper

	sudo sysv-rc-conf
		stop : anacron, apmd, atd, bloetooth, cupsys, hotkey-setup, rsync
		#case non-Gforce, also stop nvidia-kernel
	start-menu---> adobereader install

	日本語環境問題
		Javaアプリへのキー入力の問題 はどうやらUbuntu特有のものらしい。UIMに変更すればもちっと安定するらしいので変更してみる。
			sudo apt-get install uim uim-anthy uim-qt
			sudo update-alternatives --config xinput-ja_JP で、/etc/X11/xinit/xinput.d/uim-systrayを選択。 （ここで一旦ログアウト…/etc/X11/xinit/xinput.d/uim-toolbarだとJavaアプリに日本語入力できなかった）
			そのままでは日本語入力できなかったので、システムトレイに追加されたUIMの設定ボタンをクリックし、グループ（全体設定）の『使用可能にする入力方式』『標準の入力方式』をAnthyにすれば,日本語入力できるようになる。はず。
Apache2.0----------------------------------------------
	$ ./configure --prefix=[path:default=/usr/local/apache2]
	$ sudo make
	$ sudo make install
	$ PREFIX/bin/apachectl start
	#compiling instll webmin
		sh setup.sh
		sudo /usr/local/apache2/bin/apachectl start
		sudo /usr/local/apache2/bin/httpd start
		/usr/local/apache2/htdocs/takami/

	premature end of script headers
		--> /usr/bin/perl --
		--> change \n into LF
	attempt to invoke directory as script: /.../htdocs/hogehoge/cgi-bin/

	Apache2.0では、 SetHandler server-parsedの命令文を入れると、DirectoryIndex命令が効かなくなるよ
	うです。Turbo Desktop 10に、Apacheの2.0をソースコードからコンパイルすると、ブ
	ラウザは同じように「ファイル未検出（404）」のエラーを返します。Apacheが起動す
	る時に、「SetHandler server-parsed文があると、DirectoryIndex命令は無効になりま
	すよ」といったメッセージを出してくれれば、話は分かるのですが・・・。

	-----------------------------------------------------------------
	■変更後
	<Directory "/home/aaa/cgi-bin/">
	　　AddHandler perl-script .cgi
	　　PerlResponseHandler ModPerl::Registry
	　　PerlOptions +ParseHeaders
	　　Options ExecCGI +MultiViews
	</Directory>

	■設定3で追記した通常のCGIで動作させるDirecitoryディレクティブは削除
	------------------------------------------------
		 mod_userdir
			 CustmeLog /log/acess/log SetEnvIf


			 --------------------------------
			 http://wiki.apache.org/httpd/Errors/DirectoryAsScript

			 For example, replace this:

			 ScriptAlias /cgi-bin /var/www/cgi-bin

			 with this:

			 Alias /cgi-bin /var/www/cgi-bin
			 <Directory /var/www/cgi-bin>
			  AddHandler cgi-script cgi pl
			   Options ExecCGI
			   </Directory>



			   ---------
			   f all your CGI scripts end in .py, you can fix the problem by replacing
			   SetHandler cgi-script
			   with
			   AddHandler cgi-script py
			   -----------------------------

			   /var/www
			   ├ / (/var/www/html)
			   │　└ index.html　
			   └ cgi-bin/
			   　　└ test/
			   　　　　└ index.cgi

			   /home/username/public_html
			   ├ / (/home/username/public_html/html)
			   │　└ index.html
			   └ cgi-bin/
			   　　└ test/
			   　　　　└ index.cgi

			   ScriptAliasMatch /~(..*)/cgi-bin/(.*) /home/$1/public_html/cgi-bin/$2


			   を設定し、

			   http://192.168.*.*/cgi-bin/test/index.cgi
			   http://192.168.*.*/~username/cbi-bin/test/index.cgi


			   と、ファイルネームまで指定して CGI を動作させることまでは出来ました。

			   が、次のようにディレクトリの URL でアクセスして index.cgi を動作させることが出来ません。

			   http://192.168.*.*/cgi-bin/test/
			   http://192.168.*.*/~username/cbi-bin/test/
			   ・この際、（考えにくいことですが）ScirptAlias 内では希望の動作は出来ないものと仮定して、
			   　ScriptAlias はコメントアウト、ScriptAliasMatch は削除。
			   ・Alias, AliasMatch 両ディレクティブを追加して CGI 用ディレクトリを新たに設定。
			   ・<Directory "/var/www/html"> Options +ExecCGI </Directory>
			   ・<Directory ~ "^/home/.*/public_html/cgi-bin(ユーザ CGI ディレクトリの正規表現)"> Options +ExecCGI </Directory>

			   DirectoryIndex index.cgi

			   #ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
			   Alias /cgi-bin/ "/var/www/cgi-bin/"
			   AliasMatch /~(..*)/cgi-bin/(.*) /home/$1/public_html/cgi-bin/$2

			   <Directory "/var/www/html">
				   Options +ExecCGI
				   </Directory>

				   <Directory ~ "^/home/.*/public_html/cgi-bin">
					   Options +ExecCGI
					   </Directory>

					   AddHandler cgi-script .cgi



					   結果、これで希望の動作をさせることが出来ました。

					   ただ、この状態はセキュリティ的に何か問題は無いのでしょうか。
					   結局、このような解決策を採るドキュメントは検索にヒットしませんでしたし、
					   このままだと、CGI 用ディレクトリに収めた .html や画像など、何でも表示してしまいます。
					   大丈夫でしょうか？
					   返信 014 miz [UA] 	2007-03-15 18:30
					   ＞このままだと、CGI 用ディレクトリに収めた .html や画像など、何でも表示してしまいます。
					   ＞大丈夫でしょうか？

					   ご心配の通り、大丈夫ではありません。
					   大事なパスワード用ファイルや個人情報ファイルなどもファイル名さえ知られてしまえば、だだ漏れです。

					   FilesMatchセクションを使って、cgi用(拡張子.cgi,.pl)以外は全部拒否の設定をしてみては？
					   実際のコードは、私には検証出来る環境がないので、下記サイトをじっくり読んで設定を試みて下さい。
					   http://httpd.apache.org/docs/2.0/sections.html
					   --------------------------------------
						.htaccessが使用可能であればindex.cgiをドキュメントディレクトリ直下におき.htaccessを下記のように編集して
						Options +ExecCGI
						http://hogehoge/でアクセスしてみてください。



								-----------------------------
								UNIXやCygWinのシェルをつかえるひとがWindowsをつかいつづける浪費の比較

								LINUX
								大半のファイル操作コマンドにRecursive1探索オプションとワイルドカード（正規表現）オプションがある
								Windows
								なにかしようとすると再起探索処理する専用ソフト
								ワイルドカード（正規表現）オプションについても有無を調査しないとだめ

								-----------------------------
								WindowsをつかったひとがLINUXをつかう浪費

								LINUX
								zipコマンドがWindows改行コードのファイルを圧縮できない
								しかtなくgzipをつかう
								Windows
								どの圧縮ソフトもそうではない。

								LINUX
								シェルexplorerのundoができない
								Windows
								できる


								LINUX
								実行中のプログラムをroot権限でchmodするとdirectory破損する
								Windows
								警告が事前に出る



	#password CGI
		unzip password
		chmod -R 777 /usr/local/apache2/cgi-bin/*
		DrectoryIndexaa??a??i??aindex.cgi index.html index.html.var
		index　ーー＞　index.cgi index.html index.html.var

		#ftp://some_body.vs.land.to/
		http://some_body.vs.land.to/view.cgi?href=0&id=takami&pass=vlml8877

	#module-check
		sudo  /usr/local/apache2/bin/httpd -l
#WiFi@triplet-gate
	(WiFiよりダイアルが優先するのを止める)：
		#コントロールパネルのダイアルアップで既定接続のチェックをはずす。IE接続プロパティーでダイヤルしない設定にする。
	#OS-Windows-zero-configi(Wifi-ctrl-panel) & Wired-autoconfigi(IEEE802.1auth)が起動していて利用可能なネットワークがWindowsで検出、コントロールパネルのアダプタプロパティーにタブ表示されることが基本。これ以外は不正常。
		範囲内で接続するにチェック、FLETSならばIEEE802.1認証にチェック
	*BWsvcなど3rdPratyのサービスは制御をよこどりするので止める。
	*ツールでの接続障害時には、まずOSレベルで疎通確立する。
		WindowsタスクトレイのアイコンはSSID&WEP-keyでの疎通レベルまでしか表示しない。認証は別物。

#EC-suite-dependencies:
	ec-rider0.8.2/ec_front/ Rails requires RubyGems >= 1.3.2 (you have 1.3.1). Please `gem update --system` and try again.
	elecoma-2.0.3/ /usr/local/lib/site_ruby/1.8/rubygems/custom_require.rb:32:in `gem_original_require': no such file to load -- gettext (MissingSourceFile)	from /RoR/EC/elecoma-2.0.3/config/environment.rb:9
	substruct_rel_1-3-1/ config.gem: Unpacked gem subexec-0.0.4 in vendor/gems has no specification file. Run 'rake gems:refresh_specs' to fix this. RubyGem version error: rack(1.0.1 not ~> 1.1.0) (Gem::LoadError)
#ubuntu on VMware troubleshooting
	#VMware converterのメリット
		WS.SVとはちがい、複数の変換タスクを、WS/SVの作業をとめることなく実行できる。
			これに比べ、WS/SVのインポート変換機能は 一個の変換作業でWS/SV全体を止めてしまう。
		WS/SVとはちがい、snapshot削除や完全クローン作成,resizeを事前に準備しなくとも、直近状態だけを変換してくれる。
	#version確認方法	cat /etc/lsb-release
		DISTRIB_ID=Ubuntu
		DISTRIB_RELEASE=8.10
		DISTRIB_CODENAME=intrepid
		DISTRIB_DESCRIPTION="Ubuntu 8.10"
	#partitiona&swap拡張
		VMware-WS/SV　>6.xで snapshot全部削除後、または完全クローンに対して　"HDDの拡張"(=vmware-cdiskmanager.exe)で拡張
			-VMware WS/SVの"import"メニューも動作不審
			-Vmware Converterは動作不審
		GpartedのCD起動。/dev/*d*/ マウントパスは自動作成される
	#拡張ずみswapのmount
		/etc/fstab 内のuuidを/dev/disk/by-uuid で認識されたものにかきかえ
		hybernate-error---> /etc/initramfs-tools/conf.d もかきかえ
		sudo dpkg-reconfigure  initramfs-tools
		sudo swapon -a; sudo swapon -s;
	Tshoot1: case :loobackアドレス以外のNIC(lo only, no eth0..ethn)
		ipaddress missing ,DNS failure and boot message "SIOCSIFADDR no such device "
			sudo mv /etc/udev/rules.d/70-persistent-net.rules /etc/udev/rules.d/70-persistent-net.rules.bak
			init 6 / shutodown -now
	#TShoot2: vmware usb arbitration driver windows 7 do not run why fix
		AMD-CPU, Huawei, Sony-ErriscsonのUSBドライバーなどはVMWRWS-7.x(筆者の場合は7.1)でもエラー続出。
		MS標準のUSBドライバーにroll-backか削除でもどす。
		These issues occur when unknown USB drivers are installed on a Windows machine hosting the VMware Workstation software.
		To resolve these issues, roll back to the original Microsoft USB drivers on the host:
		   1. Right-click (My) Computer and select Manage.
		   2. In the left pane of the Computer Management window, select Device Manager.
		   3. Expand Universal Serial Bus Controllers.
		   4. Right-click USB Root Hub and select Properties.
		   5. In the Driver tab, click Roll Back Driver.

		For computers with AMD processors:
		   1. Right-click (My) Computer and select Manage.
		   2. In the left pane of the Computer Management window, select Device Manager.
		   3. Expand Universal Serial Bus Controllers.
		   4. Locate the AMD USB Filter Driver.
		   5. Right-click it and select Uninstall.
		   6. Select Uninstall the driver software for the device.
		   7. Restart your computer.
		if the above method fails, you can also uninstall the AMD USB driver manually. To do so:
		   1. Open the Windows registry, and go to HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Class\{36FC9E60-C465-11CF-8056-444553540000}.
		   2. Remove the usbfilter value from the UpperFilter string.
		   3. Go to HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\.
		   4. Delete the usbfilter string (=string value ).
		   5. Delete this file: %system32%\drivers\usbfilter.sys.
		   6. Reboot your computer


#VBadd-in How-TO
	winMe.vm
	win2KproEng.vm
	winSVJP.vm
	USB-X
	VB6combo
#Ubuntu-config 頓挫項目
	#rdebug-config
		2rdb:1) show commands
		No readline suport

	vim
		unix - 日本語charsetをステータスバーに表示
		:Rtags	 Calls ctags -R on the current application root and writes the result to tmp/tags.
		Exuberant ctags must be installed.  Additional arguments can be passed to ctags with |g:rails_ctags_arguments|.
			#Exuberant ctags
				sudo sh ./configure
				sudo make clean
				sudo make install
				sudo make
				cd ../
				rm ctags-5.7.tar
				ctags -R --languages="-JavaScript"
		fastri qri reference:
			let g:RCT_ri_cmd =
		rcodetools.vimを~/.vim/pluginにコピー。インストーラーは不完全
			#RTC_completion失敗
			/usr/lib/ruby/gems/1.8/gems/rcodetools-0.8.4.0/lib/rcodetools/completion.rb:166:in `runtime_data_with_class': -:24: can't convert Fixnum into String (TypeError) (Rcodetools::ProcessParticularLine::NewCodeError)
		refe日本語環境
			 sudo vi /usr/lib/ruby/gems/1.8/gems/refe-0.8.0.3/lib/refe/searcher.rb のshift-jis?ブロックをコメントアウト

	#done
		vim
			helptag generation
			omni-completion
		OCR & scanner
		gems local installation 	=>	sudo gem[ersion number] install --local
		ebian local   installation	=>	sudo dpkg -i [packagename].deb
		ebian local uninstallation	=>	sudo dpkg -r [package-nickname]
		rails 1.2.x & 2.0.x
		WiFi troubleshooting ---FLET-spot & 3rd vendor daemon
		Yahoo auction automation
		shareware publishing
		Windows Mobile on smartphone
		VMware on UMPC
		mashup: greasemonkey & Yahoo pipes
		将来に期待のbad know-how, bad-hack。
			Foxitreader---- 起動は三秒、Adobe reader 9 の六倍ほど。しかし、linux版マニュアル自体がpdfでかかれていたり、ubuntuには*.bz2版ではなく、*.deb版をダウンロードしてdpkg- -iでローカルインストールする必要がある。さらに、550KBしかないPDFをよみこむとクラッシュ。そもそもubuntu公式レポジトリーに登録されておらず、ネットワークインストールできないアプリはさわるべからず、という悪例。
			mplayer ---rm file

#narrow-obile-band compatible hosting
	wikispases=initial oadig 27sec, @wiki=20sec

#bash commands
	kick job in background	=>	[command]&
##Linode	cd ~;rm vimhomeold.tar*;tar -cvf vimhomeold.tar .vim* *vim* .ve_* MyWiki/ .*rc  ;gzip vimhomeold.tar; cd -
	cd ~/RoRapps/; tar -cvf 2chnrg-latest.tar  2chnrg ;gzip 2chnrg-latest.tar; cd -
##Linode	cd ~/RoRapps/; tar -cvf 2chnrg-dev.tar 2chnrg/ ;gzip 2chnrg-dev.tar;cd -
##Linode	cd ~/RoRapps/; tar -cvf dev232plain.best.tar dev232plain/ ;gzip dev232plain.best.tar; cd -
##Linode	sftp xxx.xxx.xxx ;(su password & root password) --> mput *gz /root
##LInode	gem install chronic packet
			ruby script/plugin install http://svn.devjavu.com/backgroundrb/trunk
			rake backgroundrb:setup; rake db:migrate
##Linode	ruby script/server -p 80 -b 74.207.240.145 -e production
			ruby lib/scraper.rb 2nn

##Linode    Ubuntu Hardy に ImageMagick RMagick をインストールす
	くどいくらいやる。リポジトリの場所の改廃が早いため-->
		% sudo aptitude update
		% sudo aptitude install imagemagick libmagick9-dev
	ヴァージョン合わせる。そしてローカルコンパイルに数十分かかる-->
		% sudo gem1.8 install rmagick -v 1.15.13
	確認は，
		$ irb
		irb(main):001:0> require 'rubygems'
		=> true
		irb(main):002:0> require 'RMagick'
		=> true
##Linode   file_column plugin to rails app
		"webからfile_column.tar.gz をダウンロード、展開、file_colmnにフォルダー名かきかえ
		EDIT: /home/you/RoRapps/2chnrg/vendor/plugins/file-column/lib/file_column.rb
			#org       my_options = FileColumn::init_options(options, Inflector.underscore(self.name).to_s, attr.to_s)
			  my_options = FileColumn::init_options(options, self.name.to_s.underscore, attr.to_s)
	grep -RI "1.2" ./MAN*/*htm*>tmpgrep.txt

	#tar tvf xvf cvf zZ option is buggy.

==============================================================================
#wget
	wget -o wgetlog.txt -S -x -r --level=2 -k -p -A --accept=htm,html,shtml,jpg,jpeg,gif,png
		http://www.asahi-net.or.jp/~aa4t-nngk/ipttut/output/index.html
	wget -O - -q ftp://ftp.apnic.net/pub/stats/apnic/delegated-apnic-latest | grep ipv4 | grep JP | grep -v grep | perl -a -F'/\|/' -n -l -e 'BEGIN{ print "order deny,allow\ndeny from all\n" } $mask = 32; $square = 0; $value = $F[4]; while($value != 1){ $value /= 2; $square++ } print "allow from $F[3]/" . ($mask - $square)' > /path/to/.htaccess

#webmin-operaton
	tail /root/2chnrg/log/backgroundrb_11006.log -n 50; vmstat -S M ;ps -ef|grep back;ps -ef|grep script/server
	#HDD残量調査
	df -a
	#apacheの過剰アクセス調査
	sort /usr/local/apache2/logs/access_log |grep 484 |grep -P "+\.+\.+\.+ - "

#iptables-webmin-way
		 #apt-get install iptables fwbuilder ssh-server
		 sudo su
		 iptables -F
		 sh filter.sh
		 iptables -L
		 iptables-save > /etc/iptables.up.rules
		 iptables-restore < /etc/iptables.up.rules
		 #webmin set
	http://sei.qee.jp/docs/program/hta/makeDeny/index.html
	iptables  http://www.hakusan.tsg.ne.jp/tjkawa/lib/krfilter/index.jsp

	#show process tree
	ps efaux
	# sort /usr/local/apache2/logs/access_log |grep 484 |grep -P "\d+\.\d+\.\d+\.\d+ - " >CPUoverloadElement.txt
	#status code 484 アドレスが不完全 WORST secu-hole-clawlers' IP aaadresses:
	94.101.118.24
	200.247.215.250
	72.26.201.162
	201.77.202.151
	61.19.255.14
	88.203.203.149
	217.24.240.68
	112.78.193.229
	188.165.64.227
	157.27.10.105
	92.240.68.152
	85.17.88.9
	74.83.233.125
	109.230.221.171

	#status code 484 アドレスが不完全で旧リンクをクロール seldome-maintained-clawlers' IP aaadresses:
	119.63.193.60 119.63.193.61
	119.63.193.113 119.63.193.114
	119.63.193.224

#SQLite3
	1|some_body||some_body@gmail.com||||ba854c204ba2b82c32ffc8bdb54e3fa8427bca80|1147b878f81136cd10845c8d79789e42969811ab||||ee029d36aec513eb2e4c0ef2eccc8bc50f886fc5|||f|2009-04-25 19:27:24|2009-07-24 07:08:56|2009-04-25 19:27:22|
	sqlite> select * from users;
	1|some_body||some_body@gmail.com||||ba854c204ba2b82c32ffc8bdb54e3fa8427bca80|1147b878f81136cd10845c8d79789e42969811ab||||ee029d36aec513eb2e4c0ef2eccc8bc50f886fc5|||f|2009-04-25 19:27:24|2009-07-24 07:08:56|2009-04-25 19:27:22|
	sqlite> select * from sections;
	1|Page|1||1|2|home|home|Home|||--- {}
	||-1||

	//　まずは、データベースを指定してsqliteを起動
	> sqlite3 database_name

	//　デフォルトでは、セパレータが｜になっているので,csv形式のカンマ区切りに変更
	//　これを忘れると次のimport処理ではまる。馬鹿らしい・・
	sqlite> .separator ,

	//　インポートのコマンドでcsvファイルとテーブルを指定する。別に.csvという拡張子でなくとも.txtでもかまわない。
	sqlite> .import csv_file_name table_name

	// 　エラーがでなかったらsqlコマンドでデータが入っているか確認
	sqlite> select * from table_name

	// 　もう一度取り込みなおしたいならdeleteでデータを消す
	sqlite> delete from table_name

	//おまけ・・・csvファイルを作成する
	csvファイルを作成するのにMACだとexcelが使えない（正確には買うのがもったいない、OpenOfficeはちょっと重たいし、日本語がだめ）
	なので、もっとも簡単なのがGoogle DocsでExportするのが便利。。
	ただし、カラム名はインポートするファイルからは削除しておかないとエラーになるので要注意。
	投稿者 ToolsCafe 時刻: 23:39


OCRこつ
	そもそも灰色網掛け背景に要点がかいてある本はえらぶな。
	OCRがもっとも認識不得意とする。
	白黒二色印刷、DTPレイアウトなしのワープロうちの本が一番よい。

	monocrome 600DPI, cuting page border & ページ中央の黒ずみ(黒棒一個は段組認識にOK)

	マニュアルでページ選択しつつ、傾き補正、ノイズ小除去、レイアウト認識、をやるのが結局早くしあがる。
		1領域を文字以外に自動判別する
		2領域認識連続失敗でハング
	という問題を回避するためでもある

	認識結果はメモリ上でtxtにコピー。ファイル直は失敗する。

	txteditorでのごみ除去パターン

		\n\n*	\n
		 +レ\n	\n
		･･*	""
		^ +	""
		･･+	""
		<.?.?十	""
		 *＼＼* *	""
		" +"	" "
		([\w\s\t])9(\w?)	\1g\2
		([\w\s\t])1(\w?)	\1l\2
		「	r
		[國圓圖]	■
		VV	W
		vv	w
		g	\n



	ExcelでHimem用に11	in	out		0 形式に整形


	3ｷｬﾘｱ対応USB充電+予備ｱﾀﾞﾌﾟﾀ白一式 美品

Mshaver改筆
	an MS-Outlook
	e-mail[s]	e-mail
	accuracy	reliable acuracy
	精度	正確性(確かさ)

	MailShaver is a MS-Outlook add-in software that recognizes OVERLAPPING OF E-MAIL CONTENTS, then automatically "squeezes(=condense)"/disposes your e-mail containing obsolete contents/context. this is difference from other tools that only sweeps duplicated copies of e-mail....
	MailShaver also has following automatic functionality:
	auto-cleaning of e-mail subject / auto-categorizing / auto-outdenting / timer-based cleaning / dumping or retrieving attachments
	/ Listing e-mail addresses  / Show&reach a full-path of MS-Outlook Namespace / Peeking into e-mail without opening mail /disabling "sent items" box
	+ plus some more features...



	MailShaver also has following automatic functionality:
	MailShaver can automatically "squeeze(=condense)"and disposes obsolete e-mail,  cleans e-mail subjects,  categorizes/outdents mail, dumps/retrieves attachments
	,  generates mail addresses  in CSV, Shows full-path to a mail, peeking into e-mails,, disabling "sent items" box
	+ plus some more features...


調査メモ
	共有フォルダ VMware　-3.5h
	無線LANアダプタかいかえとMACアドレス依存のHOT-SPOT接続トラブル　-3h

	vimrc
	vimmacro
	fletstool uninstall@wakou-eki

	　　Acer
	　　　├A-open
	　　　└BEN-Q

	ASUS
	ASUStek
	MSI
	Kingston
	Prinston technology
	GreenHouse = Korea

	■yahoo pipe
		hatena---> 大手小町、
	Daijob http://www.daijob.com/jobs/search?pg=0&kw=ruby&kf[]=1&kf[]=2&ns=0&xs=0&la=&lb=&hs=0&hx=0&el[]=5&as[]=1&as[]=2&as[]=3&li=0&submit.x=51&submit.y=13&submit=%E5%86%8D%E6%A4%9C%E7%B4%A2
	==================================＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
	人民元箪笥預金=半年１００万円しかおろせない。



	野村?好配当日本株式オープン
	 国内株式
	 6,573
	-37 (-0.56%)
	 -34.31%
	 -13.17%
	 3
	 14,726

	日興?株ちょファンド日本（高配当株・割安株・成長株）毎月分配型
	 国内株式
	 5,368
	-5 (-0.09%)
	 -35.11%
	 -18.31%
	 3
	 36,089




	(5726|5727|5541|5781|6868|6998|6998|4047|5781|6138|5707|5855|4092|4107|4080|5855|7456|3036)
	Ti:チタン
	5726 住友チタニウム
	5727 東邦チタニウム

	Ni:ニッケル
	5541 大平洋金属

	Mo:モリブデン
	5781 東邦金属
	6868 東京カソード研究所
	6998 日本タングステン
	W:タングステン
	6998 日本タングステン
	4047 関東電化工業
	5781 東邦金属
	6138 ダイジェット工業
	In:インジウム
	5707 東邦亜鉛
	5855 アサヒプリテック
	Co:コバルト
	4092 日本化学工業
	4107 伊勢化学工業
	4080 田中化学研究所
	U:ウラン
	Pu:プルトニウム
	その他
	5855 アサヒプリテック [リサイクル企業]
	7456 松田産業 [リサイクル企業]
	3036　アルコニックス [ニッケル、チタン、タングステン、モリブデン]




#linux-rehabilitaion menu
	#3month-blank
		 vi---set nowrap, set nonumber, set list
		 w3m google.co.jp
		 login to webmin with ID= "some_body"
		 sudo ruby R2chnnInitfork.rb help
		 sudo ruby R2chnnInitfork.rb start localdebug home
#mySQL
	#Linode	sudo apt-get install mysql-server mysql-client libmysqlclient15-dev libmysql-ruby1.8 -y
		you@ecolnux:~/RoRapps/2chnrg/lib$ ps -ef |grep sql
		root      3300     1  0 17:29 ?        00:00:00 /bin/sh /usr/bin/mysqld_safe
		mysql     3446  3300  0 17:29 ?        00:00:01 /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --user=mysql --pid-file=/var/run/mysqld/mysqld.pid --skip-external-locking --port=3306 --socket=/var/run/mysqld/mysqld.sock
		root      3447  3300  0 17:29 ?        00:00:00 logger -p daemon.err -t mysqld_safe -i -t mysqld

	#Linode >	mysqladmin create r2chnn -u root -p
	#Linode >
		rake adva:install:core;rake adva:uninstall engines=blog
		rake db:migrate
	#cf.	rails -d mysql [pj-name]
	#edit config/database.yml
		development:
			adapter: sqlite3
			database: db/development.sqlite3
			pool: 5
			timeout: 5000
		dev:
			adapter: mysql
			database: r2chnn
			username: "root"
			password: "alison"
			timeout: 5000
			socket: /var/run/mysqld/mysqld.sock
			#encoding: utf8
	cp config/environment/development.rb config/environment/dev.rb
	>	mysql -u root -p
		 show databases;
		 use [DBname];
		 show tables;
		 describe [table-name];
		\h	help
		\q	quit
		status

	mysql> select * from users ;
		+----+------------+-----------+----------------------+----------+-------+-----------+------------------------------------------+------------------------------------------+------+-------+---------+-------------+-----------+------------------+-----------+---------------------+---------------------+---------------------+------------+
		| id | first_name | last_name | email                | homepage | about | signature | password_hash                            | password_salt                            | ip   | agent | referer | remember_me | token_key | token_expiration | anonymous | created_at          | updated_at          | verified_at         | deleted_at |
		| +----+------------+-----------+----------------------+----------+-------+-----------+------------------------------------------+------------------------------------------+------+-------+---------+-------------+-----------+------------------+-----------+---------------------+---------------------+---------------------+------------+
		| |  1 | some_body | NULL      | some_body@gmail.com | NULL     | NULL  | NULL      | d9e778c53529bcf488846230be0f6bf6f3a922d4 | 9ee11fa50003a673b6c783263a61770f37254b55 | NULL | NULL  | NULL    | NULL        | NULL      | NULL             |         0 | 2009-07-25 09:19:17 | 2009-07-25 09:19:17 | 2009-07-25 09:19:16 | NULL       |
		| +----+------------+-----------+----------------------+----------+-------+-----------+------------------------------------------+------------------------------------------+------+-------+---------+-------------+-----------+------------------+-----------+---------------------+---------------------+---------------------+------------+
		| 1 row in set (0.00 sec)
		|

	 MySQL インポートとエクスポート（テキストデータ） Submitted by sasaki on 月曜, 2007-01-15 15:44
		 #erace all existing rows
			 mysql -u root -p
			 use r2chnn;
			 delete from kokuekis;
		 ■テキストTAB形式でのエクスポート
			  データベースmydbのempテーブルからタブ区切りのテキストデータでエクスポートする。
				 $ sudo mysql -B --skip-column-names -D mydb -e 'select * from emp;' -u tanaka -p > out.txt
				 $ sudo mysql -B --skip-column-names -D r2chnn -e 'select * from kokuekis;' -u root -p > test.txt
			  --skip-column-namesを削除して実行すれば、カラム名も出力されるので便利。
		 #vi replace mysq-export&import
			%s/】\t\t/】\t\t2009\//gc
			%s/】\t\t2009\/03/】\t\t2010\/03/gc
			%s/】\t\t2009\/02/】\t\t2010\/02/gc
			%s/】\t\t2009\/01/】\t\t2010\/01/gc
				#置換もれがあるのでvi上でチェック
		  #文字化け対策
		  ■テキストデータのインポート mysqlimport編
			  データベースmydbのempテーブルにテキストデータをインポートする。
				  tar cvf tbl.tar *tbl.*; #<----sftp with binmode
				  SHOW VARIABLES LIKE 'character_set%';
						SHOW VARIABLES LIKE 'character_set%';
						+--------------------------+----------------------------+
						| Variable_name            | Value                      |
						| +--------------------------+----------------------------+
						| | character_set_client     | latin1                     |
						| | character_set_connection | latin1                     |
						| | character_set_database   | utf8                       |
						| | character_set_filesystem | binary                     |
						| | character_set_results    | latin1                     |
						| | character_set_server     | latin1                     |
						| | character_set_system     | utf8                       |
						| | character_sets_dir       | /usr/share/mysql/charsets/ |
						| +--------------------------+----------------------------+
						? 解決方法その3 root になれるなら MySQL のデフォルト文字コードを UTF-8 に変更する。 /etc/my.cnf か /etc/mysql/my.cnf を開き（ない場合は mysql が起動するときの設定ファイルを探す）、MySQLのデフォルト文字コードを UTF-8 に変更する。
						# vi /etc/my.cnf
						[mysqld]
						default-character-set = utf8
						[mysql]
						default-character-set = utf8
						[mysqldump]
						default-character-set = utf8
				  $ sudo mysqlimport --local mydb emp.txt -u root -p
				  $ sudo mysqlimport --local r2chnn kokuekis.tbl.tsv -u root -p
				 select * from kokuekis where sbm > 900;
			 mydb：　データベース名
			 emp.sql：　テーブル名.sql（中身はテキストタブのデータ）
			 テキストエディタやExcel等で、TEXT-TAB形式で書き出した後、「テーブル名.txt」へ変更する
			 --localを指定しないと、「Access denied」エラーが発生する。





#capistrano
  494  gem install capistrano
  495  gem install capistrano-ext
  496  gem install capistrano_colors
  497  gem install capistrano_rsync_with_remote_cache

  チャットで共有「GREE trunk 3分後に更新」
  #no need to sudo/su -
  cap trunk deploy
  cap trunk unicorn:restart

■ActieRecord-troubleshooting
 QuestChapter.all.map{|record| [record.id, record.quest_sections.count]}
 QuestChapter.where(id: 39).first.quest_sections
 QuestChapter.all.map(&:id)

■マスター管理スクリプト
[19:13:00] 純一 大島: bundle exec rake dxd:db:master:update

■コーディング規約
 #@jっていう変数名はインスタンス変数として使う場合は、意味の取れる名前に変更

 svn status| grep -niE "*rb$"



[-tmp-]
[-ecolinux-config-steps-]
[-vim-]
	[-vimScript-]
	[-vimWindowTab-]
[-RubyMainOTL-]
	[-hpricot-]
[-RailsApache-]
	[-railsDBapi-]
	[-rails_activescafhold-]
	[-hpricot-]#test
sudo /usr/local/apache2/bin/httpd& start
#mod_rails-passenger RailsMaxPoolSize =2でもlinode360で不安: mongrel cluster N=3 で50K/dayこえたら検討
#-----------------------------------------------------------------------------
you@ecolnux:~/RoRapps/2chnrg$ vmstat -S M
	you@ecolnux:~/RoRapps/2chnrg$ passenger Node=1 below
	procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
	 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa
	 3  0    196      8      1     27    0    0    27    19  144   98  9 14 75  2
	you@ecolnux:~/RoRapps/2chnrg$ mongrel_cluster Node=1 below
	procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
	 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa
	 2  0    126     13      4     41    0    0    27    19  144   98  9 14 75  2
	you@ecolnux:~/RoRapps/2chnrg$ mongrel_cluster Node=2 below
	procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
	 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa
	 4  0    126      6      3     32    0    0    27    19  144   99  9 14 75  2
	-------------------------------------------------------------------------------
##Mongrel
	mongrelはスレッド起動などが無いため、1ポート1プロセス。後述するmongrel_cluster+Apache mod_proxyと併用します。
	# mongrel & mongrel_clusterのインストール。
		sudo gem install mongrel mongrel_cluster --include-dependencies
		cd RAILS_ROOT
		mongrel_rails stop
	#Apache2 状況確認
		/usr/local/apache2/bin/httpd -l
	#Apache2 rebuild
		wget http://example.com/path/to/httpd-2.2.3.tar.bz2
		tar jxf httpd-2.2.3.tar.bz2
		cd httpd-2.2.3
		#sudo ./configure --enable-proxy --enable-proxy-balancer
		sudo ./configure --enable-proxy --enable-proxy-balancer --enable-so --enable-ssl --with-ssl=/usr/bin/openssl --enable-modules=most
		sudo make
		sudo make install
	#case of DSO installable module
		apache2 mod_rewriteを後から追加（インストール）
		PHPをインストール済みの場合、あとからapacheを再インストールは大変です。*DSOでインストールされているか？を確認。されていればOK。
		/usr/local/apache2/bin/httpd -lを実行
			Compiled-in modules:
			http_core.c
			mod_so.c 　これがあれば makeをしないで追加できる

		*mod_rewriteをインストール
		ソースをDLした場所（例）に/home//source/httpd-2.2./modules/mappers/mod_xxx.cがあるか確認
			find -name * ./ |grep xxx

		cd /home//source/httpd-2.2./xxx/XXX/
		$ /usr/local/apache2/bin/apxs -i -a -c ./mod_xxx.c

		apacheの再起動で有効

	#一度設定ファイル(config/mongrel_cluster.yml)を作るようです。
		#Linode: mongrel_rails cluster::configure -a 127.0.0.1 -e production -p 3000 -N 3 -n10
			Writing configuration file to config/mongrel_cluster.yml.
			you@ecolnux:~/RoRapps/2chnrg$ cat config/mongrel_cluster.yml
			---
			address: 127.0.0.1
			log_file: log/mongrel.log
			port: "3000"
			num_procs: "10"
			environment: production
			pid_file: tmp/pids/mongrel.pid
			servers: 3
		#mongrel_cluster startでは、単に複数ポートでmongrelが起動しているだけ
		mongrel_rails cluster::start -v --clean
			mongrel_rails cluster::stop
		#手動起動	-Bを付けるとデバッグモードです。これつけるとかなり遅い。-n10で10個のスレッド起動ができる。
		mongrel_rails start -a 127.0.0.1 -d production -p 3000 -B
		#ロードバランスさせる必要があります。それはapacheのmod_proxyで実現。
		conf/httpd-proxy.conf & httpd.conf


		you@ecolnux:/usr/local/apache2/conf$ mongrel_rails start -h
			Usage: mongrel_rails <command> [options]
				-e, --environment ENV            Rails environment to run as
				-d, --daemonize                  Run daemonized in the background
				-p, --port PORT                  Which port to bind to
				-a, --address ADDR               Address to bind to
				-l, --log FILE                   Where to write log messages
				-P, --pid FILE                   Where to write the PID
				-n, --num-processors INT         Number of processors active before clients denied
				-o, --timeout TIME               Time to wait (in seconds) before killing a stalled thread
				-t, --throttle TIME              Time to pause (in hundredths of a second) between accepting clients
				-m, --mime PATH                  A YAML file that lists additional MIME types
				-c, --chdir PATH                 Change to dir before starting (will be expanded)
				-r, --root PATH                  Set the document root (default 'public')
				-B, --debug                      Enable debugging mode
				-C, --config PATH                Use a config file
				-S, --script PATH                Load the given file as an extra config script
				-G, --generate PATH              Generate a config file for use with -C
					--user USER
												 User to run as
					--group GROUP
												 Group to run as
					--prefix PATH
												 URL prefix for Rails app
				-h, --help                       Show this message
					--version                    Show version

		you@ecolnux:/usr/local/apache2/conf$ mongrel_rails cluster::configure -h
			Usage: mongrel_rails <command> [options]
				-e, --environment ENV            Rails environment to run as
				-p, --port PORT                  Starting port to bind to
				-a, --address ADDR               Address to bind to
				-l, --log FILE                   Where to write log messages
				-P, --pid FILE                   Where to write the PID
				-c, --chdir PATH                 Change to dir before starting (will be expanded)
				-o, --timeout TIME               Time to wait (in seconds) before killing a stalled thread
				-t, --throttle TIME              Time to pause (in hundredths of a second) between accepting clients
				-m, --mime PATH                  A YAML file that lists additional MIME types
				-r, --root PATH                  Set the document root (default 'public')
				-n, --num-procs INT              Number of processor threads to use
				-B, --debug                      Enable debugging mode
				-S, --script PATH                Load the given file as an extra config script.
				-N, --num-servers INT            Number of Mongrel servers
				-C, --config PATH                Path to cluster configuration file
					--user USER
												 User to run as
					--group GROUP
												 Group to run as
					--prefix PREFIX
												 Rails prefix to use
				-h, --help                       Show this message
					--version                    Show version

	■トラブルシューティング

	Railsはデフォルトのままでルートにアクセスするとdispacherがpublic/index.htmlに読み替えてWelcome Abord画面を表示するんだけど、これが不要だったからpublic/index.htmlを削除していた。これが直接的な原因っぽい。
	空ファイルでも良いのでindex.htmlを置いておけばエラーは出なくなるはず、という事でやってみた結果、エラーは出なくなった。


	$ mongrel_rails ?prefix /yuki
	こうすることで、link_toなどのHelperが正しいURLを作成できる

	Publicがおかしいので

	$ cd public
	$ ln -s . yuki
	自身へリンク、これでPublic内のImagesなども見れた

	script/serverコマンドは以下のように起動するサーバを指定できる。

	# ruby script/server webrick

	サーバを指定しない場合は、以下の優先順位を元に起動するサーバを決定する。

	   1. Mongrel
		  2. Lighttpd
			 3. WEBrick

			 よってMongrelをインストール後もscript/serverスクリプトを使えるが、

			 Mongrel専用の起動スクリプトを使うとscript/serverスクリプトには無いオプションを使うことが出来る。

			 # mongrel_rails start --prefix /myapp

			 のようにprefixオプションを使うと、http://localhost:3000/myappがアプリケーションルートになる。

			 アプリケーションごとに異なるprefixをつければ、ドメインが一つしかない場合でも手軽に複数のRailsアプリケーションを公開することが出来る。

	ProxyRequests Off
	<Proxy *>
	  Order deny,allow
		Allow from all
	</Proxy>
	ProxyPass / http://localhost:3000/

	以下の内容についてはapacheのmod_proxy、mod_proxy_balancerが有効になっていることが前提です。またパスは環境によって異なると思いますので参考までに。

	備忘録兼ねてますので途中の冗長な作業も書いてますがあしからず、です。

	■apacheのリバースプロキシの設定

	/etc/httpd/conf.d/のproxy.confの内容を以下のように変更します（ファイルがなければ作成）。

		# cd /etc/httpd/conf.d/
		# vi proxy.conf

		ProxyRequests Off
		<proxy *>
		Order deny,allow
		Allow from all
		</proxy>

		ProxyPass /myapp1 balancer://mycluster1 lbmethod=byrequests
		ProxyPassReverse /myapp1 balancer://mycluster1
		<proxy balancer://mycluster1>
		BalancerMember http://127.0.0.1:3000/myapp1 loadfactor=10
		BalancerMember http://127.0.0.1:3001/myapp1 loadfactor=10
		BalancerMember http://127.0.0.1:3002/myapp1 loadfactor=10
		</proxy>

		ProxyPass /myapp2 balancer://mycluster2 lbmethod=byrequests
		ProxyPassReverse /myapp2 balancer://mycluster2
		<proxy balancer://mycluster2>
		BalancerMember http://127.0.0.1:4000/myapp2 loadfactor=10
		BalancerMember http://127.0.0.1:4001/myapp2 loadfactor=10
		BalancerMember http://127.0.0.1:4002/myapp2 loadfactor=10
		</proxy>

		#ロードバランス管理画面の設定
		<location /balancer-manager>
		SetHandler balancer-manager
		Order Deny,Allow
		Deny from all
		Allow from *.*. #管理画面を使用するクライアントやネットワークを指定
		</location>

	これでmyapp1とmyapp2という二つのRailsアプリをそれぞれクラスタリングした状態でたてられます。

	ポート80で入った要求を、/myapp1ならポート3000?3002に /myapp2ならポート4000?4002に振り分けてやる訳です。

	※上の設定の場合、ロードバランサーの管理画面のURLは http://hoge/balancer-manager となります。

	proxy.confを修正したら設定を反映するためにapacheを再起動します。

		# cd /etc/rc.d/init.d
		# ./httpd restart

	■mongrelのクラスター起動

		# cd hoge/myapp1
		# mongrel_rails cluster::configure -e production -p 3000 -N 3 ?prefix /myapp1
		# mongrel_rails cluster::start

		# cd hoge/myapp2
		# mongrel_rails cluster::configure -e production -p 4000 -N 3 ?prefix /myapp2
		# mongrel_rails cluster::start

	※停止の時は mongrel_rails cluster::stop

	?rabbitonigiri
	(posted in the Ruby on Rails category)
	このエントリをdel.icio.usに追加このエントリをはてなブックマークに追加

	Find this post interesting? Besides commenting below, you can follow responses with the RSS 2.0 feed or trackback from your own site.
	2 Responses to “【Rails】mongrel cluster＆apacheのリバースプロキシで複数のアプリ共存”

	   1. maru says:
		  2月 29, 2008, 3:33:08

		  あん。
		  ?prefix /myapp1
		  じゃん
		  -prefix /myapp1
		  じゃなくて。

		  バージョン違いのせいかなー？




-------------------------------------------------------------------------------
#netbeans
	sudo gem install ruby-debug-ide
	+
	plugin "jVi" install
#eclipse+radrails
	manually ownload last year's eclipse release.
	+
	install plugin "Vwrapper"
	*back-upはeclipse & ~/.eclipse/

-------------------------------------------------------------------------------
##Passenger(mod_rails) by Lai HongLi & Ninh Bui
	■使ってみて
		なぜかNewsサイトではスタイルシートが有効化されない。
		あと速度がめちゃくちゃ遅かった。
		設定の問題かもしれないのでもう少しいじってみる。
	■参考リンク
		公式サイト　http://www.modrails.com/install.html
		マニュアル　http://www.modrails.com/documentation/Users%20guide.html
		http://rails20.jp/2008/04/passenger/

	■Prep
		passengerはmod_rewriteとmod_aliasと衝突する。
		mod_rewriteを使いたい場合、RailsAllowModRewriteを使えばよい。ただし、先述の問題を回避するために、.htaccessを削除するかリライトルールを書き換える必要がある。


		mod_rails(passenger)で起動すると、143Mほど確保		Linode 360 =360MB
		cf.　mongrelで動かしてみると、44Mほどメモリ確保
	　･passengerはrootでは動かないので、かならずrailsのディレクトリ以下の所有ユーザーはroot以外(apacheなど)にしておく
	   error ":nonexistence がでる。
		Railsアプリケーションが動作するユーザーは$RAILS_ROOT/config/environment.rbのオーナーとなりますが、 environment.rbがrootの場合はnobodyユーザーで動作します。このとき、オーナーがrootである$RAILS_ROOT/log ディレクトリや$RAILS_ROOT/tmpディレクトリに書き込みができず、アプリケーションが動作しないことがあります。
		useradd you
		passwd you
		chown -R you:you /root/2chnrg
		mkdir /home/you
	　* apache MPW(multi-process-worker)

	■ざっと手順だけ
	   1. Railsアプリを適当な場所にUP
	   2. DocumentRoot以下に[RAILSROOT]/publicへのシンボリックリンクを作成
	   3. httpd.confに設定を追加
	   4. Apache再起動

	■passengerをインストールsudo su /rootで全行程
		sudo su
		#Apacheはソースから入れたので環境変数を定義しておく。
		export APXS2=/usr/local/apache2/bin/apxs;export PATH=/usr/local/apache2/bin/:$PATH
		sudo gem install fastthread passenger
		passenger-install-apache2-module
		passengerのインストールが完成したら、apacheに組み込む。
			* GNU C++ compiler... not found
			* Ruby development headers... found
			* OpenSSL support for Ruby... found
			* RubyGems... found
			* Rake... found at /usr/bin/rake
			* Apache 2... found at /usr/sbin/apache2
			* Apache 2 development headers... not found
			* Apache Portable Runtime (APR) development headers... not found
			* fastthread... found
		not found(赤字）がある場合は、それぞれインストールをする。
		今回のケースだと次のとおり
			% sudo apt-get install build-essential
			% sudo apt-get  install apache2-threaded-dev



		$ sudo apt-get install apache2-prefork-dev
	　色々ないけど、教えてやるよーという親切インストーラー教えてくれた結果が以下
			Installation instructions for required software
			* To install Apache 2 development headers:
			Please run yum install httpd-devel as root.
		   * To install Apache Portable Runtime (APR) development headers:
			Please run yum install apr-devel as root.
			* To install Apache Portable Runtime Utility (APU) development headers:
			Please download it from http://httpd.apache.org/
			(APR Utility is an integrated part of Apache.)

	　自分の場合、yum install httpd-develでapr-develもインストールされた。
	　インストール終了。その後もhttpd.confに追記する箇所や、バーチャル設定の書き方を教えてくれるのでメモ。

			The Apache 2 module was successfully installed.

			Please edit your Apache configuration file, and add these lines:

			LoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.2/ext/apache2/mod_passenger.so
			PassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.2
			PassengerRuby /usr/bin/ruby

			Deploying a Ruby on Rails application: an example

			Suppose you have a Ruby on Rails application in /somewhere. Add a virtual host
			to your Apache configuration file, and set its DocumentRoot to
			/somewhere/public, like this:

	■ append to httpd.conf
	   LoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.4/ext/apache2/mod_passenger.so
	   PassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.4
		PassengerRuby /usr/bin/ruby1.8

	■Virtualhost設定例：
			<VirtualHost *:80>
			ServerName www.yourhost.com
			DocumentRoot /somewhere/public # <-- be sure to point to 'public'!
			</VirtualHost>
	■Virtualhost設定例a2：http://hogerails/redmine
		<VirtualHost *:80>
		 ServerName hogerails
		 DocumentRoot /var/hoge/rails
		 RailsBaseURI /redmine
		 RailsBaseURI /hogesys
		</VirtualHost>
		この設定の場合、/var/hoge/rails/redmineとしてシンボリックリンクを作ればOKです

		# モジュールとサイトを有効にする
		$ sudo a2enmod rails
		% sudo a2ensite [virtual-host-name]
		Apacheの再起動
		% sudo /etc/init.d/apache2 restart
	■トラブルシューティング
	　･下記のようなエラーがhttpdのエラーログに出ていたら
		 *** Passenger ERROR (ext/common/ApplicationPoolServer.h:602):
		Cannot execute /usr/lib/ruby/gems/1.8/gems/passenger-2.2.2/ext/apache2/ApplicationPoolServerExecutable: 許可がありません (13)
		[Wed May 13 11:22:46 2009] [notice] SELinux policy enabled; httpd running as context root:system_r:httpd_t:s0
		[Wed May 13 11:22:46 2009] [notice] suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)
	　以下のように対応
		#setenforce 0

	   *undefined method `cache_template_loading=' for ActionView::Base:Class
		config/environments/production.rbの以下の記述をコメントアウト
		# config.action_view.cache_template_loading = true

	   *CGI::Session::CookieStore::TamperedWithCookie ?
		ブラウザのクッキーをクリア

	   *no such file to load -- application
		config/environments以下の設定ファイル
		#config.cache_classes = true	#"require"でモジュールをロード
		config.cache_classes = false	#falseにすると"load"を使う everytime

	   *route missing	500
		# in config/environments/production.rb
		（略）
		config.action_controller.relative_url_root='/hogesys'

	## Passengerのチューニング
	いずれもhttpd.conf中で設定します。なお、これらはApache全体に対する設定であり、バーチャルホストごとの指定はできません。
		RailsMaxPoolSize Apacheサーバ上で生成するRailsのインスタンス数を設定します。
		デフォルト値は20ですが、メモリが少ない環境では減らすことを検討してください。アクセスが集中した際にメモリが不足して極端にレスポンスが悪化する恐れがあります。"Passenger Users Guide":http://www.modrails.com/documentation/Users%20guide.html では、メモリ256MBのVPS環境では2、2GBのメモリを搭載したサーバでは30が推奨されています。
		RailsPoolIdleTime Railsインスタンスへのリクエストがこの設定値以上の時間無かった場合に、インスタンスを終了させます。
		デフォルト値は120(秒)です。この値が小さすぎると、インスタンスの生成・終了が頻繁に行われることになりレスポンスが悪化します。逆に大きすぎると必要以上に長時間メモリを占有されてしまいます。Passenger Users Guideでは、ユーザーのwebサイト上の平均滞在時間の2倍を推奨しています。例えば1回のRedmine上での平均的な作業時間が5分の場合、推奨設定値は600(秒)です。
	Passenger 2.0.6以降でGlobal Queuingを有効にするには、Apacheの設定ファイルで以下の設定を行います。
		PassengerUseGlobalQueue on
	passenger-statusコマンド
	autoindex: Aliasを切ったディレクトリに対して PassengerEnabled off

i#passenger高速化
	RailsアプリをPassengerを使ってApacheでホストしてる場合、リクエストがあるとアプリがインスタンス化されます。次回リクエストがあったときにア
	プリのインスタンスが存在すれば、レスポンスが速くなります。


	デフォルトでは、300秒でインスタンスは削除されます。ということは、インスタンスをずっと保持しておけば、レスポンスは最速なわけです。その設
	定が、これ。httpd.confに書きます。

	PassengerPoolIdleTime 0

	Railsの表示高速化にて動的なイメージやCSSをキャッシュファイルとする作戦¶
	イメージやCSSなどを、管理者が更新したりする場合で、イメージやCSSはpublicなところにおいてもよい場合
	イメージやCSSを動的に生成するためのコントローラを作成し、キャッシュ保存先を本来のpublic内部に設定する
	管理者がイメージを登録した際に、publicにキャッシュファイルが作成され、観覧時には常にそれを見るようになる
	管理者がイメージを削除した際には、publicからキャッシュファイルが削除されるので、観覧する人はイメージがみられなくなる


-------------------------------------------------------------------------------
#サーバー機能飽和したらアパッチ再構成 a2dismod asis alias status log_config auth_basic authn_file authz_groupfile authz_hosts
	#" rails passenger 不要 a2dismod " disable needless apache modules to speed up
	初期ロード　*] core *] mod_env
	ACCEPTヘッダ認識用途 *] mod_negotiation
	#perlなどCGI *] mod_cgi *] mod_actions
		DIR~ 処理 *] mod_dir *] mod_userdir *] mod_autoindex
		SSI	*] mod_include
	#PASSENGER	*] prefork
	#多分永久に使わない
		HTTP-response-headerかきかえ　*] mod_asis
		URL変換とリダイレクト用途 *] mod_alias
		送信状況表示用 *] mod_status
	#Land.toと統合後再組み込み
		*] mod_log_config
		*] mod_auth_basic
		*] mod_authn_file
		*] mod_authz_groupfile
		*] mod_authz_host

#prod config/environments/*** loglevel=:error

-------------------------------------------------------------------------------
#ActiveScafFold
	  rails/plugin/ActiveScaffold
	  <http://a01.biz/wiki/index.php?plugin=related&page=rails%2Fplugin%2FActiveScaffold>


	rails <http://a01.biz/wiki/index.php?rails>


		ActiveScaffold? <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#pad09b43>

		* ActiveScaffold <#pad09b43>
		* 説明 <#r5efc1c0>
		* Rails2.0対応について <#tdf140e2>
		* インストール <#f5945e80>
		* 使い方 <#z0bcefa8>
			  o 単純な使いかた <#l8e6567c>
			  o ActiveScaffoldの設定 <#f9d88981>
					+ 基本的な内容 <#tb58f8ce>
					+ ページあたりの表示数を指定 <#k568981c>
					+ listの並び順を設定 <#hfc102c7>
					+ 表示するカラムと順番を指定する <#u8058cd7>
					+ カラムのタイトルを日本語にしたい <#v39cab5e>
			  o 2008-03-25 ActiveScaffoldメニューの日本語化 <#u3d32f28>
			  o （旧）ActiveScaffoldメニューの日本語化【2008-03-25 プラグイ
				ン化されているので必要無し】 <#y923029c>
			  o 表示方法を変更するには? <#l7158af5>
			  o 共通の設定をするには? <#rfe3e821>
			  o 不要なメニューを消すには? <#s0686d65>
		* 公式サイト翻訳 <#jab9de3b>
			  o API:Core <#s357815c>
					+ actions (global local) <#n70189f0>
					+ action_links (global local) <#yf541d11>
					+ columns <#p74d1ff1>
		* リンク <#e070a68c>

	説明 † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#r5efc1c0>
	そのままではまともに使えないScaffoldに変わり、そのままでもかなり使える Viewを動的に作成してくれます。 Viewの開発を劇的に楽にします。
		Rails2.0対応について † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#tdf140e2>
	基本的な部分は問題なく使えるが、ソートをしようとするとエラーになる。 もしかしたらpostgresql特有の問題かも・・・
	インストール † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#f5945e80>
		Rails2.0～ 2007/1/9 時点
			$ script/plugin install http://activescaffold.googlecode.com/svn/tags/1.1.0_rc1
			$ mv vendor/plugins/1.1.0_rc1/ vendor/plugins/active_scaffold
		Rails1.～
			$ script/plugin install http://activescaffold.googlecode.com/svn/tags/active_scaffold
	単純な使いかた † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#l8e6567c>
	コントローラに宣言を追加する
		$ vi app/controllers/admin_controller.rb
		class AdminController < ApplicationController
		  active_scaffold :user
		  layout "activescaffold"
		end

	ActiveScaffold? 用のレイアウトを追加 <http://a01.biz/wiki/index.php?cmd=edit&page=ActiveScaffold& refer=rails%2Fplugin%2FActiveScaffold>
		Rails2 $ vi app/views/layouts/activescaffold.erb
		Rails1 $ vi app/views/layouts/activescaffold.rhtml
			ファイル内容
			<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
			<html>
			  <head>
				<title>My Application</title>
				<%= javascript_include_tag :defaults %>
				<%= active_scaffold_includes %>
			  </head>
			  <body>
				<%= yield %>
			  </body>
			</html>

	ActiveScaffoldの設定 †
	基本的な内容 † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#tb58f8ce>
	設定をしたい場合はブロックで囲む
	config.xxx=は全体の設定 config.listやconfig.showなどはlist、show個別の設定になる。

		active_scaffold :product do |config|
		  config.label = "商品"
		  config.list.per_page = 2
		  config.list.sorting ={:name => :asc }
		end


		ページあたりの表示数を指定 † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#k568981c>
			config.list.per_page = 20
					listの並び順を設定 † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#hfc102c7>
			config.list.sorting = {:name => :asc}

		表示するカラムと順番を指定する † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#u8058cd7>
			columnsを書くと表示する順番を指定できる。
			config.columns = [:name, :note, :items]
			表示順は書いた順番になる。 全体設定なのでlistだけでなく、showもeditも同じ順番になる。 itemsの様に親子関係の場合も指定可能

		カラムのタイトルを日本語にしたい † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#v39cab5e>
			config.columns[:name].label = "商品名"
			config.columns[:note].label = "メモ"

		カラム関係のメソッド
			label	カラム名	String
			description	補足説明(編集時)	String
			required	必須項目	true|false
			ui_type	関連の選択設定	:crud|:select
			search_sql	SQLの条件節	true|String

	2008-03-25 ActiveScaffold? メニューの日本語化 † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#u3d32f28>
		$ script/plugin install http://svn2.assembla.com/svn/activescaffold_japanese_l10n
			  【2008-03-25 プラグイン化されているので必要無し】 † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#y923029c>
		urekatのスカンク日記３ <http://d.hatena.ne.jp/urekat/20071110/>さんのと ころの通りでOK

		libにactive_scaffold_localization.rbを作成
		$ vi lib/active_scaffold_localization.rb
			# http://activescaffold.com/docs/localization-reference
			class Object
			  AS_JP_MAP = {
				"Replace With New" => "新しい値に置き換える",
				"Edit"             => "編集",
				"Show"             => "表示",
				"Update"           => "更新",
				"Delete"           => "削除",
				"Search"           => "検索",
				"Create New"       => "新規作成",
				"Reset"            => "リセット",
				"hide"             => "隠す",
				"show"             => "表示",
				"Cancel"           => "キャンセル",
				"Found"            => "件見つかりました。",
				"Create"           => "作成",
				"Close"            => "閉じる",
				"No Entries"       => "データがありません",
				"Live Search"      => "リアルタイム検索",
				"Search Terms"     => "検索ワード",
				"Create %s"        => "%sの新規作成",
				'Create Another'   => "追加",
				'Add From Existing'=> "既にあるものを追加(Add From Existing)",
				'- select -'       => "-- 選択 --",
				'Remove'           => "除外",
				'Previous'         => "前",
				'Next'             => "次",
				'%s for %s'        => "%2$s の %1$s (%1$s for %2$s)",
				'Update %s'        => "%sの編集",
				'Are you sure?'    => "本当によろしいですか？",
				'Request Failed (code 500, Internal Error)' => "エラーが発生しました。",
				'Created %s'       => "%s を作成しました。",
				'Deleted %s'       => "%s を削除しました。",
				'Updated %s'       => "%s を更新しました。",
				"Version inconsistency - this record has been modified since you started editing it." => "更新が衝突しました。",
				'Show %s'          => "%s の表示"
			  }
			  alias_method :as__without_jp, :as_
			  def as__with_jp(*args)
				pars = args.dup
				fmt = pars.shift
				text = AS_JP_MAP[fmt]
				if text
				  text = text % pars unless pars.empty?
				  return text
				end
				return as__without_jp(*args)
			  end
			  alias_method :as_, :as__with_jp
			end

		ActiveSupport::CoreExtensions::Time::Conversions::DATE_FORMATS[:default] = "%Y/%m/%d %H:%M"
		ActiveSupport::CoreExtensions::Date::Conversions::DATE_FORMATS[:default] = "%Y/%m/%d %H:%M"

		environment.rbの最後に追加
			$ vi config/environment.rb
			require "active_scaffold_localization"

		サーバ再起動
		$ script/server


	表示方法を変更するには? † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#l7158af5>
	表示方法を変更するには、ヘルパーを利用する。
	|カラムの表示方法|(カラム名)_column(record)
	|Formの表示方法|(カラム名)_form_column(record, name)
		module AdminHelper
		  def release_date_column(record)
			record[:release_date].strftime("%Y-%m-%d")
		  end

		  def release_date_form_column(record,name)
			input(:record, :release_date, :name => name, :order => [:year, :month, :day], :use_month_numbers => true, :start_year => 1970)
		  end
		end

		  共通の設定をするには? † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#rfe3e821>
	applicationControllerでAjaxScaffold? .set_defaultsを指定すると全体の共 通設定が可能。 <http://a01.biz/wiki/index.php?cmd=edit&page=AjaxScaffold& refer=rails%2Fplugin%2FActiveScaffold>

		  不要なメニューを消すには? † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#s0686d65>

	conf.actions.exclude :delete, :show, :create, :update, :search

	:editではなく:updateなので注意

	公式サイト翻訳 † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#jab9de3b>

	  API:Core † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#s357815c>

		actions (global local) † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#n70189f0>

	使用するアクションを指定する(指定しないばあいは全部使う)

	conf.actions = [:create, :update, :show]

	使わないアクションを指定する

	conf.actions.exclude :create

	配列で渡せばまとめて指定できる

	conf.action.exclude = [:create, :delete]

	アクションを使える様にする

	conf.actions.add :delete

	アクションを変更する(:search専用?)

	conf.actions.swap :search, :live_search

			action_links (global local) † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#yf541d11>

	アクションを追加する

	conf.action_links.add 'get_pdf', :label => 'Download PDF'

	アクションの名称を変更

	conf.action_links['get_pdf'].label = "Save PDF"

	アクションを追加(簡易版)

	conf.action_links << 'print_pdf'

	標準のアクション名を変更する

	conf.show.link.label = "Display Record"

	列毎にMenuを表示する

	conf.action_links.add 'GetRss', :type => :record, :action => 'get_rss'

	アクションの説明

	:action	'action_name'	指定したアクションを実行する
	:controller	'controller_name'	コントローラを指定する
	:parameters		その他のパラメータを指定
	:method	:get :post :put :delete	メソッドを指定する
	:type	:table :record	全体かレコードかを指定
	:label	'label_name'	表示用ラベルを指定

	:confirm		確認? The confirmation message for the link	if any.

	:security_method
	:crud_type		:create :read :update :destroy
	:inline	true false	ActiveScaffold? で表示するか?
	:page	true false

			columns † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#p74d1ff1>
	カラムの追加

	conf.columns.add :name
	conf.columns << :sort_no

	まとめて追加

	conf.columns = [:name, :sort_no]

	listに対する編集

	conf.list.columns = [:name, :sort_no]

		リンク † <http://a01.biz/wiki/index.php?rails%2Fplugin%2FActiveScaffold#e070a68c>
		ActiveScaffold公式サイト(英語) <http://www.activescaffold.com/>
		ActiveScaffold を使って Ruby on Rails を機能アップする <http://www.ibm.com/developerworks/jp/linux/library/l-activescaffold/>
		2007-11-10 優しいRailsの育て方 <http://wota.jp/ac/?date=20071110>

	 新規
		<http://a01.biz/wiki/index.php?plugin=newpage&refer=rails%2Fplugin%2FActiveScaffold>
		http://a01.biz/wiki/index.php?cmd=rss&ver=1.0>
		Last-modified: 2009-01-04 (日) 19:17:31 (118d)
		Link: rails <http://a01.biz/wiki/index.php?rails>(118d)
		Site admin: anonymous <http://a01.biz/wiki/>

-------------------------------------------------------------------------------
#Version1.2.x and 2.x-----------------------------------
		minorio のプログラミング・メモ
		RSS2
		<[OSX][Ruby on Rails][WEB制作] ... | [Ruby on Rails][Rails 2.0] Rai...>
		2008-04-26
		■[OSX][Rails 2.0][RadRails][Ruby on Rails] Aptana RadRails を使った Scaffold の作成（RAILS 2.0 の場合） 14:12

	どうも『RailsによるアジャイルWebアプリケーション開発 第2版』の6.1章の通りにやっても Scaffold がうまく作成されないようなので、Rails 2.0 流のやり方をメモしておく。

		* phpMyAdmin で depot_development という名のデータベースを作っておき、RadRails で新規 Rails プロジェクトとして depot を作成
		* depot/config/database.yml ファイルを開いてデータベースのユーザー名、パスワード、ソケットなどを適切に設定

	本ではこのあと、モデルの作成（データベースマイグレーション）、コントローラーの作成、Scaffold の作成と進むことになっているのだけど、
	Rails 2.0 の場合、ここを scaffold 一発でやってしまえばいいみたい。
	Ruby エクスプローラーで depot プロジェクトが選択されていることを確認した上で、「ジェネレーター」タブから scaffold を選択、パラメーターに
	product title:string description:text image_url:string

	と入れて実行。
	これでマイグレーションファイル（db/migrate/20080427053115_create_products.rb）、
	コントローラーファイル（app/controllers/products_controller.rb）も一気に生成される。
	Rails 2.0のscaffoldを使ってみた
	教科書の例では admin コントローラーから product というモデルを操作するという構造になっているのだけど、2.0 の scaffold を使うとコントローラー名とモデル名も自動的に関連づけられるみたいだ（この場合はモデル名 product に対して、コントローラー名、View名が products と複数形になる）。
	scaffold のあと、「Rake タスク」タブから db:migrate を実行すると、データベースにテーブルが作成される。
	サーバー（WEBrick サーバー）を起動してブラウザーから http://127.0.0.1:3000/products にアクセスすると、空の Product リストが表示され、レコードの追加、修正、削除などのページが自動生成されていることが確認できた。
	教科書も Rails 2.0 対応だったらよかったんだけど・・。けっこういろいろ変わっているようなので、もう１冊そういう本を買っておいてもいいかも。

	Rails 2.0 - 初心者がすべきことは？

		作者 Rick DeNatale, 翻訳者 岡田 英久 投稿日 2008年1月8日 午前6時24分
		Rails 2.0.0、2.0.1、そして 2.0.2 という最近の矢継ぎ早なリリースに伴い、Rails サポートディスカッショングループには新しい Rails ユーザからの多くの問い合わせ(source)が届いている。彼らは Dave Tomas 氏と David Heinemeier Hansson 氏が執筆した書籍『 Agile Web Development with Rails 』（訳書のタイトルは『 Rails によるアジャイル Web アプリケーション開発』）のような有名なチュートリアルに従うことに疑問を感じている。書名の頭文字をとって一般に AWDR と呼ばれている Tomas 氏と Hansson 氏のその書籍は、すでに第二版が出版されているが、それも一年前のことで、 Rails 1.2 しかカバーしていない。
		Rails 2.0 と前バージョンである Rails 1.2 との違いは、Rails 1.2 と Rails 1.1 との間の違いに比べれば微々たるものだが、そこには疑うことを知らない新規ユーザをつまずかせるのに十分な大きさの落とし穴がある。
		Rails 2.0 のテーマのひとつはフレームワークのスリム化である。それにより、これまでは標準だったいくつかの機能がコア部分から削除され、プラグインとして提供されるようになった。
		1.2 をベースにしたチュートリアルに従っている人はそこでつまずく可能性がある。次に二つの例を挙げる。

		   1. 多くのチュートリアルではデータベースに MySQL を使っている。それは MySQL が Rails のデフォルトだったからだが、Rails 2.0.3 ではデフォルトが SQLite3 に変更(source)された。AWDR は後ろのほうで SQLite3 の使い方について説明しているが、チュートリアルを辿っている新規ユーザにとっては、問題にぶつかった時点でそれを自力で解決するための備えにはならないかもしれない。
		   2. AWDR の最初のほうで Rails のダイナミックな scaffold 機能を使用するが、現在のバージョンでは scaffold は次のようにプラグインをインストールした後でないと使用することができない。
						script/plugin install scaffolding

			  このように Rails 2.0 で削除された機能には他に、AJAX を使ったインプレイスエディタやオートコンプリート、そして有名な act as モデル拡張のいくつかが含まれる。
			  削除された機能を提供していると思われるものを利用可能なプラグインの中から探したければ、記のコマンドを実行するとよい。
						script/plugin list

					you@ecolnux:~/RoRapps/2chnrg$ ruby script/plugin list
					account_location              http://dev.rubyonrails.com/svn/rails/plugins/account_location/
					acts_as_list                  http://dev.rubyonrails.com/svn/rails/plugins/acts_as_list/
					acts_as_nested_set            http://dev.rubyonrails.com/svn/rails/plugins/acts_as_nested_set/
					acts_as_tree                  http://dev.rubyonrails.com/svn/rails/plugins/acts_as_tree/
					atom_feed_helper              http://dev.rubyonrails.com/svn/rails/plugins/atom_feed_helper/
					auto_complete                 http://dev.rubyonrails.com/svn/rails/plugins/auto_complete/
					continuous_builder            http://dev.rubyonrails.com/svn/rails/plugins/continuous_builder/
					deadlock_retry                http://dev.rubyonrails.com/svn/rails/plugins/deadlock_retry/
					exception_notification        http://dev.rubyonrails.com/svn/rails/plugins/exception_notification/
					http_authentication           http://dev.rubyonrails.com/svn/rails/plugins/http_authentication/
					in_place_editing              http://dev.rubyonrails.com/svn/rails/plugins/in_place_editing/
					javascript_test               http://dev.rubyonrails.com/svn/rails/plugins/javascript_test/
					legacy                        http://dev.rubyonrails.com/svn/rails/plugins/legacy/
					localization                  http://dev.rubyonrails.com/svn/rails/plugins/localization/
					open_id_authentication        http://dev.rubyonrails.com/svn/rails/plugins/open_id_authentication/
					scaffolding                   http://dev.rubyonrails.com/svn/rails/plugins/scaffolding/
					scriptaculous_slider          http://dev.rubyonrails.com/svn/rails/plugins/scriptaculous_slider/
					ssl_requirement               http://dev.rubyonrails.com/svn/rails/plugins/ssl_requirement/
					token_generator               http://dev.rubyonrails.com/svn/rails/plugins/token_generator/
					tzinfo_timezone               http://dev.rubyonrails.com/svn/rails/plugins/tzinfo_timezone/
					tztime                        http://dev.rubyonrails.com/svn/rails/plugins/tztime/
					upload_progress               http://dev.rubyonrails.com/svn/rails/plugins/upload_progress/
					lib                           svn://rubyforge.org/var/svn/betternestedset/trunk/lib/
					test                          svn://rubyforge.org/var/svn/betternestedset/trunk/test/
					lib                           svn://rubyforge.org/var/svn/betternestedset/trunk/lib/
					test                          svn://rubyforge.org/var/svn/betternestedset/trunk/test/
					comatose                      http://mattmccray.com/svn/rails/plugins/comatose/
					doozer                        http://mattmccray.com/svn/rails/plugins/doozer/
					encrypted_column              http://mattmccray.com/svn/rails/plugins/encrypted_column/
					gravatar_helper               http://mattmccray.com/svn/rails/plugins/gravatar_helper/
					labeled_form_builder          http://mattmccray.com/svn/rails/plugins/labeled_form_builder/
					radiant_behavior_filters      http://mattmccray.com/svn/rails/plugins/radiant_behavior_filters/
					radiant_mailer_behavior       http://mattmccray.com/svn/rails/plugins/radiant_mailer_behavior/
					radiant_password_protected_behaviorhttp://mattmccray.com/svn/rails/plugins/radiant_password_protected_behavior/
					rendered_column               http://mattmccray.com/svn/rails/plugins/rendered_column/
					tags                          http://mattmccray.com/svn/rails/plugins/tags/
					theme_support                 http://mattmccray.com/svn/rails/plugins/theme_support/
					comatose                      http://mattmccray.com/svn/rails/plugins/comatose/
					doozer                        http://mattmccray.com/svn/rails/plugins/doozer/
					encrypted_column              http://mattmccray.com/svn/rails/plugins/encrypted_column/
					gravatar_helper               http://mattmccray.com/svn/rails/plugins/gravatar_helper/
					labeled_form_builder          http://mattmccray.com/svn/rails/plugins/labeled_form_builder/
					radiant_behavior_filters      http://mattmccray.com/svn/rails/plugins/radiant_behavior_filters/
					radiant_mailer_behavior       http://mattmccray.com/svn/rails/plugins/radiant_mailer_behavior/
					radiant_password_protected_behaviorhttp://mattmccray.com/svn/rails/plugins/radiant_password_protected_behavior/
					rendered_column               http://mattmccray.com/svn/rails/plugins/rendered_column/
					tags                          http://mattmccray.com/svn/rails/plugins/tags/
					theme_support                 http://mattmccray.com/svn/rails/plugins/theme_support/

		別の選択肢は Rails 1.2.6 を使ってチュートリアルを一通り終え、その後で 2.0 への移行を検討することだ。
		まずは次のコマンドを実行して Rails 1.2.6 をインストールしよう。
			gem install rails --version 1.2.6

	次に、すでにインストール済の Rails 2.0.x 用 gems パッケージを削除するか、もしくはプロジェクトを作成する際の Rails コマンドで次のようにバージョン番号を指定すればよい。
		gems を使ってインストールしたほとんどのコマンドは gem 内のコードを実行するラッパーである。
	それらのコマンドでは、左右にアンダースコアを付加したバージョン番号を最初の引数として与えて実行することにより、gem のバージョンを指定することができる。
		rails _1.2.6_ my_rails_project

		Obie Fernandez 氏(source)が書いた『 The Rails Way (source)』のように、現時点で入手可能な Rails 2.0 対応書籍もすでにいくつか存在する。
		しかし、今までのところ、それらは全て多少 Rails に触れた経験をもっているユーザのための情報源を目指しているように思える。
		古い Rails 文献のいくつかは、時が経てば必ず更新されて、新しいチュートリアルが盛り込まれることになるだろう。
		さしあたり Rails の新規ユーザに与えられている選択肢は二つだ。前バージョンからの変更点にぶつかったらひたすら苦労して切り抜けるか、
		あるいは恐らくより賢明な方法として、ある程度のレベルに達するまではチュートリアルに合わせたバージョンの Rails を利用するかである。
		原文はこちらです：http://www.infoq.com/news/2007/12/rails-20-docs

	Old vs. New

	work$ rails exchange
	work$ rails -d mysql exchange
	exchange$ ruby script/generate scaffold Movie title:string description:text one_sheet_url:string
	  * Installed Rails
		#gem install rails --include-dependencies

	  * Created an aplication with the rails command
		$rails exchange

	  * Created the databases for the application with the rake command
		$ rake db:create:all

	  * Used the script/generate command to create the scaffolding for the application
		$ ruby script/generate scaffold Movie title:string description:text one_sheet_url:string

	  * Created the database table using the generated migration file
		$ rake db:migrate

	  * Started the webserver with the script/server command
		$ ruby script/server

	  * Pointed our web browser to the application and started entering and editing data
		http://localhost:3000/movies





-------------------------------------------------------------------------------
Railsでデバッグをする７つの方法
	------------------

	記事の引越しから漏れていたのでサルベージ。

	secondlifeさんの記事 に反応して後で書こうかなあと思っていたら、大分時間がたってしまいましたが、めげずに書いてみます。

	1. p/pp
		  こちらはRailsに限らず良く使われている方法ですが、RailsではWebサーバをフォアグラウンドプロセスとして立ち上げた状態で使う感じになります。

	  ???1? $ ./script/server

	p/ppに慣れている人にはわかりやすくて良いと思います。

	2. logger.deb ug
		  さて、続いてlogger.deb ugを使う方法です。
			???1? logger.debug "something interesting information"

		  p/ppの代わりにlogger.deb ugを呼ぶ事で、結果がlog/develo pment.logなどのlog/$RAILS_ENV. logファイルに書き出されます。 書き出されたファイルを、
			???1? $ tail -f log/development.log

		  しておくと、p/ppでデバッグする時と同じような感じでデバッグ出力を見る事が出来ます。また、出力結果はlogファイルとして残っているので、後で参照する事もできます。

	3. script/con sole
		  script/con soleは、実行時にデータベースの中身がどうなっているかを知りたい時に非常に便利です。script/con soleコマンドを実行すると、Railsの環境を読み込んだ状態でirbが立ち上がるので、ActiveRecordを使ってfindしたりcreateしたりdestroy_al lしたり、好きなようにDBをいじる事ができます。本当に素晴らしい機能ですね。

	4. script/bre akpointer
		  script/con soleはとても素晴らしいのですが、アクション実行中のsessionの状態を調べたりするのには使えません。そんな時は、script/bre akpointerを使う事ができます。
			???1? $ ./script/breakpointer

		  まず、あらかじめbreakpoint erを立ち上げておきます。続いて、状態を確認したい場所にbreakpoint を仕込みます。
			???1? class FooController &lt; ApplicationController
			???2?   def bar
			???3?     # something
			???4?     breakpoint
			???5?     # something
			???6?   end

		  あとは、ブラウザからアクセスしてbarアクションを実行すると、待ち受けていたbreakpoint erでirbが立ち上がるので、必要な情報を自由に閲覧・操作する事ができます。

	5. better rails debugger
		  script/bre akpointerはとても便利ですが、ステップ実行が出来ないという問題があります。 実際にステップ実行がどうしても必要という場面はあまり無いのですが、あればあったほうが便利ですね。そんな時は、ruby-debug というGemを使います。
		  これは前回のRails勉強会のときにyuguiさんから教えていただいた方法なのですが、まずはruby-debug をインストールします。
			???1? # gem install ruby-debug

		  次に、ブレークポイントを仕込みます。
			???1? class FooController &lt; ApplicationController
			???2?   def bar
			???3?     # something
			???4?     debugger
			???5?     # something
			???6?   end

		  あとは、p/ppデバッグをするときのようにWebrickやMongrel等のWebサーバをフォアグラウンドで立ち上げ、目的のコードが実行されるようにブラウザからアクセスします。
		  すると、Webサーバのプロセス上でdebug.rb（と似たような感じのもの）が立ち上がるので、通常のrubyスクリプトを デバッグする時と同じ要領でデバッグを行う事ができます。

	6. test/autot est
		  Ruby on Railsでは、テスト用のフレームワークがはじめから使える状態になっています。
		  テスト駆動開発では、テストを書いてから実装を書きますが、適当な動作検証用のコードをテストとして書くことで、デバッグに使う事もできます。この際、毎回テストをrakeコマンドから実行するのは時間が掛かるので、ZenTestのautotestを使うのがお勧めです。
		  autotestを使うと、編集されたファイルに関連するテストだけを実行してくれるので、rakeコマンドを実行するよりも軽快なレスポンスが得られます。さらにredgreenを併用すると気分良くデバッグを行う事ができるのでお勧め。

	7. tail -f log/develo pment.log&; autotest

		  最後に、僕が今使っている方法を紹介します。 開発用とは別に一つターミナルを立ち上げて、RAILS_ROOT で以下のコマンドを実行。
			???1? $ tail -f log/development.log&amp;; autotest

		  こうしておくと、プログラムやテストコードを編集した時はautotestの出力が表示され、ブラウザからアクセスした時にはロガーの出力が表示されます。 基本的に両者が同時に行われる事は無いので、一つのターミナルを有効利用する事ができておすすめ。

	というわけで、Railsでデバッグを行う方法の紹介でした。

	posted by {Png} genki on Wed 21 Nov 2007 at 12:38

	Similar Articles:
	+++++++++++++++++

	  1. FireBug for IE? by {Png} genki

	  2. Seven Debugging Tools of Rails by {Png} genki

	  3. Rails 2.0でデバッグをする新しいやり方 by {Png} genki

	  4. Railsのドキュメントが要らなくなる（事もある）方法 by {Png} genki

	  5. XcodeのgdbでObjective-Cのメソッドを呼び出す by {Png} genki





	January 2008 December February

	  * 31

	11th Fri



	Rails 2.0でデバッグをする新しいやり方
	-----------------------

	比嘉さんからciteされたみたいなので、取り急ぎ新しい情報を吐き出しておこうと思います。

	そろろろRailsについて本音を書いてみるか

	  後、デバッグの環境は、Javaに比べて貧弱だと思う。Railsでデバッグをする７つの方法を見てほしい。IDEでソースにブレークポイントを設定(ソースコードを書き換えるのではなく)して、ステップイン、ステップオーバー、メモリの状態を見たりなんてのに慣れているJavaから比べると、すっごく大変に見える。

	喜ばしいことに、Rails 2.0ではruby-debug を使ったdebuggerが正式に採用されました。 これの使い方は非常に簡単です。
	まずは、以下のようにブレークポイントをコード中に書き込みます。
	  ???1? def some_method
	  ???2?   debugger # breakpoint
	  ???3? end

	続いて、Webサーバをデバッグモードで実行します。
	  ???1? % ./script/server -u

	これだけです。あとは、実際にブレークポイントを仕掛けた 場所が実行されるようにすれば、gdbライクなruby-debug の セッションが開始されます。 ruby-debug は、gdbと同じように、ステップ実行、ステップオーバー等の逐次実行を行うインターフェイスがあるので、
	コードの動作を確認しながらデバッグを行うことができます。

	gdbになれていない人には、irbコマンドを実行することで、 その場でirbを立ち上げることができます。これは非常に便利ですね。

	参考までに、debuggerから実行できるコマンドのリストを 載せておきます。
	  ???1? backtrace break catch cont delete display down eval exit finish frame help irb list method next p pp quit reload restart save script set step thread trace undisplay up var where

	See Also

	  *  MOONGIFT: ? Railsのデバッグのお供に「ruby-debug」:オープンソースを毎日紹介

	更新履歴

	  * 2008/01/21 See Alsoに1点追加

	posted by {Png} genki on Fri 11 Jan 2008 at 22:21

	Similar Articles:
	+++++++++++++++++

	  1. FireBug for IE? by {Png} genki

	  2. Railsでデバッグをする７つの方法 by {Png} genki

	  3. Railsのドキュメントが要らなくなる（事もある）方法 by {Png} genki

	  4. Adobe AIRでfdbコマンドラインデバッガを利用する by {Png} satoko

	  5. merbでデバッグする方法 by {Png} genki

-------------------------------------------------------------------------------
Apache
moduleの全コンパイルを実行
enable-mod-shared=allでも外部ライブラリに依存するものはコンパイルされないため、全モジュール込みのコンパイルには以下を利用
	# sudo ./configure --enable-so --enable-modules=all  (下の指定しないときこのmostを利用)
	# sudo ./configure --enable-so --enable-ssl --with-ssl=/usr/local/ssl --enable-modules=most  (下の指定しないときこのmostを利用)
				 --enable-mods-shared="all ssl cache proxy authn_alias mem_cache file_cache charset_lite dav_lock disk_cache"
	# sudo make
	# sudo make install

その他のサンプル
	# sudo ./configure --enable-so --enable-mods-shared=all --enable-ssl
			   --enable-proxy --enable-proxy-connect --enable-proxy-ftp
			   --enable-proxy-http --enable-proxy-ajp --enable-proxy-balancer

※mod_SSL をインストールするには、予めOpenSSLをインストールしておき、./configureに追加で「--with-ssl=/usr/local/ssl」の設定が必要です。す
※configureで下記のエラーがでる場合場
configure: error: ... Error, SSL/TLS libraries were missing or unusable
この場合には、「--with-ssl=/usr/local/src/openssl-0.9.8l」などと、インストール元をしている場合が多い。
	注意）一部のmoduleの名前がバージョンによって、変更されていたりします。
	mod_access.so  廃止    ->   mod_authz_host.so  など
できあがったhttpdに何のmodが同梱されているかを確認してみる。
	/usr/local/apache2/bin/httpd -l





#Heroku
https://devcenter.heroku.com/articles/getting-started-with-rails3
Prepare for Heroku
	 gem install heroku
	 heroku login
	 heroku keys:add /root/.ssh/id_rsa.pub
	 git clone git@heroku.com:tkt-redmine.git

Create application on the Heroku:
	 heroku create tkt-redmine
	 git clone git@heroku.com:tkt-redmine.git
Git add/commit/push to heroku
Migrate and populate database in Heroku:
	 heroku run rake db:migrate
	 heroku run rake redmine:load_default_data
Restart your Redmine server on Heroku:
	 heroku ps:restart
Herokuにアップロードしているssh鍵は以下で確認できる
	$ heroku keys
		  === miamitaka@gmail.com Keys
		  ssh-rsa AAAAB3NzaC...YlRW8P+w== root@localhost.localdomain
		  ssh-rsa AAAAB3NzaC...bqm63tbN3h unicorn@ubuntu
追加していない場合は、以下で追加しておく。公開鍵の方はherokuにアップロードされる。
	$ heroku keys:add
Heroku account を切り替える
	$ heroku accounts:set private
使用中のHeroku accountを確認
	$ heroku accounts
すでにherokuにリポジトリがあり、そこをリモートリポジトリとして追加する場合、Heroku accountを利用している人は、git@heroku.com:hogehoge.gitと指定してはダメで、以下のように指定しなければならない。
	$ git remote add heroku git@heroku.private:hogehoge.git
アカウント追加後、切り替えたアカウントの認証がうまくいかない場合は、
	$ heroku login



HerokuアプリのDBをバックアップ 無料のBasicタイプでは、バックアップできるファイル数の上限は2個。
	#準備
		$ gem update heroku
		$ heroku addons:add pgbackups:basic --app heroku-hello-world
	#実行
		$ heroku pgbackups:capture --app heroku-hello-world
	#一覧を見る
		$ heroku pgbackups --app heroku-hello-world
	#古いarchiveを捨てて新しいファイルでバックアップをする。その場合は、以下のように--expireオプションを付ける。
		$ heroku pgbackups:capture --expire --app heroku-hello-world
	#手動で削除/restore  destroy|restore [archive#Dnumber] を使う。
		$ heroku pgbackups:destroy b003 --app heroku-hello-worldHeroku上でバックアップしたデータを、ローカルにダウンロードするには以下のように実行する。

	Heroku上でバックアップデータを、(1) URL取得 (2)ローカルにダウンロードするには
		$ heroku pgbackups:url b004 --app heroku-hello-world
			[http://s3.amazonaws.com/hkpgbackups/...](http://s3.amazonaws.com/hkpgbackups/...)
		$ curl "http://s3.amazonaws.com/hkpgbackups/..." -o b004.dump
		ブラウザを使って直接アクセスしてもダウンロード可能。

	ダウンロードしたダンプファイルをローカルのPostgreSQLにリストアする。
		$ pg_restore --verbose --clean --no-acl --no-owner -h localhost -U ruedap -d mydb b004.dump
		-hでホスト名、-Uでユーザー名、-dでDB名を指定して、最後にリストアしたいダンプファイルを指定する。
		Railsアプリであれば、config/database.ymlにユーザー名やDB名は指定してあるはず。

Herokuでのprivate環境変数利用
	heroku config:add SOME_VAR_NAME1=somevalue SOME_VAR_NAME2=someothervalue
	.bashrc or .bash_profie:
		export SOME_VAR_NAME1=somevalue ; export SOME_VAR_NAME2=someothervalue
	Ruby code
		ENV['SOME_VAR_NAME1'] ;ENV['SOME_VAR_NAME2']


Herokuアプリ アクセス拒否方法
   　application_controller.rb
		USERS = { "user" => "secret" }
		before_filter :authenticate
		def authenticate
		  authenticate_or_request_with_http_digest("Application") do |name|
			USERS[name]
		  end
		end
	そのほか　heroku_user objectというのもある｡
		https://blog.heroku.com/archives/2008/1/14/heroku_user

dumma
[-tmp-]
[-ecolinux-config-steps-]
[-vim-]
	[-vimScript-]
	[-vimWindowTab-]
[-RubyMainOTL-]
	[-hpricot-]
[-RailsApache-]
	[-railsDebuggers-]
	[-railsDBapi-]
	[-rails_activescafhold-]
	[-hpricot-]#test
#Ruby and RoR on ubuntu/ecolinux
	#WWW::Machanize
		sudo vim  /usr/lib/ruby/gems/1.8/gems/mechanize-0.9.2/lib/www/mechanize.rb
		User Agent aliases takami
			AGENT_ALIASES = {
			'Windows IE 6' => 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)',
			'Windows IE 7' => 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)',
			'Windows Mozilla' => 'Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.4b) Gecko/20030516 Mozilla Firebird/0.6',
			'Mac Safari' => 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/418 (KHTML, like Gecko) Safari/417.9.3',
			'Mac FireFox' => 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.0.3) Gecko/20060426 Firefox/1.5.0.3',
			'Mac Mozilla' => 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.4a) Gecko/20030401',
			'Linux Mozilla' => 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.4) Gecko/20030624',
			'Linux Konqueror' => 'Mozilla/5.0 (compatible; Konqueror/3; Linux)',
			'iPhone' => 'Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1C28 Safari/419.3',

				'SO903i' => 'DoCoMo/2.0 F903i(c100;TJ)',
			#     #
			'Mechanize' => "WWW-Mechanize/#{VERSION} (http://rubyforge.org/projects/mechanize/)"
			}

				  sudo gem1.8 install schof-searchlogic
					#copy/edit config/configgb.yml
					  sudo rake gems:install schof-searchlogic
			  sudo chmod 664 /usr/lib/ruby/gems/1.8/gems/sqlite3-ruby-1.2.4/lib/sqlite3/database.rb
			  sudo chmod 664 /usr/lib/ruby/gems/1.8/gems/sqlite3-ruby-1.2.4/lib/sqlite3/translator.rb
	##Linode	sudo ssh 74.207.240.145
	##Linode	apt-get update	#update package-list
	##Linode	sudo apt-get install gcc make language-pack-ja cron
	#instllation of ruby, rails, and other related tools
	  sudo apt-get install ruby irb rdoc ri
	  or
	##Linode	gem install -v=2.3.2 rails
	#Linode	download latest RubyGEMS from http://rubyforge.org/frs/?group_id=126
		  # wget http://rubyforge.org/frs/download.php/45905/rubygems-1.3.1.tgz
		  tar zxvf rubygems-1.3.1.tgz
		  cd rubygems-1.3.1
		  sudo ruby setup.rb
	#Linode	dpkg-reconfigure locales; update-locale LANG=ja_JP.UTF-8; dpkg-reconfigure tzdata	#tzdata=timezone-config

	  sudo apt-get install libopenssl-ruby
	  sudo gem1.8 install rails -y
		  sudo apt-get install ruby1.8-dev libsqlite3-dev sqlite3
		  sudo gem1.8 install sqlite3-ruby
		  ls -tal  /usr/lib/ruby/gems/1.8/gems/sql*/lib/sql*/
			  sudo chmod 664 /usr/lib/ruby/gems/1.8/gems/sqlite3-ruby-1.2.4/lib/sqlite3/database.rb
			  sudo chmod 664 /usr/lib/ruby/gems/1.8/gems/sqlite3-ruby-1.2.4/lib/sqlite3/translator.rb
	  sudo gem1.8 install rails --version 1.2.6
		  sudo apt-get install mysql-client-5.0
	  rails test
		  ruby test/script/server
		  http://localhost:3000
	#debugger & help-manual installation
		sudo gem1.8 install ruby-debug
		xmpfilter
			sudo gem1.8 install rcodetools
			sudo gem1.8 install fastri
				fastri-server -b; fastri-server -B	;#create TOC & full-text-index @ ~/.fastri-***
				fastri-server       ;#invoke index server, instead you can use -L  option to be offline.
				fri -h;fri -e NKF
	#vim config for Rails
		#vim-rubyインストール手順は既存の設定ファイルやプラグインに影響しないが、心配ならば ~/.vimrc と~./vimを事前バックアップ
		デフォルトのvimはrubyインタフェースを実装していないので、対応版をインストール (upgradeだと依存環境全部更新するのでinstall )
			sudo apt-get install vim-ruby
		vim-rubyのインストール。上記と名前は一緒ですが、今回はrubyのvimのライブラリです。
			sudo gem1.8 install vim-ruby
			sudo vim-ruby-install.rb
				Possible Vim installation directories:
				        1) /home/[yourID]/.vim
				Please select one (or anything else to specify another directory):  ←1を入力
		~/.vimrcを編集。以下を追加
			filetype on
			filetype  plugin indent on

		これで、編集中にCtrl-x Ctrl-oを押すと 補完がききます。オムニ補完っていうらしい。
		キーバインドを変更するには、以下のようにvimrcを設定することで可能です。ここではCtrl-kに割り当てています。
			imap <C-k> <C-x><C-o>
		#" :h competion" to see completion-command, such as C-n, C-p
		~/.rdebugrc作成・編集
			  set autoeval
			  set autolist
			  set autoreload
		~/irbrc作成・編集
			# 補完を有効
			require 'irb/completion'
			module Kernel
				def r(arg)
					puts `refe #{arg}`
				end
				private :r
			end
			class Module
				def r(meth = nil)
					if meth
						if instance_methods(false).include? meth.to_s
							puts `refe #{self}##{meth}`
						else
							super
						end
					else
						puts `refe #{self}`
					end
				end
			end
		#vimbrowse.pl
			cpan LWP::UserAgent
				In addition, the vim plugin synmark.vim is required. This is vim script 1128, available at:
				  http://vim.sf.net/scripts/script.php?script_id=1128
				  cp -r vim/* ~/.vim; cp -r perl ~/.vim; cp -r extra/* ~/.vim;
				  :helptags ~/.vim/doc

				#after installing perldoc
					"bin/vimbrowse.pl
					perldoc vimbrowse.pl
					perldoc browser.pod
					or
					vimbrowse.pl --man
						you@ecolnux:~/.vim$ grep -inRI "ViewSource" . "*.*m"


			#anthy
				http://ore.saizensen.net/にしたがってAnthy再設定
					以下をインストールするパッケージとしてマーク。インストール済みのは再インストール指定。
					*  Synaptic Package Managerを起動
					* “SCIM“|"kasumi"でパッケージを検索

					  scim-anthy
					  scim-bridge-agent
					  scim-bridge-agent-gtk
					  scim-bridge-agent-qt
					  scim-bridge-agent-qt4
					  scim-gtk2-immodule
					  scim-qtimm
					  kasumi
				* 次に、Ubuntuの起動時にSCIMを標準の言語入力インターフェイスとして定義するためにファイル作成 or 編集
					  sudo vi gedit /etc/X11/Xsession.d/74custom-scim_startup
					  74custom-scim_startupa??a?￠a?≪a-?a?¨a??a??a?´a??a?￣a≫\a，?a?Re!?a??e??a??a?a?aa??a?´a??a?￣a?°e|?a?≪a??a??a??a??a??a?
					  export XMODIFIERS="@im=SCIM"
					  export GTK_IM_MODULE="scim"
					  export XIM_PROGRAM="scim -d"
					  export QT_IM_MODULE="scim"
				* OS再起動。init 6
					 ~/irbrc編集
			gems&plugins--------------------------------
				sudo apt-get install libxml2-dev libxslt1-dev git-core subversion
				 sudo gem1.8 install creator
				  sudo gem1.8 install schof-searchlogic
					#copy/edit config/configgb.yml
					  sudo rake gems:install schof-searchlogic
				  sudo gem1.8 install railroad --local
				  sudo gem1.8 install jpmobile-0.0.4.gem --local
					  RAILS_ROOT/config/environment.rb の Rails::Initializer.run do |config| ? end 内に
						config.gem "jpmobile"
						の行を追加する。

					=== pluginとしてインストールする場合
					リリース版:
					  % ./script/plugin install http://jpmobile.rubyforge.org/svn/tags/rel-x.x.x/jpmobile
					  (x.x.xはバージョン)

					開発版:
					  % ./script/plugin install git://github.com/darashi/jpmobile.git


				  sudo gem1.8 install gmailer --local

				[-hpricot-]
				  sudo gem1.8 install hpricot mechanize
					  or sudo gems1.8 install mechanize --local

				ruby script/plugin install http://github.com/two2twelve/onlooker
					git submodule add git://github.com/two2twelve/onlooker.git vendor/plugin_name

				action_mailer_tls プラグインを入れて config/mailer.yml に必要な情報を書いて
				config/initializers/smtp_gmail.rb でactionmailerにオプションをセットするという感じ。
				To install action_mailer_tls the plugin (the old way):

					  1. `./script/plugin install git://github.com/openrain/action_mailer_tls.git -r 'tag v1.0.0'`
					  2. Copy vendor/plugins/action_mailer_tls/sample/smtp_gmail.rb to config/
					  3. Copy vendor/plugins/action_mailer_tls/sample/mailer.yml.sample to config/
					  4. Update the configuration file with your settings

					To install the gem (the preferred way):

					  1. `sudo gem install openrain-action_mailer_tls -s http://gems.github.com`
					  2. `./script/generate action_mailer_tls`
					  3. Copy RAILS_ROOT/config/smtp_gmail.yml.sample to RAILS_ROOT/config/smtp_gmail.yml
					  4. Update the configuration file with your settings

					To (optionally) vendor this gem:

					  1. Add the following entry to config/environment.rb
						* config.gem "openrain-action_mailer_tls", :lib => "smtp_tls.rb", :source => "http://gems.github.com"
					  2. rake gems:unpack


					Testing it out
					--------------

					  1. `./script/generate mailer Notifier hello_world`
					  2. Add the following lines to config/environments/development.rb
						* config.action_mailer.raise_delivery_errors = true
						* config.action_mailer.perform_deliveries = true
						* config.action_mailer.delivery_method = :smtp
					  3. Update the recipients and from fields in app/models/notifier.rb
					  4. `./script/console `


				#Active scaffold
					#rails2.x
						script/plugin install git://github.com/lackac/render_component.git -r rails-edge
						cd /vendor/plugins;
						git clone git://github.com/activescaffold/active_scaffold.git activescaffold
						*normal motion on rails 2.2.x is suspicious. to b checked. ouhave to "git clone" & edit"config/environment.rb":
						#NOTE: not natively compatible with Spree app.
					#rails1.x
						ruby script/plugin install http://activescaffold.googlecode.com/svn/tags/active_scaffold
						ruby script/plugin install http://activescaffold.googlecode.com/svn/tags/active_scaffold -r rails-2.2

				#my_admin
					ruby script/plugin install http://railsmyadmin.googlecode.com/svn/trunk/my_admin/
					#downloading error Plugin not found: ["http://railsmyadmin.googlecode.com/svn/trunk/my_admin/"]

					#Once the plugin is installed, generate the railsMyAdmin files with:
						_Note: this will copy files from the plugin folders into your application folders._
						ruby script/generate my_admin

							  create  app/controllers/my_admin
							  create  app/helpers/my_admin
							  create  app/views/my_admin
							  create  app/views/my_admin/main
							  create  app/views/my_admin/model
							  create  app/views/my_admin/spy
							  create  public/my_admin
							  create  public/my_admin/images
							  create  app/controllers/my_admin/common_controller.rb
							  create  app/controllers/my_admin/main_controller.rb
							  create  app/controllers/my_admin/model_controller.rb
							  create  app/controllers/my_admin/spy_controller.rb
							  create  app/controllers/my_admin/my_admin_tool.rb
							  create  app/helpers/my_admin/common_helper.rb
							  create  app/helpers/my_admin/main_helper.rb
							  create  app/helpers/my_admin/model_helper.rb
							  create  app/helpers/my_admin/spy_helper.rb
							  create  app/views/layouts/my_admin.rhtml
							  create  app/views/my_admin/main/_ajax.rhtml
							  create  app/views/my_admin/main/_includes.rhtml
							  create  app/views/my_admin/main/index.rhtml
							  create  app/views/my_admin/main/main.rhtml
							  create  app/views/my_admin/main/models.rhtml
							  create  app/views/my_admin/model/_form.rhtml
							  create  app/views/my_admin/model/edit.rhtml
							  create  app/views/my_admin/model/list.rhtml

							  create  app/views/my_admin/model/new.rhtml
							  create  app/views/my_admin/spy/_single.rhtml
							  create  app/views/my_admin/spy/index.rhtml
							  create  public/my_admin/my_admin.css
							  create  public/my_admin/my_admin.js
							  create  public/my_admin/images/destroy.png
							  create  public/my_admin/images/edit.png
							  create  public/my_admin/images/home.png
							  create  public/my_admin/images/new.png
							  create  public/my_admin/images/ajax_indicator.gif


					#Next, copy the following code snippet into the bottom of your environment.rb file:
						## MY ADMIN CONFIG
						require 'my_admin/my_admin_tool'
						# If you only want certain models to be available to RailsMyAdmin, set :all_models to false and specify the desired models in MY_ADMIN_MODELS
						MY_ADMIN_GLOBALS  = {:all_models => true, :confirm_destroy => false}
						# Uncomment this next line if you set :all_models to false above.
						#MY_ADMIN_MODELS  = [Page, Comment, User]
						MY_ADMIN_AUTH     = Proc.new { |c| c.send("admin_logged_in?") }
	#rails plugins to install
		ruby script/plugin install http://activescaffold.googlecode.com/svn/tags/active_scaffold -r rails-2.2
		ruby ruby script/plugin install http://railsmyadmin.googlecode.com/svn/trunk/my_admin/
		ruby script/plugin install http://activescaffold.googlecode.com/svn/tags/active_scaffold
		ruby script/plugin install http://code.openrain.com/rails/action_mailer_tls/
		ruby script/plugin install http://svn.plasticrain.com/projects/plugins/mysql_backup/
		ruby script/plugin install http://github.com/two2twelve/onlooker.git
		git submodule add git://github.com/two2twelve/onlooker.git vendor/plugin_name
		ruby script/plugin install http://svn.robertrevans.com/gems/creator/
		gem install creator
		script/plugin install svn://rubyforge.org/var/svn/betternestedset/tags/stable/betternestedset
	#WWW::Machanize
		sudo vim  /usr/lib/ruby/gems/1.8/gems/mechanize-0.9.2/lib/www/mechanize.rb
		User Agent aliases takami
			AGENT_ALIASES = {
			'Windows IE 6' => 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)',
			'Windows IE 7' => 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)',
			'Windows Mozilla' => 'Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.4b) Gecko/20030516 Mozilla Firebird/0.6',
			'Mac Safari' => 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/418 (KHTML, like Gecko) Safari/417.9.3',
			'Mac FireFox' => 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.0.3) Gecko/20060426 Firefox/1.5.0.3',
			'Mac Mozilla' => 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.4a) Gecko/20030401',
			'Linux Mozilla' => 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.4) Gecko/20030624',
			'Linux Konqueror' => 'Mozilla/5.0 (compatible; Konqueror/3; Linux)',
			'iPhone' => 'Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1C28 Safari/419.3',

				'SO903i' => 'DoCoMo/2.0 F903i(c100;TJ)',
			#     #
			'Mechanize' => "WWW-Mechanize/#{VERSION} (http://rubyforge.org/projects/mechanize/)"
			}

	#Heroku-----------------------------------------------------------------------------------------------------------------
			 sudo gem1.8 install heroku
			 sudo gem1.8 install herokugarden
				 ssh-keygen -t rsa
					Generating public/private rsa key pair.
					Enter file in which to save the key (/home/you/.ssh/id_rsa):
					Created directory '/home/you/.ssh'.
					Enter passphrase (empty for no passphrase):
					Enter same passphrase again:
					Your identification has been saved in /home/you/.ssh/id_rsa.
					Your public key has been saved in /home/you/.ssh/id_rsa.pub.
					The key fingerprint is:
					e6:22:07:46:2e:48:1a:48:14:65:76:a4:3e:bd:30:ea you@ecolnux
					The key's randomart image is:
					+--[ RSA 2048]----+
					|.+o+.o           |
					|o o o            |
					|o. ..            |
					|oo.o.            |
					|o .=+.  S        |
					|  .o+..o         |
					| .  ..o .        |
					|.    o .         |
					| E               |
					+-----------------+

				heroku keys:add
				git init
				git add .
				git commit -m "new app"
				heroku create	/	herokugarden create

					Enter your Heroku credentials.
					Email: some_body@gmail.com
					Password:
					Uploading ssh public key /home/you/.ssh/id_rsa.pub
					Created http://untitled-f2fa5a.herokugard1en.com/ | git@herokugarden.com:untitled-f2fa5a.git
						Git remote heroku added

					Created http://cold-wind-71.heroku.com/ | git@heroku.com:cold-wind-71.git

				git push heroku master

					Enter passphrase for key '/home/you/.ssh/id_rsa':
					Counting objects: 686, done.
					Compressing objects: 100% (606/606), done.
					Writing objects: 100% (686/686), 1.44 MiB | 3 KiB/s, done.
					Total 686 (delta 60), reused 0 (delta 0)

					-----> Heroku receiving push
					-----> Rails app detected
						   Compiled slug size is 1.3MB
					-----> Launching........ done
						   App deployed to Heroku

					.To git@heroku.com:cold-wind-71.git
					 * [new branch]      master -> master

				heroku rake db:migrate
					error-->edit config/environment.rb
				heroku open



				#repeat
					git push heroku

				#heroku&git commande---------------------------------------------------------------------------------------------
					  503  heroku keys
						you@ecolnux:~/RoRapps/takamisoft2$ heroku keys
						=== 1 key for some_body@gmail.com
						ssh-rsa AAAAB3NzaC...vF7ojbsQ== you@ecolnux

					  504  heroku list
						you@ecolnux:~/RoRapps/takamisoft2$ heroku list
						radiant-journey-14
						gentle-planet-73

						heroku destroy [--app appname]
							heroku destroy --app gentle-planet-73

					  505  heroku info [appnameIntheList]
						you@ecolnux:~/RoRapps/takamisoft2$ heroku info radiant-journey-14
						=== radiant-journey-14
						Web URL:        http://radiant-journey-14.heroku.com/
						Git Repo:       git@heroku.com:radiant-journey-14.git
						Collaborators:  some_body@gmail.com
						you@ecolnux:~/RoRapps/takamisoft2$ heroku info gentle-planet-73
						=== gentle-planet-73
						Web URL:        http://gentle-planet-73.heroku.com/
						Git Repo:       git@heroku.com:gentle-planet-73.git
						Collaborators:  some_body@gmail.com

					 git remote add heroku git@heroku.com:appname.git

						   git-remote [-v | --verbose]
						   git-remote add [-t <branch>] [-m <master>] [-f] [--mirror] <name> <url>
						   git-remote rm <name>
						   git-remote update [group]
						   git-remote show [-n] <name>
						   git-remote prune [-n | --dry-run] <name>
					usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [-p|--paginate|--no-pager] [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE] [--help
					] COMMAND [ARGS]

					The most commonly used git commands are:
					   add        Add file contents to the index
					   bisect     Find the change that introduced a bug by binary search
					   branch     List, create, or delete branches
					   checkout   Checkout a branch or paths to the working tree
					   clone      Clone a repository into a new directory
					   commit     Record changes to the repository
					   diff       Show changes between commits, commit and working tree, etc
					   fetch      Download objects and refs from another repository
					   grep       Print lines matching a pattern
					   init       Create an empty git repository or reinitialize an existing one
					   log        Show commit logs
					   merge      Join two or more development histories together
					   mv         Move or rename a file, a directory, or a symlink
					   pull       Fetch from and merge with another repository or a local branch
					   push       Update remote refs along with associated objects
					   rebase     Forward-port local commits to the updated upstream head
					   reset      Reset current HEAD to the specified state
					   rm         Remove files from the working tree and from the index
					   show       Show various types of objects
					   status     Show the working tree status
					   tag        Create, list, delete or verify a tag object signed with GPG


#summary of spree new app local generation
	spree [railsappname] -d mysql
	mysqladmin create [dbname] -u root -p
	cd [railsappname]
	#edit config/database.yml
	#paste /vendor/lib/smtp_tls.rb for ruby1.8.7 compatibility bug
	rake db:bootstrap
	rake db:migrate
	sudo ruby script/server -p 80 -u
	#login to http://localhost/admin/products/ and edit "Available on:" date making it to be the PAST date
			Email [spree@example.com]:
			Password [spree]:
#spree normal installaton )----------------------------------------------------
	#NG: gem1.8 update spree
		#version 0.9.1 rubygemへの依存度やバージョン管理がややこしくて、updateはおろかinstallすらむずかしい
		#gem install spreeで通信応答せず。git cloneでもってきて以下をやるがだめ。
		#製作者たちにしかupdate/nstallできないソフトはパッケージとは言えず特注システムでしかない。
			sudo gem1.8 update authlogic
			sudo gem1.8 install chriseppstein-compass
			sudo gem1.8 install rsl-stringex
			sudo gem1.8 install javan-whenever
			sudo gem1.8 install searchlogic
			#mv config/database.yml.sample config/database.yml
			#vim config/environment.rb ":
				config.gem 'haml', :version => '>=2.2.0'
			sudo rake db:migrate
			rake db:admin:create

	#かりにspreeのアンインストールコマンドが充実していたら、以下の2chnrgとの統合も検討の余地が出てくる：
		#rename 2chnrg
		#spree -s 2chnrg -d mysql
		cd 2chnrg
		#migrate config/database.yml
		#paste /vendor/lib/smtp_tls.rb for ruby1.8.7 compatibility bug
		rake db:bootstrap
		rake db:migrate
#spree on heroku (failed)----------------------------------------------------
		sudo gem1.8 sources -a http://gems.github.com
		cd -
		git clone git://github.com/schof/spree.git spree
		rake -h;rails -v
		vim config/boot.rb
		vim lib/tasks/release.rake
		rake gems:install
		cd spree/config/
			cp database.yml.example database.yml
			#edit config/boot.rb line58 as follows
				load_rails("2.2.2")  # note: spree requires rails 2.2.2 (change at your own risk)
			touch #RAILS_ROOT/lib/smtp_gmail.rb
			#vim smtp_gmail.rb above
			#vim database.yml
		#rake gems:install
		grep -R 1.15 *
		vim config/environment.rb
		sudo gem1.8 install has_many_polymorphs
		sudo gem1.8 install highline --version 1.4.0
		sudo gem1.8 install mini_magick
		sudo gem1.8 install tlsmail
			cp -R calendar_date_select-1.15/ /home/you/RoRapps/spree/spree/vendor/gems/
			cp -R authlogic-2.0.9/ /home/you/RoRapps/spree/spree/vendor/gems/
			cp -R activemerchant-1.4.1/ /home/you/RoRapps/spree/spree/vendor/gems/
			cp -R has_many_polymorphs-2.13/ /home/you/RoRapps/spree/spree/vendor/gems/
			cp -R highline-1.4.0/ /home/you/RoRapps/spree/spree/vendor/gems/
			cp -R mini_magick-1.2.3/ /home/you/RoRapps/spree/spree/vendor/gems/
			cp -R tlsmail-0.0.1/ /home/you/RoRapps/spree/spree/vendor/gems/
		#install postgresql
			sudo apt-get install postgresql postgresql-client postgresql-contrib pgadmin3
			# PostgreSQLe¨-aR?a?

				# passwd postgres ##postgresa?|a??a?¶a??a?Ra??a?1a?￣a??a??a??e¨-aR?a?
				# su postgres
				$ psql template1
					template1=# alter user postgres with password '******'; ## ******a?￣e?ca??a?aa??a?1a?￣a??a??a??e¨-aR?a?
					template1=# \q ## \qa?§cμ?ao?a?
				$ createuser -AdPE hoge ## hogea?￣e?ca??a?aa，e?￢a?|a??a?¶a??a?，a?a，e?￢a?|a??a?¶a?，a?Ra??a??a??a??a??a?1a??a??a¨ce??e¨-aR?a?
				$ vi /etc/postgresql/8.3/main/postgresql.conf
					listen_addresses = 'localhost'
					a??
					listen_addresses = '*' ##'*'a?，a??a?´a?
				$ vi /etc/postgresql/8.3/main/pg_hba.conf
					##a≫\a，?a??a??a?!a??a?≪a?a，?e?¨a?，e??a??a?192.168.11.1a?￣a??e?aa??a??a??a?￣a??a?￣c?°a￠?a?，a?
					local   all         all                               trust
					host    all         all  192.168.11.1 255.255.255.255  trust
					host    all         all  0.0.0.0     0.0.0.0          password crypt

				$ exit
			# /etc/init.d/postgresql-8.3 restart
		edit database.yml configuration:

			development:
			adapter: postgresql
			host: localhost
			port: 5432
			database: postgres
			username: postgres
			password: [your-password]


		rake db:bootstrap
			Create the admin user (press enter for defaults).
			Email [spree@example.com]:
			Password [spree]:
			Load Sample Data? [y]:

			Sample products have been loaded into to the store

			Finished.

#adva-cms Know-how-----------------------------------------------------------------------------------------------------------------
		#installation: follow the README.doc
		rake adva:install:core
		sudo rake adva:install engines=adva_theme,adva_assets
		sudo rake db:migrate
		#engines
			#adva-wiki
				post comment[s]
				MethodError in CommentsController#create
				undefined method `wiki_content_path' for #<CommentsController:0xb5163c34>
				RAILS_ROOT: /home/you/RoRapps/2chnrg
				Application Trace | Framework Trace | Full Trace
		#you@ecolnux:~/RoRapps/2chnrg$ rake adva:uninstall engines=blog

		#buggy
			redirection to previous page after login page does not work well. it makes a user being rejected login. but turns out successrful login only when the user goes to the root directory(ie., top page of the website)

#rails2.3.2 最後リリースのADVA0.2.0インストール
	rails 2ch2 -m  /home/you/RoRapps/svenfuchs-adva_cms-ef1f561/templates/adva-cms.0.2.0.rb
#rails2.3.2 最後リリースのADVA0.2.0 で めだったplugin
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_cms/vendor/plugins/safemode/README.markdown
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_cms/vendor/plugins/has_options/lib/has_options.rb
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_cms/vendor/plugins/has_filter/lib/has_filter/filter.rb
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_cms/vendor/plugins/has_filter/lib/has_filter.rb
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_cms/vendor/plugins/filtered_column/README
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_calendar/vendor/plugins/later_dude/README
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_newsletter/vendor/gems/cronedit-0.3.0/lib/cronedit.rb
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_spam/vendor/plugins/viking/Readme.txt

#mySQL
	#Linode	sudo apt-get install mysql-server mysql-client libmysqlclient15-dev libmysql-ruby1.8 -y
		you@ecolnux:~/RoRapps/2chnrg/lib$ ps -ef |grep sql
		root      3300     1  0 17:29 ?        00:00:00 /bin/sh /usr/bin/mysqld_safe
		mysql     3446  3300  0 17:29 ?        00:00:01 /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --user=mysql --pid-file=/var/run/mysqld/mysqld.pid --skip-external-locking --port=3306 --socket=/var/run/mysqld/mysqld.sock
		root      3447  3300  0 17:29 ?        00:00:00 logger -p daemon.err -t mysqld_safe -i -t mysqld
	#Linode >	mysqladmin create r2chnn -u root -p
	#cf.	rails -d mysql [pj-name]
	#edit config/database.yml
		development:
			adapter: sqlite3
			database: db/development.sqlite3
			pool: 5
			timeout: 5000
		dev:
			adapter: mysql
			database: r2chnn
			username: "root"
			password: "alison"
			timeout: 5000
			socket: /var/run/mysqld/mysqld.sock
			#encoding: utf8
	cp config/environment/development.rb config/environment/dev.rb
	>	mysql -u root -p
		 show databases;
		 use [DBname];
		 show tables;
		 describe [table-name];
		\h	help
		\q	quit
		status

	mysql> select * from users ;
		+----+------------+-----------+----------------------+----------+-------+-----------+------------------------------------------+------------------------------------------+------+-------+---------+-------------+-----------+------------------+-----------+---------------------+---------------------+---------------------+------------+
		| id | first_name | last_name | email                | homepage | about | signature | password_hash                            | password_salt                            | ip   | agent | referer | remember_me | token_key | token_expiration | anonymous | created_at          | updated_at          | verified_at         | deleted_at |
		| +----+------------+-----------+----------------------+----------+-------+-----------+------------------------------------------+------------------------------------------+------+-------+---------+-------------+-----------+------------------+-----------+---------------------+---------------------+---------------------+------------+
		| |  1 | some_body | NULL      | some_body@gmail.com | NULL     | NULL  | NULL      | d9e778c53529bcf488846230be0f6bf6f3a922d4 | 9ee11fa50003a673b6c783263a61770f37254b55 | NULL | NULL  | NULL    | NULL        | NULL      | NULL             |         0 | 2009-07-25 09:19:17 | 2009-07-25 09:19:17 | 2009-07-25 09:19:16 | NULL       |
		| +----+------------+-----------+----------------------+----------+-------+-----------+------------------------------------------+------------------------------------------+------+-------+---------+-------------+-----------+------------------+-----------+---------------------+---------------------+---------------------+------------+
		| 1 row in set (0.00 sec)
		|

	 MySQL インポートとエクスポート（テキストデータ） Submitted by sasaki on 月曜, 2007-01-15 15:44
		 #erace all existing rows
			 mysql -u root -p
			 use r2chnn;
			 delete from kokuekis;
		 ■テキストTAB形式でのエクスポート
			  データベースmydbのempテーブルからタブ区切りのテキストデータでエクスポートする。
				 $ sudo mysql -B --skip-column-names -D mydb -e 'select * from emp;' -u tanaka -p > out.txt
				 $ sudo mysql -B --skip-column-names -D r2chnn -e 'select * from kokuekis;' -u root -p > test.txt
			  --skip-column-namesを削除して実行すれば、カラム名も出力されるので便利。
		 #vi replace mysq-export&import
			%s/】\t\t/】\t\t2009\//gc
			%s/】\t\t2009\/03/】\t\t2010\/03/gc
			%s/】\t\t2009\/02/】\t\t2010\/02/gc
			%s/】\t\t2009\/01/】\t\t2010\/01/gc
				#置換もれがあるのでvi上でチェック
		  #文字化け対策
		  ■テキストデータのインポート mysqlimport編
			  データベースmydbのempテーブルにテキストデータをインポートする。
				  tar cvf tbl.tar *tbl.*; #<----sftp with binmode
				  SHOW VARIABLES LIKE 'character_set%';
						SHOW VARIABLES LIKE 'character_set%';
						+--------------------------+----------------------------+
						| Variable_name            | Value                      |
						| +--------------------------+----------------------------+
						| | character_set_client     | latin1                     |
						| | character_set_connection | latin1                     |
						| | character_set_database   | utf8                       |
						| | character_set_filesystem | binary                     |
						| | character_set_results    | latin1                     |
						| | character_set_server     | latin1                     |
						| | character_set_system     | utf8                       |
						| | character_sets_dir       | /usr/share/mysql/charsets/ |
						| +--------------------------+----------------------------+
						? 解決方法その3 root になれるなら MySQL のデフォルト文字コードを UTF-8 に変更する。 /etc/my.cnf か /etc/mysql/my.cnf を開き（ない場合は mysql が起動するときの設定ファイルを探す）、MySQLのデフォルト文字コードを UTF-8 に変更する。
						# vi /etc/my.cnf
						[mysqld]
						default-character-set = utf8
						[mysql]
						default-character-set = utf8
						[mysqldump]
						default-character-set = utf8
				  $ sudo mysqlimport --local mydb emp.txt -u root -p
				  $ sudo mysqlimport --local r2chnn kokuekis.tbl.tsv -u root -p
				 select * from kokuekis where sbm > 900;
			 mydb：　データベース名
			 emp.sql：　テーブル名.sql（中身はテキストタブのデータ）
			 テキストエディタやExcel等で、TEXT-TAB形式で書き出した後、「テーブル名.txt」へ変更する
			 --localを指定しないと、「Access denied」エラーが発生する。
#文字化けutf-8
	解決方法その3 root になれるなら MySQL のデフォルト文字コードを UTF-8 に変更する。 /etc/my.cnf か /etc/mysql/my.cnf を開き（ない場合は
		mysql が起動するときの設定ファイルを探す）、MySQLのデフォルト文字コードを UTF-8 に変更する。
		# vi /etc/my.cnf
		[mysqld]
		default-character-set = utf8
		[mysql]
		default-character-set = utf8
		[mysqldump]
		default-character-set = utf8

#ruby/RAILS COMMAND-----------------------------------------------------------------------------------------------------------------
	**create "rails test" add for troubleshooting such as installation of plugins.
	*never use "new/create/destroy/list/index/update/edit/" for controller/model/action name. otherwise Rails router get confused.
	*don't use "_" character for DB table/coolumn name. this way U can easily tell "_" of helper/plugin method name.
	*WiFI connection must check every 10 minutes before every donloading.
	*search "How to deploy [frameforkname/gemsname\pluginname] to Heroku" first of all.
	*install framefowk/gem/plugin  before creating project assuming deployment onto Heroku
	*don't read japanese docment until you stuck into a trouble. it's waste of time.
	#
	plugin remove [pluginname]	=	uninstall [pluginname]
	To obtain a list of other [pluginname]
	rake tasks:	=	rake -T [pluginname]
		you@ecolnux:~/RoRapps/2chnrg$ rake --tasks
		(in /home/you/RoRapps/2chnrg)
		rake adva:assets:copy                     # Copy public assets from plugins to public/
			rake adva:install                         # install selected adva_cms engines (pick some with engines=all plugins=all or engines=name1,name...
			rake adva:install:all                     # install all adva_cms engines and plugins
			rake adva:install:core                    # install adva_cms core engines
			rake adva:uninstall                       # uninstall selected adva_cms engines (pick some with engines=all plugins=all or engines=name1,na...
			rake adva:uninstall:all                   # uninstall all adva_cms engines and plugins
			rake adva:uninstall:core                  # uninstall adva_cms core engines
		rake db:abort_if_pending_migrations       # Raises an error if there are pending migrations
		rake db:charset                           # Retrieves the charset for the current environment's database
		rake db:collation                         # Retrieves the collation for the current environment's database
		rake db:create                            # Create the database defined in config/database.yml for the current RAILS_ENV
		rake db:create:all                        # Create all the local databases defined in config/database.yml
		rake db:migrate:prepare                   # Copy migrations from plugins to db/migrate
		rake db:migrate                           # Migrate the database through scripts in db/migrate and update db/schema.rb by invoking db:schem...
		rake db:drop                              # Drops the database for the current RAILS_ENV
			rake db:drop:all                          # Drops all the local databases defined in config/database.yml
			rake db:migrate:reset                     # Resets your database using your migrations for the current environment
			rake db:reset                             # Drops and recreates the database from db/schema.rb for the current environment.
		rake db:fixtures:identify                 # Search for a fixture given a LABEL or ID.
		rake db:fixtures:load                     # Load fixtures into the current environment's database.
		rake db:rollback                          # Rolls the schema back to the previous version.
			rake db:migrate:down                      # Runs the "down" for a given migration VERSION.
			rake db:migrate:up                        # Runs the "up" for a given migration VERSION.
			rake db:migrate:redo                      # Rollbacks the database one migration and re migrate up.
			rake db:version                           # Retrieves the current schema version number
		rake db:schema:dump                       # Create a db/schema.rb file that can be portably used against any DB supported by AR
		rake db:schema:load                       # Load a schema.rb file into the database
		rake db:sessions:clear                    # Clear the sessions table
		rake db:sessions:create                   # Creates a sessions migration for use with ActiveRecord::SessionStore
		rake db:structure:dump                    # Dump the database structure to a SQL file
		rake db:test:clone                        # Recreate the test database from the current environment's database schema
		rake db:test:clone_structure              # Recreate the test databases from the development structure
		rake db:test:load                         # Recreate the test database from the current schema.rb
		rake db:test:prepare                      # Check for pending migrations and load the test schema
		rake db:test:purge                        # Empty the test database
		rake deploy                               # Release the website and new gem version
		rake doc:app                              # Build the RDOC HTML Files
			rake doc:clobber_app                      # Remove rdoc products
			rake doc:clobber_plugins                  # Remove plugin documentation
			rake doc:clobber_rails                    # Remove rdoc products
			rake doc:guides                           # Generate Rails guides
			rake doc:plugins                          # Generate documentation for all installed plugins
			rake doc:plugins:action_mailer_tls        # Generate documentation for the action_mailer_tls plugin
			rake doc:plugins:adva_activity            # Generate documentation for the adva_activity plugin
			rake doc:plugins:adva_assets              # Generate documentation for the adva_assets plugin
			rake doc:plugins:adva_blog                # Generate documentation for the adva_blog plugin
			rake doc:plugins:adva_calendar            # Generate documentation for the adva_calendar plugin
			rake doc:plugins:adva_cells               # Generate documentation for the adva_cells plugin
			rake doc:plugins:adva_cms                 # Generate documentation for the adva_cms plugin
			rake doc:plugins:adva_comments            # Generate documentation for the adva_comments plugin
			rake doc:plugins:adva_context_templates   # Generate documentation for the adva_context_templates plugin
			rake doc:plugins:adva_fckeditor           # Generate documentation for the adva_fckeditor plugin
			rake doc:plugins:adva_forum               # Generate documentation for the adva_forum plugin
			rake doc:plugins:adva_google_analytics    # Generate documentation for the adva_google_analytics plugin
			rake doc:plugins:adva_meta_tags           # Generate documentation for the adva_meta_tags plugin
			rake doc:plugins:adva_newsletter          # Generate documentation for the adva_newsletter plugin
			rake doc:plugins:adva_photos              # Generate documentation for the adva_photos plugin
			rake doc:plugins:adva_post_ping           # Generate documentation for the adva_post_ping plugin
			rake doc:plugins:adva_rbac                # Generate documentation for the adva_rbac plugin
			rake doc:plugins:adva_spam                # Generate documentation for the adva_spam plugin
			rake doc:plugins:adva_themes              # Generate documentation for the adva_themes plugin
			rake doc:plugins:adva_url_history         # Generate documentation for the adva_url_history plugin
			rake doc:plugins:adva_user                # Generate documentation for the adva_user plugin
			rake doc:plugins:adva_wiki                # Generate documentation for the adva_wiki plugin
			rake doc:rails                            # Build the RDOC HTML Files
			rake doc:reapp                            # Force a rebuild of the RDOC files
			rake doc:rerails                          # Force a rebuild of the RDOC files
		rake gems                                 # List the gems that this rails application depends on
			rake gems:build                           # Build any native extensions for unpacked gems
			rake gems:install                         # Installs all required gems.
			rake gems:refresh_specs                   # Regenerate gem specifications in correct format.
			rake gems:unpack                          # Unpacks all required gems into vendor/gems.
			rake gems:unpack:dependencies             # Unpacks all required gems and their dependencies into vendor/gems.
			rake install_gem_no_doc                   # Install the package as a gem, without generating documentation(ri/rdoc)
		rake local_deploy                         # Runs tasks website_generate and install_gem as a local deployment of the gem
		rake log:clear                            # Truncates all *.log files in log/ to zero bytes
		rake manifest:refresh                     # Recreate Manifest.txt to include ALL files
		rake middleware                           # Prints out your Rack middleware stack
		rake notes                                # Enumerate all annotations
			rake notes:custom                         # Enumerate a custom annotation, specify with ANNOTATION=WTFHAX
			rake notes:fixme                          # Enumerate all FIXME annotations
			rake notes:optimize                       # Enumerate all OPTIMIZE annotations
			rake notes:todo                           # Enumerate all TODO annotations
		rake paperclip:clean                      # Cleans out invalid attachments.
			rake paperclip:refresh                    # Refreshes both metadata and thumbnails.
			rake paperclip:refresh:metadata           # Regenerates content_type/size metadata for a given CLASS (and optional ATTACHMENT).
			rake paperclip:refresh:thumbnails         # Regenerates thumbnails for a given CLASS (and optional ATTACHMENT).
		rake rails:freeze:edge                    # Lock to latest Edge Rails, for a specific release use RELEASE=1.2.0
			rake rails:freeze:gems                    # Lock this application to the current gems (by unpacking them into vendor/rails)
			rake rails:template                       # Applies the template supplied by LOCATION=/path/to/template
			rake rails:unfreeze                       # Unlock this application from freeze of gems or edge and return to a fluid use of system gems
		rake rails:update                         # Update both configs, scripts and public/javascripts from Rails
			rake rails:update:application_controller  # Rename application.rb to application_controller.rb
			rake rails:update:configs                 # Update config/boot.rb from your current rails install
			rake rails:update:generate_dispatchers    # Generate dispatcher files in RAILS_ROOT/public
			rake rails:update:javascripts             # Update your javascripts from your current rails install
			rake rails:update:scripts                 # Add new scripts to the application script/ directory
		rake routes                               # Print out all defined routes in match order, with names.
		rake secret                               # Generate a crytographically secure secret key.
		rake stats                                # Report code statistics (KLOCs, etc) from the application
		rake test                                 # Run all unit, functional and integration tests
			rake test:benchmark                       # Run tests for benchmarkdb:test:prepare / Benchmark the performance tests
			rake test:functionals                     # Run tests for functionalsdb:test:prepare / Run the functional tests in test/functional
			rake test:integration                     # Run tests for integrationdb:test:prepare / Run the integration tests in test/integration
			rake test:plugins                         # Run tests for pluginsenvironment / Run the plugin tests in vendor/plugins/*/**/test (or specify...
			rake test:profile                         # Run tests for profiledb:test:prepare / Profile the performance tests
			rake test:recent                          # Run tests for recentdb:test:prepare / Test recent changes
			rake test:uncommitted                     # Run tests for uncommitteddb:test:prepare / Test changes since last checkin (only Subversion and...
			rake test:units                           # Run tests for unitsdb:test:prepare / Run the unit tests in test/unit
		rake time:zones:all                       # Displays names of all time zones recognized by the Rails TimeZone class, grouped by offset.
		rake time:zones:local                     # Displays names of time zones recognized by the Rails TimeZone class with the same offset as the...
		rake time:zones:us                        # Displays names of US time zones recognized by the Rails TimeZone class, grouped by offset.
		rake tmp:cache:clear                      # Clears all files and directories in tmp/cache
			rake tmp:clear                            # Clear session, cache, and socket files from tmp/
			rake tmp:create                           # Creates tmp directories for sessions, cache, sockets, and pids
			rake tmp:pids:clear                       # Clears all files in tmp/pids
			rake tmp:sessions:clear                   # Clears all files in tmp/sessions
			rake tmp:sockets:clear                    # Clears all files in tmp/sockets
		rake website                              # Generate and upload website files
		rake website_generate                     # Generate website files
		rake website_upload                       # Upload website files to rubyforge
		rake xss_terminate                        # Given MODELS=Foo,Bar,Baz find all instances in the DB and save to sanitize existing records

	* phpMyAdmin で depot_development という名のデータベースを作っておき、RadRails で新規 Rails プロジェクトとして depot を作成
	* depot/config/database.yml ファイルを開いてデータベースのユーザー名、パスワード、ソケットなどを適切に設定
	Instead of using the command
	work$ rails exchange
	use the command
	work$ rails -d mysql exchange

	#basic steps of making rails page
		What has been done so far?
		  * Installed Rails
			#gem install rails --include-dependencies
		  * Created an aplication with the rails command
			$rails exchange
		  * Created the databases for the application with the rake command
			$ rake db:create:all
		  * Used the script/generate command to create the scaffolding for the application
			$ ruby script/generate scaffold Movie title:string description:text one_sheet_url:string
		  * Created the database table using the generated migration file
			$ rake db:migrate
		  * Started the webserver with the script/server command
			$ ruby script/server
		  * Pointed our web browser to the application and started entering and editing data
			http://localhost:3000/movies

		0)	note that rails url generatio follows "/C[controller-name]/V[view & method/action-name]/Mo[model & filetype parameter-name]/" format.
		1)	create "/app/controllers/[contoller-name]_controller.rb
				ruby script/generte controller [contoller-name] [optional:method/action-name]

		3)	if you need a DB table to be called from rhtml, perform followings in advance:
				ruby script/generte model [model-name]
				#edit app/models/[model-name].rb to add columns ant its attribution.
					t.column	:title	:string
					t.column	:description	:text
					...
				rake db:migrate

		3-2)if you want add/create something new in DB, do followings:
				ruby script/generte migration (add_[model-name]|create_[model-name])

		4*)	if you predict 4) above and also hence need 1)~3) above at onec, try "scaffold" as followings:
			in case of rails 1.2.x,
				CRUD methods/actions namely "_form, list, show, new, edit" and its views is generated automatically:
					ruby script/generte scaffold [model-name]  [controller-name]
			in case of rails 2.x.x,
				CRUD methods/actions namely "index, show, new, edit" and its views is generated automatically:
					ruby script/generate scaffold Movie title:string description:text one_sheet_url:string
					ruby script/generate scaffold News genre:string ndc1:string ndc2:string int_res:integer int_sbm:integer int_res:integer int_rating:integer txt_title:text txt_href:text kisha:string src1:string src2:string src3:string

						description:text one_sheet_url:string
						route map.resources :movies
						*create app/controllers/movies_controller.rb
						 :
						create app/views/movies/index.html.erb
						create app/views/movies/show.html.erb
						create app/views/movies/new.html.erb
						create app/views/movies/edit.html.erb
						create app/views/layouts/movies.html.erb
						create app/helpers/movies_helper.rb
						create public/stylesheets/scaffold.css dependency model
						 :
						*create app/models/movie.rb
						create db/migrate/001_create_movies.rb
						 :
						create test/unit/movie_test.rb
						create test/fixtures/movies.yml
						create test/functional/movies_controller_test.rb
						 :
					Description:
						Scaffolds an entire resource, from model and migration to controller and
						views, along with a full test suite. The resource is ready to use as a
						starting point for your RESTful, resource-oriented application.

						Pass the name of the model (in singular form), either CamelCased or
						under_scored, as the first argument, and an optional list of attribute pairs.

						Attribute pairs are column_name:sql_type arguments specifying the
						model's attributes. Timestamps are added by default, so you don't have to
						specify them by hand as 'created_at:datetime updated_at:datetime'.

						You don't have to think up every attribute up front, but it helps to
						sketch out a few so you can start working with the resource immediately.

						For example, 'scaffold post title:string body:text published:boolean'
						gives you a model with those three attributes, a controller that handles
						the create/show/update/destroy, forms to create and edit your posts, and
						an index that lists them all, as well as a map.resources :posts
						declaration in config/routes.rb.

						If you want to remove all the generated files, run
							'script/destroy scaffold ModelName'.

					Examples:
						`./script/generate scaffold post`
						`./script/generate scaffold post title:string body:text published:boolean`
						`./script/generate scaffold purchase order_id:integer amount:decimal`

		5)	define method/action in "/app/controllers/[controller-name].rb
				you may process content-type with "format.(Rhtml|Rxml|yaml) in method/action.,
				and map them by ":id.:format" in "routes.rb"
		6)	embed helper-ruby-script code in "/app/views/[contoller-name]/[method/action-name].(Rhtml|Rxmls|erb|rjs)"
		    which was created by step 1) above

		x)	other
				rake doc:app
				ruby script/console
				ruby script/plugin list
				'script/destroy scaffold ModelName'.
				gems を使ってインストールしたほとんどのコマンドは gem 内のコードを実行するラッパーである。
				それらのコマンドでは、左右にアンダースコアを付加したバージョン番号を最初の引数として与えて実行することにより、gem のバージョンを指定することができる。
					rails _1.2.6_ my_rails_project
				#active form? session is not valid for mobile phone.
					rake db:sessions:create	; rake:db:migrate;	=> create session DBtable
					rake db:sessions:clear	; rake:db:migrate;	=> clear  session DBtable
				538  rake db:rollback
				539  ruby script/destroy scaffold News
				(erase all data & reqreates tables from schema)
					rake db:reset
				541  ruby script/generate scaffold News genre:string ndc1:string ndc2:string
				542  rake db:migrate
				543  ruby script/server&

	#fri/qri tutorial
		fastri-server       ;#invoke index server
		#vim			C-],	<S-K> means "!man [word nder cursor]
		#command-line	[fq]ri -h;[fq]ri -e NKF
		#OBSOLETE: ri tutorial
			ri WWW::Mechanize::FileResponse
			ri --gems WWW::Mechaniz
			ri --gems mail -l
	#Rdoc local genelation like javadoc----------------------------------------------------------------------------------
		cd railsapi/
		rake rails:freeze:gems
		echo >vendor/rails/activesupport/README
		rake doc:rails
	#debugger;
		#禁則
			#irb	: 実行結果もソースも同じコンソールに表示され、逐次実効やブレークポイントなど設定できず、不便。
			#ruby -rdebug [scriptname] はワーニングですぎで初心者向きじゃない。
		rdebug [scriptname]
			(rdb:)+ help,
		rdebug object tree dislay
			#rdebug v l : c g;  v cl; v i;  where
			#etc
			info args -- Argument variables of current stack frame
			info breakpoints -- Status of user-settable breakpoints
			info catch -- Exceptions that can be caught in the current stack frame
			info display -- Expressions to display when program stops
			info file -- Info about a particular file read in
			info files -- File names and timestamps of files read in
			info global_variables -- Global variables
			info instance_variables -- Instance variables of the current stack frame
			info line -- Line number and file name of current position in source file
			info locals -- Local variables of the current stack frame
			info program -- Execution status of the program

				(rdb:1) p page.root.to_plain_text.grep(/TOEIC/).each{|el| p el +"\n"  }

			xmpfilter "#=>" annotation embedding,
				F12, F9,F8, F7
			"require 'debugger'
			you@ecolnux:~/RoRapps/dev232plain$ ruby script/runner -h
				Usage: script/runner [options] ('Some.ruby(code)' or a filename)
				-e, --environment=name           Specifies the environment for the runner to operate under (test/development/production).
					Default: development
				-h, --help                       Show this help message.
				You can also use runner as a shebang line for your scripts like this:
					-------------------------------------------------------------
					#!/usr/bin/env /home/you/RoRapps/dev232plain/script/runner
					Product.find(:all).each { |p| p.price *= 2 ; p.save! }
					-------------------------------------------------------------
			/script/performance/
				benchmarker.rb	&	profiler.rb
		Rails debugger
			喜ばしいことに、Rails 2.0ではruby-debug を使ったdebuggerが正式に採用されました。 これの使い方は非常に簡単です。
			まずは、以下のようにブレークポイントをコード中に書き込みます。
			  ???1? def some_method
			  ???2?   debugger # breakpoint
			  ???3? end
				#@erb/rhtml       print "<% require 'ruby-debug' %>" print "<% debugger %>"

			続いて、Webサーバをデバッグモードで実行します。
			  ???1? % ./script/server -u
			(rdb:)  $LOADED_FEATURES
			(rdb:2) info variables
					info instance_variables
			(rdb:2) info global_variables
			     :	:


	#1liner
		ruby test.rb yomikaku.txt >new ;sort     new >new2
		ruby test.rb yomikaku.txt >new ;sort -b new >new2

		-e … このオプションのあとにスクリプト片を与えると、ファイルからスクリプトを読み込むのではなくそれをそのまま実行してくれます。
			ruby -e ‘print “Hello World!\n”‘ 		画面にHello World!が表示されます
			ruby -ne ‘gsub(/ +/, “\t”)’ <filename	ファイル中のスペースの連続をTSVタブに置換
			ruby -ne ‘$_.upcase!’ <filename		ファイル中のアルファベットをすべて大文字に


		-p … このオプション（引数なし）を与えると、プログラム全体が

			while gets
				…
				print $_
			end


		FILE SPACING:

		# double space a file
			$  ruby -pe 'puts' < file.txt
		# triple space a file
			$  ruby -pe '2.times {puts}' < file.txt
		# undo double-spacing (w/ and w/o whitespace in lines)
			$  ruby -lne 'BEGIN{$/="\n\n"}; puts $_' < file.txt
			$  ruby -ne 'BEGIN{$/="\n\n"}; puts $_.chomp' < file.txt
			$  ruby -e 'puts STDIN.readlines.to_s.gsub(/\n\n/, "\n")' < file.txt

		NUMBERING:

		# number each line of a file (left justified).
			$  ruby -ne 'printf("%-6s%s", $., $_)' < file.txt
		# number each line of a file (right justified).
			$  ruby -ne 'printf("%6s%s", $., $_)' < file.txt
		# number each line of a file, only print non-blank lines
			$  ruby -e 'while gets; end; puts $.' < file.txt
		# count lines (emulates 'wc -l')
			$  ruby -ne 'END {puts $.}' < file.txt
			$  ruby -e 'while gets; end; puts $.' < file.txt

		TEXT CONVERSION AND SUBSTITUTION:

		# convert DOS newlines (CR/LF) to Unix format (LF)
		# - strip newline regardless; re-print with unix EOL
			$  ruby -ne 'BEGIN{$\="\n"}; print $_.chomp' < file.txt

		# convert Unix newlines (LF) to DOS format (CR/LF)
		# - strip newline regardless; re-print with dos EOL
			$  ruby -ne 'BEGIN{$\="\r\n"}; print $_.chomp' < file.txt

		# delete leading whitespace (spaces/tabs/etc) from beginning of each line
			$  ruby -pe 'gsub(/^\s+/, "")' < file.txt

		# delete trailing whitespace (spaces/tabs/etc) from end of each line
		# - strip newline regardless; replace with default platform record separator
			$  ruby -pe 'gsub(/\s+$/, $/)' < file.txt

		# delete BOTH leading and trailing whitespace from each line
			$  ruby -pe 'gsub(/^\s+/, "").gsub(/\s+$/, $/)' < file.txt

		# insert 5 blank spaces at the beginning of each line (ie. page offset)
			$  ruby -pe 'gsub(/%/, "   ")' < file.txt
			FAILS! $  ruby -pe 'gsub(/%/, 5.times{putc " "})' < file.txt

		# align all text flush right on a 79-column width
			$  ruby -ne 'printf("%79s", $_)' < file.txt

		# center all text in middle of 79-column width
			$  ruby -ne 'puts $_.chomp.center(79)' < file.txt
			$  ruby -lne 'puts $_.center(79)' < file.txt

		# substitute (find and replace) "foo" with "bar" on each line
			$  ruby -pe 'gsub(/foo/, "bar")' < file.txt

		# substitute "foo" with "bar" ONLY for lines which contain "baz"
			$  ruby -pe 'gsub(/foo/, "bar") if $_ =~ /baz/' < file.txt

		# substitute "foo" with "bar" EXCEPT for lines which contain "baz"
			$  ruby -pe 'gsub(/foo/, "bar") unless $_ =~ /baz/' < file.txt

		# substitute "foo" or "bar" or "baz".... with "baq"
			$  ruby -pe 'gsub(/(foo|bar|baz)/, "baq")' < file.txt

		# reverse order of lines (emulates 'tac') IMPROVE
			$  ruby -ne 'BEGIN{@arr=Array.new}; @arr.push $_; END{puts @arr.reverse}' < file.txt

		# reverse each character on the line (emulates 'rev')
			$  ruby -ne 'puts $_.chomp.reverse' < file.txt
			$  ruby -lne 'puts $_.reverse' < file.txt

		# join pairs of lines side-by-side (like 'paste')
			$  ruby -pe '$_ = $_.chomp + " " + gets if $. % 2' < file.txt

		# if a line ends with a backslash, append the next line to it
			$  ruby -pe 'while $_.match(/\\$/); $_ = $_.chomp.chop + gets; end' < file.txt
			$  ruby -e 'puts STDIN.readlines.to_s.gsub(/\\\n/, "")' < file.txt

		# if a line begins with an equal sign, append it to the previous line (Unix)
			$  ruby -e 'puts STDIN.readlines.to_s.gsub(/\n=/, "")' < file.txt

		# add a blank line every 5 lines (after lines 5, 10, 15, etc)
			$  ruby -pe 'puts if $. % 6 == 0' < file.txt

		SELECTIVE PRINTING OF CERTAIN LINES

		# print first 10 lines of a file (emulate 'head')
			$  ruby -pe 'exit if $. > 10' < file.txt

		# print first line of a file (emulate 'head -1')
			$  ruby -pe 'puts $_; exit' < file.txt

		# print the last 10 lines of a file (emulate 'tail'); NOTE reads entire file!
			$  ruby -e 'puts STDIN.readlines.reverse!.slice(0,10).reverse!' < file.txt

		# print the last 2 lines of a file (emulate 'tail -2'); NOTE reads entire file!
			$  ruby -e 'puts STDIN.readlines.reverse!.slice(0,2).reverse!' < file.txt

		# print the last line of a file (emulates 'tail -1')
			$  ruby -ne 'line = $_; END {puts line}' < file.txt

		# print only lines that match a regular expression (emulates 'grep')
			$  ruby -pe 'next unless $_ =~ /regexp/' < file.txt

		# print only lines that DO NOT match a regular expression (emulates 'grep')
			$  ruby -pe 'next if $_ =~ /regexp/' < file.txt

		# print the line immediately before a regexp, but not the regex matching line
			$  ruby -ne 'puts @prev if $_ =~ /regex/; @prev = $_;' < file.txt

		# print the line immediately after a regexp, but not the regex matching line
			$  ruby -ne 'puts $_ if @prev =~ /regex/; @prev = $_;' < file.txt

		# grep for foo AND bar AND baz (in any order)
			$  ruby -pe 'next unless $_ =~ /foo/ && $_ =~ /bar/ && $_ =~ /baz/' < file.txt

		# grep for foo AND bar AND baz (in order)
			$  ruby -pe 'next unless $_ =~ /foo.*bar.*baz/' < file.txt

		# grep for foo OR bar OR baz
			$  ruby -pe 'next unless $_ =~ /(foo|bar|baz)/' < file.txt

		# print paragraph if it contains regexp; blank lines separate paragraphs
			$  ruby -ne 'BEGIN{$/="\n\n"}; print $_ if $_ =~ /regexp/' < file.txt

		# print paragraph if it contains foo AND bar AND baz (in any order); blank lines separate paragraphs
			$  ruby -ne 'BEGIN{$/="\n\n"}; print $_ if $_ =~ /foo/ && $_ =~ /bar/ && $_ =~ /baz/' < file.txt

		# print paragraph if it contains foo AND bar AND baz (in order); blank lines separate paragraphs
			$  ruby -ne 'BEGIN{$/="\n\n"}; print $_ if $_ =~ /(foo.*bar.*baz)/' < file.txt

		# print paragraph if it contains foo OR bar OR baz; blank lines separate paragraphs
			$  ruby -ne 'BEGIN{$/="\n\n"}; print $_ if $_ =~ /(foo|bar|baz)/' < file.txt

		# print only lines of 65 characters or greater
			$  ruby -pe 'next unless $_.chomp.length >= 65' < file.txt
			$  ruby -lpe 'next unless $_.length >= 65' < file.txt

		# print only lines of 65 characters or less
			$  ruby -pe 'next unless $_.chomp.length < 65' < file.txt
			$  ruby -lpe 'next unless $_.length < 65' < file.txt

		# print section of file from regex to end of file
			$  ruby -pe '@found=true if $_ =~ /regex/; next unless @found' < file.txt

		# print section of file based on line numbers (eg. lines 2-7 inclusive)
			$  ruby -pe 'next unless $. >= 2 && $. <= 7' < file.txt

		# print line number 52
			$  ruby -pe 'next unless $. == 52' < file.txt

		# print every 3rd line starting at line 4
			$  ruby -pe 'next unless $. >= 4 && $. % 3 == 0' < file.txt

		# print section of file between two regular expressions, /foo/ and /bar/
			$  ruby -ne '@found=true if $_ =~ /foo/; next unless @found; puts $_; exit if $_ =~ /bar/' < file.txt

		SELECTIVE DELETION OF CERTAIN LINES

		# print all of file except between two regular expressions, /foo/ and /bar/
			$  ruby -ne '@found = true if $_ =~ /foo/; puts $_ unless @found; @found = false if $_ =~ /bar/' < file.txt

		# print file and remove duplicate, consecutive lines from a file (emulates 'uniq')
			$  ruby -ne 'puts $_ unless $_ == @prev; @prev = $_' < file.txt

		# print file and remove duplicate, non-consecutive lines from a file (careful of memory!)
			$  ruby -e 'puts STDIN.readlines.sort.uniq!.to_s' < file.txt

		# print file except for first 10 lines
			$  ruby -pe 'next if $. <= 10' < file.txt

		# print file except for last line
			$  ruby -e 'lines=STDIN.readlines; puts lines[0,lines.size-1]' < file.txt

		# print file except for last 2 lines
			$  ruby -e 'lines=STDIN.readlines; puts lines[0,lines.size-2]' < file.txt

		# print file except for last 10 lines
			$  ruby -e 'lines=STDIN.readlines; puts lines[0,lines.size-10]' < file.txt

		# print file except for every 8th line
			$  ruby -pe 'next if $. % 8 == 0' < file.txt

		# print file except for blank lines
			$  ruby -pe 'next if $_ =~ /^\s*$/' < file.txt

		# delete all consecutive blank lines from a file except the first
			$  ruby -e 'BEGIN{$/=nil}; puts STDIN.readlines.to_s.gsub(/\n(\n)+/, "\n\n")' < file.txt

		# delete all consecutive blank lines from a file except for the first 2
			$  ruby -e 'BEGIN{$/=nil}; puts STDIN.readlines.to_s.gsub(/\n(\n)+/, "\n\n")' < file.txt

		# delete all leading blank lines at top of file
			$  ruby -pe '@lineFound = true if $_ !~ /^\s*$/; next if !@lineFound' < file.txt



#redmine
	rake db:migrate
		#adva-cmsとはDBtable 'comments'が衝突してmigrate頓挫する。両方のcommentsテーブルは構成がにていて、ADVA-CMSのcommentsテーブルの方が多くのカラムを持つが、包含関係ではない。
		したがって互換性もなく、共存させたければADVA-CMSとRedmineのマイグレーションファイルをマージしてからmigrateするハックが必要。DBtable 'boards'も同様。
		comments
		boards
	admin/adminで初回ログイン
	open-IDつかいたいならば -->  sudo gem install ruby-openid
#redmine-overwriting-upgrade
	0.8.x series & 0.9.x series ---> DBに互換性なし
	sudo gem1.8 uninstall rack
	#rackup0.1, synatraもけす

	sudo gem1.8 install --version '= 1.0.1' rack
	rake db:migrate
	#vim /config/environment.rb
		chars = ('a'..'z').to_a + ('A'..'Z').to_a + ('0'..'9').to_a
		secret = Array.new(60){chars[rand(chars.size)]}.join
		config.action_controller.session = { :key => "_hello_session", :secret => secret }
#redmine plugin making つまるところ以下の手順でプラグインが開発できる。
	See: http://rails-engines.org/
	1. script/generate redmine_plugin でプラグインの雛形を作る
		ruby script/generate redmine_plugin r2chnn
	1b file-copy
		railsでつくったMVCをREDMINE/vendor/plugins 配下にコピーし差をうめ 　　
		元RailsAppのRAILS_ROOT/lib はREDMINE_ROOT/libにコピー
		元RailsAppのRAILS_ROOT/public/* はREDMINE_ROOT/public にコピー
		元RailsAppのRAILS_ROOT/public/images/* はREDMINE_ROOT/public/images/ にコピー
		元RailsAppのRAILS_ROOT/vendor/plugins/* はREDMINE_ROOT/vendor/lugins/ にコピー(ただしRedmineのbootエラーが出るプラグインはどこかに退避させる）
	2. init.rb を編集する
		Redmine::Plugin.register :redmine_continuous_deployment do
		  name 'Redmine Continuous Deployment plugin'
		  author 'Takayuki Kyowa'
		  description 'Redmine Continuous Deployment plugin'
		  version '0.0.1'

		#メニューの追加先をプロジェクトメニューにしています 初期設定で最も重要なのは表示メニューへの追加です。追加可能な表示箇所は以下の4つに分類さ れます。
			 1. トップメニュー（top_menu）
			 2. アカウントメニュー（account_menu）
			 3. プロジェクト非選択時のアプリケーションメニュー（application_menu）
			 4. プロジェクト選択時メニュー（project_menu）（①）。プロジェクトメニューa project-IDが必須にな ります。
		#:paramオプションで:project_idを指定するとURLにプロジェクトIDが付与されます(②)。
		  menu :project_menu, :deploy_history,  # ①
			   { :controller => 'deployments', :action => 'index' }, :caption => "デプロイ", :last => true,
			   :param => :project_id # ②
			#プロジェクトメニューはデフォルトで非表示にな っているため，permissionメソッドで表示/非表示を制御します(③)。
			#注意事項：URLを直打ちするとpermissionはきかない。一般公開を目的としたプラグインを作成する場合には指定せず権限の管理画面（/roles/report）からロール毎に表示／非表示を設定します。

			  permission
				:deploy_histories,              # パーミッションの名前。パーミッション全体で一意でなければならない。
				{ :deployments => [ :index ] }, # 制御対象の画面をあらわすハッシュ。menuメソッドで指定したコントローラ / アクションを指定する。
				:public => true                 # trueにすると常に表示される。

		end

		#例
		class ModelName < ActiveRecord::Migration
		  def self.up
			create_table :deploy_histories do |t|
			  t.column :project_id, :integer    # デプロイ時のプロジェクト
			  t.column :deployer_id, :integer   # デプロイしたユーザ
			  t.column :changeset_id, :integer  # デプロイ時のチェンジセット（リビジョン）
			  t.column :started_on, :datetime   # 開始時間
			  t.column :deployed_on, :datetime  # 終了時間
			  t.column :return_code, :integer   # デプロイの実行結果。コマンドの終了ステータスを保存する。
			  t.column :log, :text              # デプロイのログ
			end
		  end

		  def self.down
			drop_table :deploy_histories
		  end
		end

		一通り作成したらmigrateを実行します。
		$ RAILS_ENV=production rake db:migrate_plugins

	3. 共通設定移植
		application_contoroller の独自共通メソッド
		config/database.yml
		config/environments.rb
		config/routes.rb
	3. Contoroller 移植(@project を基点にプロジェクトの情報を得る)
		#これをいれるとredmine標準layout   layout 'base'
		  unloadable
		  before_filter :find_project #, :authorize  <----会員専用ページ
			...
		private
		  def find_project
			@project=Project.find(params[:id])
		  end
		class
		EOF
		#プロジェクト配下では@projectインスタンス変数が必須になる為，URLで渡されたプロジェクトIDからProjectモデルのインスタンスを取得し，
		@projectイ ンスタンス変数にセットしています。基本的にすべての画面で必要になるため，before_filterで記述しています（①）。

	4. View を書く
		  値の取得例：<%= button_to "デプロイ！", { :action => "deploy", :project_id => params[:project_id] } %>
			def hogehoge
				@project = Project.find(params[:project_id])
			end
		PG:redmine:plugin: setting/*erb のファイル名はインストール済みプラグインの名前空間で衝突しない独特名にしないと、早番順同名ファイルがよみこまれたりする。
		#PLUGIN_ROOT/app/views/で
			<%#  takami disabled below due to 'stack level too deep' error%>
			<%#  <%= stylesheet_link_tag 'scaffold' +|%>
	5. PLUGINROT/lang/nn.yml  config/locales 言語ファイルを書く
		lang/en.yml
			en:
			  button_exec_deploy: Deploy!
			  text_confirm_deploy: Are you sure you want to deploy?
		lang/ja.yml
			ja:
			  button_exec_deploy: デプロイ！
			  text_confirm_deploy: デプロイします。よろしいですか？

		アプリ側からメッセージを読み込むには「l」というメソッドの引数に言語ファイルで定義したラベルを指定します。
		app/views/deployments/index.html.erb
			<%= button_to l(:button_exec_deploy), { :action => "deploy", :project_id => params[:project_id] }, :confirm => l(:text_confirm_deploy) %>

	6. /home/you/RoRapps/redmine-0.9.5/app/controllers/settings_controller.rb

	rake db:migrate_plugins


	#Redmineで名前空間内衝突をおこし、そのままつかえない人気プラグイン
		#Paperclip::Attachment:Classと redmine-0.8.4/app/models/attachment.rbのAttachment:Classと名前衝突、誤動作
			/home/you/RoRapps/redmine-0.8.4/app/models/attachment.rb:34: undefined method `table_name' for Paperclip::Attachment:Class (NoMethodError)
		#jpmobile (* 0.9.5はbootエラーなし。)
			/home/you/RoRapps/redmine-0.8.4/vendor/plugins/jpmobile/lib/jpmobile/hook_action_view.rb:26: undefined method `find_template' for class `ActionView::PathSet' (NameError)
		--> require '/usr/lib/ruby/gems/1.8/gems/jpmobile-0.0.4/lib/jpmobile.rb'  #some_body
		#XXX_path, XXX_urlの書き換え
	#if redmine 0.8.x系 then
		environments.rb /config/environmnts/[envname]rb config.plugin_reload=true

	#redmine-gmail-combo
		#ruby script/plugin install git://github.com/collectiveidea/action_mailer_optional_tls.git
		i#config/email.ymlはタブをスペースに変換すること。
#linode new-plugin/mdule配備手順
	ローカルにデプロイ演習DB作っておいて演習する。
	いろいろmigrationむけrake task ommandはあるが、rake:db:migrateでエラーになるファイルをさけつつガリガリやってDBtable作成を目視確認するのがはやみち。
		rake db:migrate:plugin                                 # Migrate a specified plugin.
		rake db:migrate:plugins                                # Migrate plugins to current status.
		rake db:migrate:redo                                   # Rollbacks the database one migration and re migrate up.
		rake db:migrate_plugins                                # Migrates installed plugins.
		rake db:migrate:upgrade_plugin_migrations              # For engines coming from Rails version < 2.0 or for those previously updated to work with Sven Fuch's fork of engines, you need to upgrade the schema info table

#@editable はwiki_controller-->iMixinWikiController::def indexとよばれる。document_controllerではこのながれはない。

#redminePG: http://localhost:3000/projects/convert/documents?sort_by=author  きかない docusmnt/index ではattachments.authorでソートするので添付ファイル泣ければ動作しない
#Linode環境移行手順
	#db-migration
		/root/TMPDIR/DBbak/r2chnn_core_selected_tables.gz
		/root/redmine-0.9.5/config/database.yml
	#httpd-env
		/usr/local/apache2/conf/extra/httpd-proxy.conf
		/usr/local/apache2/conf/httpd.conf
		/root/redmine-0.9.5/config/environments/development.rb
		/root/redmine-0.9.5/config/environments/production.rb
	#appdir & cronpath
		/root/redmine-0.9.5/lib/R2chnnInitfork.rb
#webalizer-------------------------------------------------------------------------------
	#かならずshellで作業。vimのシェルコマンドではうまくslinkがつくられない
	#cd #{RAILS_ROOT}/public
	!sudo ln -s var/log/webalizer webalizer
~

wget -O - --no-cache localhost:3000/r2chnns
 ruby script/generate scaffold r2chnn genre:string ndc1:string ndc2:string sbm:integer rate:integer Thread:text THref:text kisha:string src1:string src2:string src3:string issue2nn:integer issueOfWeek:integer issueOfMonth:integer issueOfSeason:integer issueOfYear:integer issueOfDecade:integer

#index.htmk.erb を偽装して通常のhtmlを表示させる方法＝＞ <%= stylesheet_link_tag 'scaffold' %>だけをのこしてあとをいれかえる。
#Rails scrach
#//ver2予定:mobyle.seisyun.netも書き換えたい http://mobile.seisyun.net/cgi/read.cgi/newsplus/mamono_newsplus_1214022204/1
#
#driverSW update  HTMLeditoron FIrefox / / dentist/ 投信
	./browser/plugin/short.vim:45:command! -bar -bang ViewSource call BrowserViewSource(<q-bang>)
	./browser/plugin/main.vim:82:command! -bar -bang BrowserViewSource call BrowserViewSource(<q-bang>)
	netbeans-linux
	http://eigenclass.org/hiki.rb?fastri  and it's also available in gem format
	(rdb:1) show command
		No readline suport
	#Yahoo pipes
		2NN- 芸能|フィギュア|労働新聞|自治議論|遺棄|自殺|殺害|少子化|晩婚|婚活|アラフォー|アラサー|Mac |iPod|iPhone|Podcast|テレビ|ラジオ|が話題|(になる|する)\!?[\?？]|SMAP|しょこたん|くまぇり|ネチズン|ブログ|シー..?シェパード|||||||||||||||||||||||||||||||||||||||||||||||
		-Twitter|Wassr|Myspace|facebook|flickr|Mac |iPod|iPhone|Podcast|テレビ|ラジオ|(になる|する)\!?[\?？]|Shibuya.pm|last.fm|Tumblr|イケメン||||||||||||||||||||||||||||||||||||||
	#mashup
		http://railsify.com/search
		http://wiki.rubyonrails.org/?do=search&id=WORD1+WORD2


	#js2rb.rb
		/else if/elsif/
#
	<dl>
	<dt>3 ：<span class="name">七つの海の名無しさん </span>：2009/05/04(月) 14:28:56 ID:l1rmttGY
	 <input id="3" name="edit_res[]" value="3" checked="checked" type="checkbox">
	  <label for="3">このレスを掲載する</label></dt>
	   <dd> <a href="http://gimpo.2ch.net/test/read.cgi/news5plus/1241414647/1" target="_blank">&gt;&gt;1</a> <br> グロ張らないで頂戴！！！！！！！！！！ <br></dd>

	   <dt>38 ：<span class="name">七つの海の名無しさん </span>：2009/05/04(月) 17:08:24 ID:584C/LGG
	    <input id="38" name="edit_res[]" value="38" checked="checked" type="checkbox">
		 <label for="38">このレスを掲載する</label></dt>
		  <dd> <a href="http://gimpo.2ch.net/test/read.cgi/news5plus/1241414647/1" target="_blank">&gt;&gt;1</a> <br> 良い仕事したな。ナイスオパーイ <br></dd>


require 'scanf'
require 'action_pack'
require 'action_view'
require 'jpmobile/request_with_mobile'
require 'tempfile'

(rdb:1191) request.headers["HTTP_HOST"]
"localhost:3000"
(rdb:1191) request.headers["REQUEST_PATH"]
"/"
(rdb:1191) request.headers["PATH_INFO"]
"/r2chnns/readurl/825"

(rdb:1191) request.headers["HTTP_REFERER"]
"http://localhost:3000/r2chnns/refresh/1"
	(rdb:1191) request.headers["REQUEST_URI"]
		"http://localhost:3000/r2chnns/readurl/825"

		request.headers["PATH_INFO"]=url
		request.headers["REQUEST_PATH"]=url
		#request.headers["HTTP_HOST"]=
#ADVA-CMS-HACK
		LOGOUT:	Parameters: {"return_to"=>"http://localhost:3000/", "action"=>"new", "controller"=>"session"}
			CACHE (0.0ms)   SELECT * FROM "sites" WHERE ("sites"."host" = 'localhost:3000') LIMIT 1
			CACHE (0.0ms)   SELECT * FROM "sections" WHERE ("sections"."parent_id" IS NULL) AND ("sections"."site_id" = 1) ORDER BY lft LIMIT 1
			  User Load (4.5ms)   SELECT * FROM "users" WHERE ("users"."id" = '1') LIMIT 1
			  SQL (1.5ms)   SELECT count(*) AS count_all FROM "users" WHERE (id = 1 AND remember_me = 'ee029d36aec513eb2e4c0ef2eccc8bc50f886fc5' AND verified_at IS NOT NULL)
			  User Load (15.1ms)   SELECT * FROM "users" WHERE ("users"."id" = 1) LIMIT 1

		LOGIN:	Parameters: {"action"=>"destroy", "_method"=>"delete", "authenticity_token"=>"fCmjxS2tJJLWqxy46mXGKcejW9uQffss4lcjX4eXZqo=", "controller"=>"session"}
			  CACHE (0.0ms)   SELECT * FROM "sites" WHERE ("sites"."host" = 'localhost:3000') LIMIT 1
			  CACHE (0.0ms)   SELECT * FROM "sections" WHERE ("sections"."parent_id" IS NULL) AND ("sections"."site_id" = 1) ORDER BY lft LIMIT 1
	(rdb:1056) SessionController.instance_methods.grep(/current/i)
		["current_user", "assign_current_user_to_models", "current_resource", "current_page"]
	(rdb:1163) current_user
		#<User id: 1, first_name: "some_body", last_name: nil, email: "some_body@gmail.com", homepage: nil, about: nil, signature: nil, password_hash: "d9e778c53529bcf488846230be0f6bf6f3a922d4", password_salt: "9ee11fa50003a673b6c783263a61770f37254b55", ip: nil, agent: nil, referer: nil, remember_me: nil, token_key: nil, token_expiration: nil, anonymous: false, created_at: "2009-07-25 09:19:17", updated_at: "2009-07-25 09:19:17", verified_at: "2009-07-25 09:19:16", deleted_at: nil>
	(rdb:1056) SessionController.instance_methods.grep(/veri/i)
		["verify_authenticity_token", "verified_request?", "verifiable_request_format?", "hash_for_verify_user_url", "verify_user_url", "formatted_verify_user_url", "hash_for_verify_user_path", "verify_user_path", "formatted_verify_user_path"]
	(rdb:1056) SessionController.instance_methods.grep(/user/i)
		["hash_for_new_user_url", "new_admin_user_path", "new_user_url", "hash_for_admin_site_user_url", "formatted_new_admin_user_path", "formatted_new_user_url", "admin_site_user_url", "hash_for_new_user_path", "formatted_admin_site_user_url", "hash_for_edit_admin_user_url", "new_user_path", "hash_for_admin_site_user_path", "edit_admin_user_url", "formatted_new_user_path", "formatted_admin_site_user_path", "formatted_edit_admin_user_url", "hash_for_edit_user_url", "hash_for_edit_admin_user_path", "edit_user_url", "edit_admin_user_path", "formatted_edit_user_url", "hash_for_user_roles_url", "formatted_edit_admin_user_path", "hash_for_edit_user_path", "user_roles_url", "edit_user_path", "formatted_user_roles_url", "hash_for_admin_user_url", "formatted_edit_user_path", "hash_for_user_roles_path", "admin_user_url", "current_user", "user_roles_path", "formatted_admin_user_url", "hash_for_verify_user_url", "formatted_user_roles_path", "hash_for_admin_user_path", "verify_user_url", "formatted_admin_user_path", "formatted_verify_user_url", "assign_current_user_to_models", "hash_for_verify_user_path", "hash_for_user_object_roles_url", "hash_for_admin_site_users_url", "verify_user_path", "user_object_roles_url", "handle_user_settings", "admin_site_users_url", "formatted_verify_user_path", "formatted_user_object_roles_url", "formatted_admin_site_users_url", "admin_site_users_path", "hash_for_user_url", "hash_for_user_object_roles_path", "authenticate_user", "hash_for_admin_site_users_path", "user_url", "user_object_roles_path", "formatted_admin_site_users_path", "formatted_user_url", "formatted_user_object_roles_path", "hash_for_user_path", "admin_users_path", "hash_for_new_admin_site_user_url", "user_path", "new_admin_site_user_url", "formatted_user_path", "formatted_new_admin_site_user_url", "admin_user_path", "hash_for_new_admin_site_user_path", "hash_for_admin_users_url", "admin_site_user_path", "new_admin_site_user_path", "admin_users_url", "formatted_new_admin_site_user_path", "formatted_admin_users_url", "hash_for_admin_users_path", "hash_for_edit_admin_site_user_url", "formatted_admin_users_path", "edit_admin_site_user_url", "formatted_edit_admin_site_user_url", "hash_for_new_admin_user_url", "hash_for_edit_admin_site_user_path", "new_admin_user_url", "edit_admin_site_user_path", "formatted_new_admin_user_url", "formatted_edit_admin_site_user_path", "hash_for_new_admin_user_path"]

	(rdb:1132) t(:'adva').keys
		[:wikipage, :wiki_helper, :session, :assets, :labels, :cells, :plugins, :messages, :signup, :footer, :theme_files, :locations, :sidebar, :roles, :state, :blog, :info, :spam, :common, :sections, :sites, :titles, :boards, :users, :categories, :themes, :topics, :wiki, :comments, :tracking, :resources, :settings, :posts, :articles, :passwords, :subscription, :cached_pages, :links, :flash, :wikipages_helper, :activity, :contents]
	(rdb:1132) t(:'adva.sites')
		{:no_sites=>"You currently do not have any sites created.", :title=>{:create=>"Create a new site", :home_section=>"Home section"}, :attributes=>{:host=>"Host", :name=>"Name"}, :no_users=>"Site does not have any users.", :hints=>{:admin_email=>"Shown in emails sent from your site", :host_name=>"Include the port if it's a non-standard one. E.g. localhost:3000"}, :confirm_delete=>"Are you sure you wish to delete this site?", :no_available_users=>"Site does not have any available user.", :label=>{:timezone=>"Website Timezone", :admin_email=>"Administrator email", :title=>"Website title", :host=>"Host name", :name=>"Website name", :subtitle=>"Website subtitle"}, :flash=>{:create=>{:success=>"The site has been created.", :failure=>"The site could not be created"}, :destroy=>{:success=>"The site has been deleted.", :failure=>"The site could not be deleted"}, :install=>{:success=>"Congratulations! You have successfully set up your site.", :error_already_complete=>"Installation is already complete. Please log in with your admin account.", :failure=>"The following models could not be created: {{models}}."}, :update=>{:success=>"The site has been updated.", :failure=>"The site could not be updated"}}, :links=>{:delete=>"Delete this site", :create_site_and_account=>"Create site & account ≫", :manage_new=>"Manage your new site &raquo;"}, :install=>{:success_fully_created=>"You have successfully created your site. Enjoy!", :section_default=>"Home", :can_always_change_settings=>"Don't worry. You can always change these settings later.", :welcome_to_installation=>"Welcome to the less-than-two-minutes installation process. Just fill in the information below and you're done. "}}
	(rdb:1132) t(:'adva.session')
		{:labels=>{:remember_me=>"Remember me"}, :flash=>{:create=>{:success=>"Logged in successfully.", :failure=>"Could not login with this email and password."}, :destroy=>{:success=>"Logged out successfully."}}}
	kkkkkkkk

	 Rails::Initializer.run do |config| $rails_config = config end
	$rails_config.to_a.split(/@/)

	#VMguest@local
	procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
	 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa
	  3  0    153      4      5     45    0    0    21    16  144   29  9 15 75  1

	root@ecolnux:~/RoRapps/2chnrg/vendor/adva/engines# grep -inR "site.host.*=" *
	adva_blog/test/integration/admin/blog_article_test.rb:44:      request.url.should == "http://#{@site.host}/2008/1/1/the-article-title?cl=en"
	adva_cms/test/unit/models/site_test.rb:81:    @site.host = '    t e s t.advabest.de'
	adva_cms/test/unit/models/site_test.rb:86:    @site.host = 't e s t.advabest.de'
	adva_cms/test/unit/models/site_test.rb:91:    @site.host = 't e s t.advabest.de    '
	adva_cms/test/integration/admin/section_article_test.rb:98:      request.url.should == "http://#{@site.host}/articles/the-article-title?cl=en"
	adva_cms/test/integration/admin/section_article_test.rb:103:      request.url.should == "http://#{@site.host}/articles/the-article-title-de?cl=de"
	adva_cms/test/integration/admin/sites_test.rb:30:      fill_in 'site[host]',  :with => 'http://the-new-site.com'
	adva_newsletter/test/unit/model/issue_test.rb:325:    @issue.body = %(<a href="http://#{@issue.newsletter.site.host}/newest-products.html?order=date">View our newest products</a>)
	adva_newsletter/test/unit/model/issue_test.rb:328:    expected = %(<a href="http://#{@issue.newsletter.site.host}/newest-products.html?order=date&utm_medium=newsletter&utm_campaign=#{URI.escape(@issue.tracking_campaign)}&utm_source=#{URI.escape(@issue.tracking_source)}">View our newest products</a>)
	adva_newsletter/test/unit/model/issue_test.rb:334:    @issue.body = %(<a href="http://#{@issue.newsletter.site.host}/newest-products.html?order=date">View our newest products</a>)
	adva_newsletter/test/unit/model/issue_test.rb:339:    @issue.body_html.should == %(<a href="http://#{@issue.newsletter.site.host}/newest-products.html?order=date">View our newest products</a>)
	root@ecolnux:~/RoRapps/2chnrg/vendor/adva/engines# grep -inR "request.host.*=" *
	adva_cms/test/contexts.rb:11:    @request.host = @site.host if @request && @site
	adva_cms/test/test_helper/extensions/rails_patch.rb:34:    request.host = @request.host if @request
	adva_forum/test/functional/forum_cache_references_test.rb:14:    @request.host = @forum.site.host
	adva_forum/test/functional/forum_cache_references_test.rb:53:    @request.host = @forum.site.host

	root@ecolnux:/usr/lib/ruby/gems/1.8/gems/mongrel-1.1.5# grep -inR "3000" *
		README:63: h = Mongrel::HttpServer.new("0.0.0.0", "3000")
		README:68:If you run this and access port 3000 with a browser it will say "hello!".  If you access it with any url other than "/test" it will give a simple 404.  Check out the Mongrel::Error404Handler for a basic way to give a more complex 404 message.
		bin/mongrel_rails:27:        ['-p', '--port PORT', "Which port to bind to", :@port, 3000],
		examples/mongrel.conf:8::port: 3000
		examples/mongrel_simple_service.rb:110:  :port            => 3000,
		examples/camping/tepee.rb:146:  server = Mongrel::Camping::start("0.0.0.0",3000,"/tepee",Tepee)
		examples/camping/tepee.rb:147:  puts "** Tepee example is running at http://localhost:3000/tepee"
		examples/builder.rb:17:  listener :port => 3000 do
		lib/mongrel/configurator.rb:14:  #     listener :port => 3000 do
		lib/mongrel.rb:56:  #   server = HttpServer.new("0.0.0.0", 3000)
	root@ecolnux:/usr/lib/ruby/gems/1.8/gems/mongrel-1.1.5# cd ../mongrel_cluster-1.0.5/
	root@ecolnux:/usr/lib/ruby/gems/1.8/gems/mongrel_cluster-1.0.5# grep -inR "3000" *
		lib/mongrel_cluster/init.rb:20:        "port" => 3000,
		lib/mongrel_cluster/init.rb:287:        ['-p', '--port PORT', "Starting port to bind to", :@port, 3000],






#メソッド名!は例外を発生させる。!がなければオブジェクトか:nilをかえすのが通例。
obj.find_by_name("dave")
ret=obj.find_by_sql("select * fro xxx")
obj.select_all
book = Product.find_or_create_by_name_and_price('book', 2079)
	リスト7●productsテーブルからnameが'book'，priceが2079であるようなProductオブジェクトを読み取り，存在しなかった場合はデータベースにレコードを新規作成する処理

ruby methods
	to_a to_s
	== =~
	class		/	type
	subclasses_of
		remove_subclasses_of
	method
		methods
		singleton_methods
		private_methods
		protected_methods
		public_methods
	is_a?
	kind_of?
	nil?
RailsApp-level API
	scrape2nn
	`
	eql?
	equal?
	===
	[]
	[]=
	as_
	b64encode 	decode64 	encode64 decode_b
	debugger breakpoint
	metaclass
	try
	dup
	tap
	inspect
	daemonize
	clone
	dclone
	returning
	display
	delete
	load_with_new_constant_marking
	unloadable
	with_options
	enable_warnings
	id	/		object_id 	__id__
	send 					__send__
	taguri taguri=
	readonly! readonly?
	taint tainted? untaint
	silence_stderr
		silence_stream silence_warnings
	instance_eval
		instance_exec
		instance_of?
		instance_values
		instance_variable_defined?
		instance_variable_get
		instance_variable_names
		instance_variable_set
		instance_variables
	to_ary
		to_default_s
		to_formatted_s
		to_param
		to_query
		to_sentence
		to_set
	acts_like?
		blank?
		present?
		respond_to?
		duplicable?
	pretty_inspect
		pretty_print
		pretty_print_cycle
		pretty_print_inspect
		pretty_print_instance_variables
	extend
		extend_with_included_modules_from
		extended_by
	require
		require_association
		require_dependency
		require_library_or_gem
		require_or_load
	slice				slice!
	sort				sort!				sort_by
	uniq				uniq!
	split
	#DB-level-API
		#DBobject-level-API
			>
			>=
			abstract_class
				abstract_class=
				abstract_class?
			accepts_nested_attributes_for
			accessible_attributes
			aggregate_mapping
			alias_attribute
				alias_attribute_with_dirty
				alias_attribute_without_dirty
				alias_method_chain
			all
			allocate
			allow_concurrency
			allow_concurrency=
			ancestors
			as_load_path
			attr_accessible
				attr_accessor_with_default
				attr_internal
				attr_internal_accessor
				attr_internal_naming_format
				attr_internal_naming_format=
				attr_internal_reader
				attr_internal_writer
				attr_protected
				attr_readonly
				attribute_method_suffix
				attribute_types_cached_by_default
				attribute_types_cached_by_default=
			authorized_for?
			autoload autoload?
			average
			base_class
			after_create
				after_create_callback_chain
				after_destroy
				after_destroy_callback_chain
				after_find
				after_find_callback_chain
				after_initialize
				after_initialize_callback_chain
				after_save
				after_save_callback_chain
				after_update
				after_update_callback_chain
				after_validation
				after_validation_callback_chain
				after_validation_on_create
				after_validation_on_create_callback_chain
				after_validation_on_update
				after_validation_on_update_callback_chain
			before_create
				before_create_callback_chain
				before_destroy
				before_destroy_callback_chain
				before_save
				before_save_callback_chain
				before_update
				before_update_callback_chain
				before_validation
				before_validation_callback_chain
				before_validation_on_create
				before_validation_on_create_callback_chain
				before_validation_on_update
				before_validation_on_update_callback_chain
			belongs_to
			benchmark
			binding_n
			cache
				cache_attribute?
				cache_attributes
				cached_attributes
			calculate
			cattr_accessor
				cattr_reader
				cattr_writer
			changed changed?
			class
				class_eval
				class_exec
				class_inheritable_accessor
				class_inheritable_array
				class_inheritable_array_writer
				class_inheritable_hash
				class_inheritable_hash_writer
				class_inheritable_reader
				class_inheritable_writer
				class_name
				class_name_of_active_record_descendant
				class_of_active_record_descendant
				class_variable_defined?
				class_variables
			clear_active_connections!
			clear_all_connections!
			clear_reloadable_connections!
			clone
			colorize_logging colorize_logging=
			column_methods_hash
			column_names
			columns
			columns_hash
			composed_of
			compute_type
			configurations configurations=
			connected?
				connection
				connection_handler connection_handler=
				connection_pool
			const_defined?
				const_get
				const_missing
				const_missing_with_dependencies
				const_missing_without_dependencies
				const_set
				constants
			construct_count_options_from_args
			content_columns
			copy_instance_variables_from
			count
			create create!
			create_reflection
			current_scoped_methods
				current_user
				current_user_proc current_user_proc=
			debug_method
			decrement_counter
			default_scope
			default_scoping default_scoping=
			default_timezone default_timezone=
			define_attribute_methods
			define_callbacks
			define_read_methods
			construct_calculation_sql
				count_by_sql
				find_by_sql
			delegate
			delete
				delete_all
			deprecate
				deprecated_method_warning
				deprecation_horizon
			descends_from_active_record?
			destroy destroy_all
			encode_quoted_value
			enum_for
			establish_connection
			execute_grouped_calculation
				execute_simple_calculation
			exists?
			expand_hash_conditions_for_aggregates
				expand_range_bind_variables
			extend
				extend_with_included_modules_from
				extended_by
			find
				find_each
				find_hidden_method
				find_in_batches
			finder_needs_type_condition?
			generated_methods generated_methods?
			get_primary_key
			has_and_belongs_to_many
			has_many
			has_one
			human_attribute_name
			human_name
			include?
			included_in_classes
			included_modules
			increment_counter
			inheritable_attributes
				inheritance_column
				inheritance_column=
				inherited
			instance_eval
				instance_exec
				instance_method
				instance_method_already_implemented?
				instance_methods
				instance_of?
				instance_values
				instance_variable_defined?
				instance_variable_get
				instance_variable_names
				instance_variable_set
				instance_variables
			include_root_in_json
			include_root_in_json=
			json_class_name
			load_with_new_constant_marking
			local_constant_names
				local_constants
			lock_optimistically
				lock_optimistically=
				locking_column
				locking_column=
				locking_enabled?
			logger logger=
			match_attribute_method?
				mattr_accessor
				mattr_reader
				mattr_writer
			merge_conditions
			method_added
			method_defined?
			minimum
			model_name
			module_eval
			module_exec
			name
			named_scope
			new
			observers observers=
				add_observer
				count_observers
				delete_observer
				delete_observers
				instantiate_observers
				notify_observers
			original_primary_key
			original_table_name
			parent parent_name parents
			partial_updates partial_updates= partial_updates?
			post_mortem_method
			preload_associations
			pretty_inspect
				pretty_print
				pretty_print_cycle
				pretty_print_inspect
				pretty_print_instance_variables
			primary_key primary_key=
			primary_key_prefix_type primary_key_prefix_type=
			private_class_method public_class_method
			private_instance_methods protected_instance_methods public_instance_methods
			private_method_defined? protected_method_defined? public_method_defined?
			private_methods protected_methods public_methods
			protected_attributes
			quote_bound_value
				quote_value
				quoted_locking_column
				quoted_table_name
			raise_if_bind_arity_mismatch
			read_inheritable_attribute
			readonly_attributes
			record_timestamps record_timestamps=
			reflect_on_aggregation
				reflect_on_all_aggregations
				reflect_on_all_associations
				reflect_on_all_autosave_associations
				reflect_on_association
				reflections
			reject_new_nested_attributes_procs reject_new_nested_attributes_procs=
			remove_class
				remove_connection
				remove_subclasses
				remove_subclasses_of
			replace_bind_variables
			replace_named_bind_variables
			require
				require_association
				require_dependency
				require_library_or_gem
				require_or_load
			reset_column_information
				reset_column_information_and_inheritable_attributes_for_all_subclasses
				reset_inheritable_attributes
				reset_locking_column
				reset_primary_key
				reset_sequence_name
				reset_subclasses
				reset_table_name
			retrieve_connection
			sanitize
				sanitize_conditions
				sanitize_sql
				sanitize_sql_array
				sanitize_sql_for_assignment
				sanitize_sql_for_conditions
				sanitize_sql_hash
				sanitize_sql_hash_for_assignment
				sanitize_sql_hash_for_conditions
			schema_format schema_format=
			scope scopes
			scoped scoped?
			scoped_methods
			self_and_descendants_from_active_record
			send
			sequence_name sequence_name=
			serialize
			serialized_attributes
			set_inheritance_column
			set_locking_column
			set_primary_key
			set_readonly_option!
			set_sequence_name
			set_table_name
			silence
			silence_stderr
			silence_stream
			silence_warnings
			singleton_methods
			skip_time_zone_conversion_for_attributes
			skip_time_zone_conversion_for_attributes=
			sqlite3_connection
			sqlite_connection
			sti_name
			store_full_sti_class store_full_sti_class= store_full_sti_class?
			subclasses
			subclasses_of
			sum
			superclass
				superclass_delegating_accessor
				superclass_delegating_reader
				superclass_delegating_writer
			suppress
			synchronize
			table_exists?
			table_name table_name=
			table_name_prefix table_name_prefix=
			table_name_suffix table_name_suffix=
			time_zone_aware_attributes
				time_zone_aware_attributes=
				timestamped_migrations
				timestamped_migrations=
			to_enum
			to_param
			to_query
			transaction
			uncached
			unloadable
			update
				update_all
				update_counters
				update_counters_with_lock
				update_counters_without_lock
			valid_keys_for_belongs_to_association
				valid_keys_for_belongs_to_association=
				valid_keys_for_has_and_belongs_to_many_association
				valid_keys_for_has_and_belongs_to_many_association=
				valid_keys_for_has_many_association
				valid_keys_for_has_many_association=
				valid_keys_for_has_one_association
				valid_keys_for_has_one_association=
			validate
				validate_callback_chain
				validate_find_options
				validate_on_create
				validate_on_create_callback_chain
				validate_on_update
				validate_on_update_callback_chain
				validates_acceptance_of
				validates_associated
				validates_confirmation_of
				validates_each
				validates_exclusion_of
				validates_format_of
				validates_inclusion_of
				validates_length_of
				validates_numericality_of
				validates_presence_of
				validates_size_of
				validates_uniqueness_of
			verification_timeout verification_timeout=
			verify_active_connections!
			with_exclusive_scope
			with_options
			with_scope
			write_inheritable_array write_inheritable_attribute write_inheritable_hash
			yaml_as yaml_tag_class_name yaml_tag_read_class yaml_tag_subclasses?

			#recordsset-level-API
				#records-level-API
				&
				*
				+
				-
				<<
				<=>
				after
				assoc
				rassoc
				at
				class
				class_eval
				collect				collect!
				combination
				compact				compact!
				copy_instance_variables_from
				cycle
				delete_at
				delete_if
				drop
				drop_while
				entries
				enum_cons
					enum_for
					enum_slice
					enum_with_index
				extract_options!
				fill
				fetch
					first
					second
					third
					fourth
					fifth
					last
					forty_two
				#record選択
					choice
					detect
					find
					find_all
					find_index
					grep
					select
					each
						each_cons
						each_index
						each_slice
						each_with_index
						each_with_object
					from				to
					group_by 	in_groups 	in_groups_of
					insert
					reverse				reverse!
						reverse_each
						rindex
				#record範囲指定
					index				index_by				indexes
					include?
					member?
					many?
					none?
					one?
					all?
					any?
					empty?
					min				min_by
					max				max_by
					minmax				minmax_by

				flatten				flatten!
				freeze				frozen?
				hash
				indices
				inject

				nitems
				pack
				partition
				permutation
				product
				reduce

				clear
				concat
				count
				join
				replace
				rand
				values_at
				map				map!
				reject				reject!
				shift				unshift
				push				pop
				shuffle				shuffle!
				|
				nil

				sum
				suppress
				take
				take_while

				transpose
				zip
					record(row,column-level-API
					@r2chnns[1].methods.sort.grep(/./)

					errors
					hash
					logger
					destroy

					quoted_id
					id=
					id_before_type_cast
					_delete
					becomes
					cache_key
					clear_aggregation_cache
					class_eval
					colorize_logging
					configurations
					copy_instance_variables_from
					default_scoping					default_timezone
					connection					connection_handler
					decrement					decrement!
					increment					increment!

					enum_for
					include_root_in_json
					schema_format
					suppress
					method_missing
					to_label
					to_query
					transaction
					timestamped_migrations
					pluralize_table_names
					primary_key_prefix_type
					existing_record_check?
					new_record?
					record_timestamps
					rollback_active_record_state!
					with_transaction_returning_status

					table_name_prefix					table_name_suffix
					store_full_sti_class					store_full_sti_class?
					toggle					toggle!
					changed					changed?					changes
					created_at					created_at=					created_at?
					updated_at					updated_at=					updated_at?
					unsaved=					unsaved?
					mark_for_destruction					marked_for_destruction?
					partial_updates					partial_updates?
					freeze					frozen?
					valid?					invalid?
					validate					validate_on_create					validate_on_update
					run_callbacks
						valid_with_callbacks?					valid_without_callbacks?
					reload
						reload_with_autosave_associations					reload_without_autosave_associations
						reload_with_dirty					reload_without_dirty
					lock!
						lock_optimistically
						locking_enabled?
					destroy_with_callbacks					destroy_without_callbacks
						destroy_with_transactions					destroy_without_transactions
						destroy_without_lock
					associated_valid?
						associations_for_update
						clear_association_cache
						no_errors_in_associated?
					after_create					before_create
						after_destroy					before_destroy
						after_update					before_update
						after_validation_on_create					before_validation_on_create
						after_validation_on_update					before_validation_on_update
						after_save					before_save
						after_validation					before_validation
					save					save!
						save_associated					save_associated!
						save_with_dirty					save_with_dirty!
						save_with_transactions					save_with_transactions!
						save_with_validation					save_with_validation!
						save_without_dirty					save_without_dirty!
						save_without_transactions					save_without_transactions!
						save_without_validation					save_without_validation!
						save_with_unsaved_flag					save_without_unsaved_flag
					attributes					attributes=					attribute_present?					has_attribute?
						unserializable_attribute?					unserialize_attribute
						update_attribute					update_attributes					update_attributes!
							attributes_before_type_cast
							attribute_for_inspect
							attribute_names
							attribute_types_cached_by_default
							column_for_attribute
							query_attribute
							reject_new_nested_attributes_procs
							skip_time_zone_conversion_for_attributes
							time_zone_aware_attributes
							respond_to_without_attributes?
						read_attribute					write_attribute
							read_attribute_before_type_cast
							write_attribute_without_dirty



[-ecolinux-config-steps-]
[-vim-]
	[-vimScript-]
	[-vimWindowTab-]
[-RubyMainOTL-]
	[-hpricot-]
[-RailsApache-]
	[-railsDebuggers-]
	[-railsDBapi-]
	[-rails_activescafhold-]
##Linode	cd ~;rm vimhomeold.tar*;tar -cvf vimhomeold.tar .vim* *vim* .ve_* MyWiki/ .*rc  ;gzip vimhomeold.tar; cd -
##PLUG-INS

	#YANKTMP.---------------------------------------------------------------------------------------
		vim 他のファイルにコピペするプラグインyanktmp.vim 2009 年 7 月 16 日
		しかしyanktmp.vimプラグインを使うことで解決。
		１．yanktmp.vimをダウンロード
		ダウンロードは以下より
		http://www.vim.org/scripts/script.php?script_id=1598

		２．ダウンロードしたyanktmp.vimファイルをプラグインディレクトリに配置する。
		/Users/<username>/.vim/plugin/yanktmp.vim

		３．.vimrcに以下を追記する
		map sy :call YanktmpYank()<CR>
		map sp :call YanktmpPaste_p()<CR>
		map sP :call YanktmpPaste_P()<CR>

		コピーしたい箇所を選択して、ｓｙでコピーして、他のタブ（プロセス）に切り替えてsp(またはsP)でペースト。
		※spとsPの違いは、pとPの違いと一緒一

	#SURROUND.---------------------------------------------------------------------------------------
		with the cursor on "Hello world!  (iw is a text object.The "." command will work with ds, cs, and yss with repeat.vim, vimscript #2136.)
		dsの中ではtがタグを表現する。以下の文章(*はカーソルの位置) iwは、inner word。
		#
		ySS	インデントするyss
		yssb or yss) .		({ Hello } world!)
			ysテキストオブジェクトを使ったcsができる。"Hello *world!"に対して「ysiw)」とすると"Hello (*world!)"
			yss	カレントラインに対するcs。
			yS	インデントするys
		#changing side-quotaton:
		cs"'							"Hello world!" to 'Hello world!'
		cs'<q> to change it to <q>Hello world!</q>
		cst" to get "Hello world!"
		ds" .  Hello world!
		dst		remove side tags
		di		remove innertext
		Revert to the original text: ds{ds) Hello world!
		Emphasize hello:	ysiw<em> <em>Hello</em> world!
		#visual mode combo:	 V-S<p class="important">.  <p class="important"> <em>Hello</em> world! </p>
		カスタマイズ
			括弧やタグみたいに自分の好きな文字を入れる時は以下のようにする。
			let g:surround_45 = "<?php \r ?>"
			これは-が押されたときにPHPタグを指定できる。surround_45の45が-を示している。-のASCIIコードが45．-のASCIIコードを調べるには:echo char2nr
			("-"))とすればよい。

		install details
			Extract to ~/.vim, or ~\vimfiles (Windows).  You'll need to regenerate helptags (fill in the install path below)
			:helptags ~/.vim/doc

	#RUBY-MACRO----------------------------------------------------------------------------------------
		Typing "for" on a blank line will result in
			for  in
			end

		with the cursor positioned before the "in".
		The same will happen with "while", "until", and so on.  But if the line is not blank, "for" will just insert itself.
		Also, symbols like " are inserted in matching pairs, with the cursor in between.
		"K" runs ruby on the current buffer, and the "F1" function key puts a line #!/usr/math/bin/ruby on the first line.  (You will have to edit
		this part).
		install details
			put this in an ftplugin directory in your runtime path.  or Put something like the following line in your .vimrc file:
			autocmd Filetype ruby source ~/.Vim/ruby-macros.vim
	#SNIPMATE----------------------------------------------------------------------------------------
		snipMate.vim aims to be an unobtrusive, concise vim script that implements some of TextMate's snippets features in Vim. A snippet is a
		piece of often-typed text that you can insert into your document using a trigger word followed by a <tab>.

		For instance, in a C file using the default installation of snipMate.vim, if you type "for<tab>" in insert mode, it will expand a
		typical for loop in C:

		for (i = 0; i < count; i++) {

		}

		To go to the next item in the loop, simply <tab> over to it; if there is repeated code, such as the "i" variable in this example, you
		can simply start typing once it's highlighted and all the matches specified in the snippet will be updated.


		snipMate.vim has the following features among others:
		  - The syntax of snippets is very similar to TextMate's, allowing easy conversion.
		  - The position of the snippet is kept transparently (i.e., it does not use marks/placeholders inserted into the buffer), allowing you
		to escape out of an incomplete snippet, something particularly useful in Vim.
		  - Variables in snippets are updated as-you-type.
		  - Snippets can have multiple matches.
		  - Snippets can be out of order. For instance, in a do...while loop, the condition can be added before the code.

		Bug reports, feature requests, etc. are welcome and can be emailed to me or submitted on the issue tracker: http://code.google.com/p/
		snipmate/issues/list
		For a quick introduction, see this screencast: http://vimeo.com/3535418
		For more help see the  documentation that comes with snipMate in ~/.vim/doc/snipMate.txt.

		install details
			Requires Vim 7 or higher.
			filetype plugin on" to your .vimrc
			unzip snipMate.zip -d ~/.vim (or equivalent, e.g. $HOME\vimfiles on Windows)
			:helptags ~/.vim/doc

		Keep in mind this will overwrite any files included with older versions of snipMate, including the default *.snippets files for the
		included filetypes. If you don't want your snippets overwritten, just name them name them differently than the default snippets, e.g.
		c-mysnips.snippets.


	#TEMPLATE.---------------------------------------------------------------------------------------
		Vimで新しいファイルを作ったときに、拡張子に応じて自動的にテンプレートを適用する方法です。
		まずは準備として、VIMHOMEを設定。.bashrcとか.zshrcに以下の設定。
			export VIMHOME=$HOME/.vim
		次に.vimrcの設定。autocmdを使って、テンプレートを読み込むようにします。
			autocmd BufNewFile * silent! 0r $VIMHOME/templates/%:e.tpl
		これでvimで新規ファイルを作成すると、その拡張子に応じて$HOME/.vim/templates以下の<拡張子>.tplファイルをテンプレートとして読み込む設定が
		できました。
		あとはテンプレートファイルの作成。例えばhtmlファイルならこんな感じ。
			$ vim $HOME/.vim/templstes/html.tpl
			<html>
			<head>
			<title></title>
			</head>
			<body>
			</body>
			</html>
		拡張子に応じたテンプレートを作ったら、後はその拡張子のファイルを作成したら、自動でテンプレートが適用されます。

	#CHINESE.---------------------------------------------------------------------------------------
		VimIM 是?? Vim 玩家??的插件，可作? Vim 内嵌中文?入法。只要?的 Vim 能?示中文，?就能用 Vim ?入搜索中文。
		install details
		(1) download any data file you like from
			http://code.google.com/p/vimim/downloads/list
		(2) save this file and the data file in the Vim plugin directory

		Usage (1): [in Insert Mode] 【点石成金】没有所?模式??
		  # to insert: type keycode and hit <C-\> to trigger
		  # to search: hit '/' or '?' from popup menu

		Usage (2): [in Insert Mode] 【中文?入模式】 Ctrl-6 切?
		  # [dynamic] mode: any valid key code => Chinese
		  # [static]  mode: Space=>Chinese  Enter=>English
		官方网址:  http://vim.sourceforge.net/scripts/script.php?script_id=2506
		新???:  http://groups.google.com/group/vimim
		??下?:  http://code.google.com/p/vimim/downloads/list
		最新主?:  http://maxiangjiang.googlepages.com/vimim.html
		程式框架:  http://maxiangjiang.googlepages.com/vimim.vim.html

