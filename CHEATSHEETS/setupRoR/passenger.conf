httpd_passenger
	注意：
		問題：Address already in use: make_sock: could not bind to address [::]:3000
		回答：passengerは/etc/httpd/conf.d/passenger.*confを全部ロードしようとするので/etc/httpd/conf.d/passenger.*confの拡張子はconf*****で多重ロード防止をしないと起動しない。
		
	passeng/etc/httpd/conf.d/passenger.conf
	#SSL対応状況確認 以下で ’ssl_module’が表示されること；
# $ sudo apachectl -M |sort
#SSL対応してなければ関連ソフトウエアをインストールすること（例：RedHat系Linuxのばあい）；
 # $ su- root; yum/apt-get install curl-devel mod_ssl; /usr/local/bin/passenger-install-apache2-module

# opensslでのキー生成(-outで生成 -inで確認表示)：
# $ cd ~/.dotfiles/SI/
# $ openssl genrsa -out server.key 1024
# $ openssl rsa -in server.key -text -noout
# $ openssl req -new -key server.key -out server.pem -sha1
# $ openssl req -in server.pem -text -noout
# $ openssl x509 -in server.pem -out server.crt -req -signkey server.key -days 365 -sha1


# To Passenger Setting
LISTEN 3000
LISTEN 3001
LoadModule passenger_module /usr/local/lib/ruby/gems/1.8/gems/passenger-2.2.15/ext/apache2/mod_passenger.so
<IfModule mod_passenger.c>
  PassengerRoot /usr/local/lib/ruby/gems/1.8/gems/passenger-2.2.15
  PassengerRuby /usr/local/bin/ruby
</IfModule>

PassengerMaxPoolSize 25
PassengerUseGlobalQueue on
PassengerMaxRequests 400
PassengerResolveSymlinksInDocumentRoot on
# To Enju-Flower
<VirtualHost *:80>
  SSLEngine on
  SSLCertificateFile    /var/www/.dotfiles/SI/server.crt
  SSLCertificateKeyFile /var/www/.dotfiles/SI/server.key
  # XXX: SSLProtocol all -SSLv2

    # ServerName dev.iss.ndl.go.jp
    ServerName localhost
    DocumentRoot /opt/enju-flower/public

    RailsEnv production
    #onobayashi##########
    # RailsBaseURI /
    RackBaseURI /
    #####################
    PassengerEnabled on
    PassengerLogLevel 3

    <Directory /opt/enju-flower/public>
        AllowOverride all
        Options -MultiViews
    </Directory>
   # ↓ CentOS 6.9boxにはmod_proxyはくみこんであるのを利用. balancerは不使用
    ProxyPass /admin http://localhost:3000/admin
    ProxyPassReverse /admin http://localhost:3000/admin

</VirtualHost>

# To Enju-Management
<VirtualHost *:3001>
  SSLEngine on
  SSLCertificateFile    /var/www/.dotfiles/SI/server.crt
  SSLCertificateKeyFile /var/www/.dotfiles/SI/server.key
  # XXX: SSLProtocol all -SSLv2
    ServerName localhost
    DocumentRoot /opt/enju-flower/public
    RailsBaseURI /admin
    RailsEnv production
    RackBaseURI /
    PassengerEnabled on
    PassengerLogLevel 3
    <Directory /opt/enju-management/public>
        AllowOverride all
        Options -MultiViews
    </Directory>
</VirtualHost>



		#redmine の#passenger設定
		▼Redmineの初期設定とデータベースのテーブル作成
rake db:reset|create
rake generate_secret_token
rake db:migrate

▼Passengerのインストール
gem install passenger # --no-rdoc --no-ri
▼PassengerのApache用モジュールのインストール
passenger-install-apache2-module
  =>インストール語にhttpd.confやpaggenger.confへのLoadModule指定例やVirtualHost指定例が表示される。
　cf: SSL有効化やSSLキー生成も書いてある https://dynalist.io/d/igsFMK7yhRdn5MGOFhcsgABu
▼Passengerの基本設定。
vim /etc/httpd/conf.d/passenger.conf
# Passengerの基本設定。
# passenger-install-apache2-module --snippet を実行して表示される設定を使用。
LoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so
PassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17
PassengerRuby /usr/local/bin/ruby
RailsEnv development|production
# Passengerが追加するHTTPヘッダを削除するための設定（任意）。
RailsBaseURI /redmine #<=config.ru は使われなくなり、RAILS_RELATIVE_URL_ROOT だけがセットする非Rack設定
Header always unset "X-Powered-By"
Header always unset "X-Rack-Cache"
Header always unset "X-Content-Digest"
Header always unset "X-Runtime"
# 必要に応じてPassengerのチューニングのための設定を追加（任意）。
# 詳しくはPhusion Passenger users guide(http://www.modrails.com/documentation/Users%20guide%20Apache.html)をご覧ください。
PassengerMaxPoolSize 20
PassengerMaxInstancesPerApp 4
PassengerPoolIdleTime 3600
PassengerUseGlobalQueue on
PassengerHighPerformance on
PassengerStatThrottleRate 10
RailsSpawnMethod smart
RailsAppSpawnerIdleTime 86400
RailsFrameworkSpawnerIdleTime 0
▼Apache上のPassengerでRedmineを実行するための設定
ln -s /opt/redmine-2.1.2 /opt/redmine
chown -R apache:apache /opt/redmine-2.1.2
chown -R apache:apache /opt/redmine

①シンボリックリンクの作成
ln -s /opt/redmine/public /var/www/html/redmine
②Apacheへの設定追加
/etc/httpd/conf.d/passenger.conf
②Apacheの起動および自動起動の設定
service httpd start
chkconfig httpd on
w3m http://localdev/redmine
login-with: admin/admin



============================








#mod_rails-passenger RailsMaxPoolSize =2でもlinode360で不安: mongrel cluster N=3 で50K/dayこえたら検討
#-----------------------------------------------------------------------------
you@ecolnux:~/RoRapps/2chnrg$ vmstat -S M
	you@ecolnux:~/RoRapps/2chnrg$ passenger Node=1 below
	procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
	 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa
	 3  0    196      8      1     27    0    0    27    19  144   98  9 14 75  2
	you@ecolnux:~/RoRapps/2chnrg$ mongrel_cluster Node=1 below
	procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
	 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa
	 2  0    126     13      4     41    0    0    27    19  144   98  9 14 75  2
	you@ecolnux:~/RoRapps/2chnrg$ mongrel_cluster Node=2 below
	procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
	 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa
	 4  0    126      6      3     32    0    0    27    19  144   99  9 14 75  2
	-------------------------------------------------------------------------------


-------------------------------------------------------------------------------
##Passenger(mod_rails) by Lai HongLi & Ninh Bui
	■使ってみて
		なぜかNewsサイトではスタイルシートが有効化されない。
		あと速度がめちゃくちゃ遅かった。
		設定の問題かもしれないのでもう少しいじってみる。
	■参考リンク
		公式サイト　http://www.modrails.com/install.html
		マニュアル　http://www.modrails.com/documentation/Users%20guide.html
		http://rails20.jp/2008/04/passenger/

	■Prep
		passengerはmod_rewriteとmod_aliasと衝突する。
		mod_rewriteを使いたい場合、RailsAllowModRewriteを使えばよい。ただし、先述の問題を回避するために、.htaccessを削除するかリライトルールを書き換える必要がある。


		mod_rails(passenger)で起動すると、143Mほど確保		Linode 360 =360MB
		cf.　mongrelで動かしてみると、44Mほどメモリ確保
	　･passengerはrootでは動かないので、かならずrailsのディレクトリ以下の所有ユーザーはroot以外(apacheなど)にしておく
	   error ":nonexistence がでる。
		Railsアプリケーションが動作するユーザーは$RAILS_ROOT/config/environment.rbのオーナーとなりますが、 environment.rbがrootの場合はnobodyユーザーで動作します。このとき、オーナーがrootである$RAILS_ROOT/log ディレクトリや$RAILS_ROOT/tmpディレクトリに書き込みができず、アプリケーションが動作しないことがあります。
		useradd you
		passwd you
		chown -R you:you /root/2chnrg
		mkdir /home/you
	　* apache MPW(multi-process-worker)

	■ざっと手順だけ
	   1. Railsアプリを適当な場所にUP
	   2. DocumentRoot以下に[RAILSROOT]/publicへのシンボリックリンクを作成
	   3. httpd.confに設定を追加
	   4. Apache再起動

	■passengerをインストールsudo su /rootで全行程
		sudo su
		#Apacheはソースから入れたので環境変数を定義しておく。
		export APXS2=/usr/local/apache2/bin/apxs;export PATH=/usr/local/apache2/bin/:$PATH
		sudo gem install fastthread passenger
		passenger-install-apache2-module
		passengerのインストールが完成したら、apacheに組み込む。
			* GNU C++ compiler... not found
			* Ruby development headers... found
			* OpenSSL support for Ruby... found
			* RubyGems... found
			* Rake... found at /usr/bin/rake
			* Apache 2... found at /usr/sbin/apache2
			* Apache 2 development headers... not found
			* Apache Portable Runtime (APR) development headers... not found
			* fastthread... found
		not found(赤字）がある場合は、それぞれインストールをする。
		今回のケースだと次のとおり
			% sudo apt-get install build-essential
			% sudo apt-get  install apache2-threaded-dev 
	  


		$ sudo apt-get install apache2-prefork-dev
	　色々ないけど、教えてやるよーという親切インストーラー教えてくれた結果が以下
			Installation instructions for required software
			* To install Apache 2 development headers:
			Please run yum install httpd-devel as root.
		   * To install Apache Portable Runtime (APR) development headers:
			Please run yum install apr-devel as root.
			* To install Apache Portable Runtime Utility (APU) development headers:
			Please download it from http://httpd.apache.org/
			(APR Utility is an integrated part of Apache.)

	　自分の場合、yum install httpd-develでapr-develもインストールされた。
	　インストール終了。その後もhttpd.confに追記する箇所や、バーチャル設定の書き方を教えてくれるのでメモ。

			The Apache 2 module was successfully installed.
		
			Please edit your Apache configuration file, and add these lines:
		
			LoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.2/ext/apache2/mod_passenger.so
			PassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.2
			PassengerRuby /usr/bin/ruby
		
			Deploying a Ruby on Rails application: an example
		
			Suppose you have a Ruby on Rails application in /somewhere. Add a virtual host
			to your Apache configuration file, and set its DocumentRoot to
			/somewhere/public, like this:

	■ append to httpd.conf
	   LoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.4/ext/apache2/mod_passenger.so
	   PassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.4
		PassengerRuby /usr/bin/ruby1.8

	■Virtualhost設定例：
			<VirtualHost *:80>
			ServerName www.yourhost.com
			DocumentRoot /somewhere/public # <-- be sure to point to 'public'!
			</VirtualHost>
	■Virtualhost設定例a2：http://hogerails/redmine
		<VirtualHost *:80>
		 ServerName hogerails
		 DocumentRoot /var/hoge/rails
		 RailsBaseURI /redmine
		 RailsBaseURI /hogesys
		</VirtualHost>
		この設定の場合、/var/hoge/rails/redmineとしてシンボリックリンクを作ればOKです

		# モジュールとサイトを有効にする
		$ sudo a2enmod rails
		% sudo a2ensite [virtual-host-name]
		Apacheの再起動
		% sudo /etc/init.d/apache2 restart
	■トラブルシューティング
	　･下記のようなエラーがhttpdのエラーログに出ていたら
		 *** Passenger ERROR (ext/common/ApplicationPoolServer.h:602):
		Cannot execute /usr/lib/ruby/gems/1.8/gems/passenger-2.2.2/ext/apache2/ApplicationPoolServerExecutable: 許可がありません (13)
		[Wed May 13 11:22:46 2009] [notice] SELinux policy enabled; httpd running as context root:system_r:httpd_t:s0
		[Wed May 13 11:22:46 2009] [notice] suEXEC mechanism enabled (wrapper: /usr/sbin/suexec)
	　以下のように対応
		#setenforce 0
		
	   *undefined method `cache_template_loading=' for ActionView::Base:Class
		config/environments/production.rbの以下の記述をコメントアウト
		# config.action_view.cache_template_loading = true

	   *CGI::Session::CookieStore::TamperedWithCookie ?
		ブラウザのクッキーをクリア

	   *no such file to load -- application
		config/environments以下の設定ファイル
		#config.cache_classes = true	#"require"でモジュールをロード
		config.cache_classes = false	#falseにすると"load"を使う everytime

	   *route missing	500
		# in config/environments/production.rb
		（略）
		config.action_controller.relative_url_root='/hogesys'

	## Passengerのチューニング
	いずれもhttpd.conf中で設定します。なお、これらはApache全体に対する設定であり、バーチャルホストごとの指定はできません。
		RailsMaxPoolSize Apacheサーバ上で生成するRailsのインスタンス数を設定します。
		デフォルト値は20ですが、メモリが少ない環境では減らすことを検討してください。アクセスが集中した際にメモリが不足して極端にレスポンスが悪化する恐れがあります。"Passenger Users Guide":http://www.modrails.com/documentation/Users%20guide.html では、メモリ256MBのVPS環境では2、2GBのメモリを搭載したサーバでは30が推奨されています。
		RailsPoolIdleTime Railsインスタンスへのリクエストがこの設定値以上の時間無かった場合に、インスタンスを終了させます。
		デフォルト値は120(秒)です。この値が小さすぎると、インスタンスの生成・終了が頻繁に行われることになりレスポンスが悪化します。逆に大きすぎると必要以上に長時間メモリを占有されてしまいます。Passenger Users Guideでは、ユーザーのwebサイト上の平均滞在時間の2倍を推奨しています。例えば1回のRedmine上での平均的な作業時間が5分の場合、推奨設定値は600(秒)です。
	Passenger 2.0.6以降でGlobal Queuingを有効にするには、Apacheの設定ファイルで以下の設定を行います。
		PassengerUseGlobalQueue on
	passenger-statusコマンド
	autoindex: Aliasを切ったディレクトリに対して PassengerEnabled off

#passenger高速化
	RailsアプリをPassengerを使ってApacheでホストしてる場合、リクエストがあるとアプリがインスタンス化されます。次回リクエストがあったときにア
	プリのインスタンスが存在すれば、レスポンスが速くなります。


	デフォルトでは、300秒でインスタンスは削除されます。ということは、インスタンスをずっと保持しておけば、レスポンスは最速なわけです。その設
	定が、これ。httpd.confに書きます。

	PassengerPoolIdleTime 0

	Railsの表示高速化にて動的なイメージやCSSをキャッシュファイルとする作戦¶
	イメージやCSSなどを、管理者が更新したりする場合で、イメージやCSSはpublicなところにおいてもよい場合
	イメージやCSSを動的に生成するためのコントローラを作成し、キャッシュ保存先を本来のpublic内部に設定する
	管理者がイメージを登録した際に、publicにキャッシュファイルが作成され、観覧時には常にそれを見るようになる
	管理者がイメージを削除した際には、publicからキャッシュファイルが削除されるので、観覧する人はイメージがみられなくなる


-------------------------------------------------------------------------------
#サーバー機能飽和したらアパッチ再構成 a2dismod asis alias status log_config auth_basic authn_file authz_groupfile authz_hosts
	#" rails passenger 不要 a2dismod " disable needless apache modules to speed up
	初期ロード　*] core *] mod_env
	ACCEPTヘッダ認識用途 *] mod_negotiation
	#perlなどCGI *] mod_cgi *] mod_actions
		DIR~ 処理 *] mod_dir *] mod_userdir *] mod_autoindex
		SSI	*] mod_include
	#PASSENGER	*] prefork
	#多分永久に使わない
		HTTP-response-headerかきかえ　*] mod_asis
		URL変換とリダイレクト用途 *] mod_alias
		送信状況表示用 *] mod_status
	#Land.toと統合後再組み込み
		*] mod_log_config
		*] mod_auth_basic
		*] mod_authn_file
		*] mod_authz_groupfile
		*] mod_authz_host

