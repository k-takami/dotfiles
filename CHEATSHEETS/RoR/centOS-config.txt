chkconfig --list netfs漢字
[-ecolinux-config-steps-]
[-vim-]
	[-vimScript-]
	[-vimWindowTab-]
[-RubyMainOTL-]
	[-hpricot-]
[-RailsApache-]
	[-railsDBapi-]
	[-rails_activescafhold-]
	[-hpricot-]#test
	漢字




#heroku
gem install heroku
ssh-keygen -t rsa
heroku keys:add /root/.ssh/id_rsa.pub
#すでにデプロイされてるものを取得
git clone git@heroku.com:tkt-redmine.git

#すでにデプロイされてるものを取得 createしたばあいはgit repo名も表示される
heroku [(create|destroy|rename)] [heroku_app_name]

#origin以外のremote repoとしてheroku-repoを登録してpush
# git clone とかして持ってきたときには明示的に追加する
git remote add heroku git@heroku.com:[app-name].git
git push heroku master
#ここでheroku側のBundle install & bootupがおきるが､RDBMSがpostgresql以外はこけ
るので事前点検すべし







#RVM

#RVM
   bash -s stable < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer )

   vi ~/.bash_profile
   [[ -s "/root/.rvm/scripts/rvm" ]] && source "/root/.rvm/scripts/rvm"
   source /etc/profile.d/rvm.sh
    . ~/.bash_profile

   インストール可能なRubyのバージョンを確認します。
   $ rvm list known
   $ rvm use ruby-2.0.0-p195@rails3.2.13 --default


  root@localhost:/opt/me/tkt-redmine# rvm list
    rvm rubies
    => ruby-1.9.3-p429 [ i686 ]
     * ruby-2.0.0-p195 [ i686 ]

      # => - current
      # =* - current && default
      #  * - default

  rvm use ruby-2.0.0-p195
    rvm gemset use rails3ruby2 --default
    root@localhost:/opt/me/sample# rails -v
    Rails 3.2.13
  rvm use ruby-1.9.3-p429
    rvm gemset use rails323 --default
    rvm gemset rename rails323 rail40

  #新ruby のインストール
　　rvm install x.x.x


#rails3, rails4アプリ初期化
  #prep
  rvm use ruby-2.0.0-p195
  rvm gemset create rails405
  rvm gemset use rails405

　#required for rails3&4
  gem install therubyracer --version=0.10.2
　#required for rails4 only
  NOKOGIRI_USE_SYSTEM_LIBRARIES=1
  gem install nokogiri

  #commnt out all of therubyracer indication in Gemfle
  # https://github.com/cowboyd/libv8/issues/62
  bundle install

  #commnt in therubyracer indication in Gemfile to pass rake db:*** commands
  #otherwise you will see an error message "Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs for a list of available runtimes"
  rake db:setup

  #bootup
  git clone ***
  cd ***
  #copy frequent settngs
    cat config/database.yml ;ls -alt db; ls -alt db/migrate/
    cat .gitignore
    cat config/environments/development.rb
    cat Gefiles

  rake db:setup







#UNIX万能コマンド
　　 --help |grep  -nirE "(ignor|exclu|skip|行|名|\-e|show|list|disp|time)"






centOS

date -s "03/13 19:13 2013"

  http://www.linuxmaster.jp/linux_blog/2011/09/vmwaredevice-eth0-does-not-seem-to-be-present-delaying-initialization.html
  service network restart
	apachectl stop

  #nfs-disable
    chkconfig --list netfs
    chkconfig netfs off



■エラーメッセージDevice eth0 does not seem to be present, delaying initialization
	１．コマンド「/sbin/ifconfig -a」を実行してeth0が存在しない事を確認する
	２．「/etc/udev/rules.d/70-persistent-net.rules」ファイルを編集し、NAME="eth0"と記述されてる行を削除し、
	　　NAME="eth1"と記述されている箇所をNAME="eth0"に書き換えサーバーを再起動する
    ★vmware環境では デフォルトゲートウェイ=VMnet8のIPを指定
　　★windowsのipconfig結果ではなく、「Vmware仮想ネットワーク設定→NAT設定
ボタン」で表示されるIPアドレスを使う。通常既定値は最下位アドレスが2
	３．「/sbin/ifconfig -a」を実行してeth0のMACアドレスを取得する
	４．３で取得したMACアドレスを「/etc/sysconfig/network-scripts/ifcfg-eth0」ファイルのHWADDRの箇所にエディタで設定する
  ★VMwareをつかうときは、hostOSのVMware Network Adapter VMnet8のIPアドレスとマスクで通信しなければいけない。そのIPアドレスとサブネットクラス。サブネットマスクに注意。
	５．コマンド「ifup eth0」 を実行してeth0を起動（またはLinux自体を再起動）
	６．ネットワークに接続できることを確認する
  ★/etc/sysconfig/network でGATEWAY=****が固定的に（staticに）かいてあると、
DHCP環境でのdefault gatewayがまずいIPになる。

chkconfig --list
chkconfig --level 2345 httpd off

...が停止していますが PID ファイルが残っていますmaster が停止していますが PID ファイルが残っています
	--> ls -alt /var/run/*.pid ; rm /var/run/postmaster-9.2.pid
alternatives --display mta
rm /var/lock/subsys/postfix

DNSの設定
/etc/resolv.conf
nameserver 192.168.137.1  # VMnet8のIPアドレスを指定

#~/.gemrc
gem: --no-ri --no-rdoc

#removi rdoc and ri doc
rm -r `gem env gemdir`/doc



#.*rc
	 gem install wirble
	 cp *.rc ~/

#debugger:NG?
	gem install debugger
	vi RAils.root/plugin/Gemfile
		gem 'debugger'

	#NG
	gem install ruby-debug19
	gem install linecache19
	gem install ruby-debug-base19x --pre
	gem install ruby-debug-ide --pre




 	------------------


#Rails予約語　:-aで終わるロマンシュ語っぽい英語､information,policeもか?

#rvm-combination
 oksales     ;  rvm use ruby-2.0.0-p195; rvm gemset use rails405
 rubylancer  ;  rvm use ruby-1.9.3-p429; rvm gemset use rails323
 samplescodes;  rvm use ruby-1.9.3-p429; rvm gemset use rails323

#typus http://docs.typuscmf.com/index.html#installation
  gem 'typus'
  bundle install
  rails generate typus
  vi config/typus/[modelname].yml
    #to_labelがrenderエラー｡列名の定義もこれらモデルごとのファイルでおこなう｡
    # default: to_label
    default:

  #uninstall
    rails destroy typus
  #customize view
    rails generate typus:views

　#生成でひっかかればコメントアウト! 設定ファイルは config/typus/*yml, config/initializers/typus*

#typus リスト制御部分:調査中
  root@localhost:/opt/me/oksales_unistandard# grep -lnirE "@(data|items|data) *=" /usr/local/rvm/gems/ruby-2.0.0-p195@rails405/bundler/gems/typus-d06f85c7b345/* --exclude=*.sw* --exclude=*~ --exclude=*spec* --exclude=*log  --exclude=*svn* --exclude=*.log

sssssssssssssssss
/usr/local/rvm/gems/ruby-2.0.0-p195@rails405/bundler/gems/typus-d06f85c7b345/app/controllers/admin/resources_controller.rb
149   def get_objects
150     binding.pry
152     @resource = @resource.with_deleted

#N年に一度のPCメンテ作業
　モバイルバッテリー残電力チェック　:一番確実なのは純正バッテリー空にしてモバ
イルバッテリーだけで起動して残を目チェックすること｡電源オプションなどは期待した度差をしない

  HDDデータ移管: フォーマットはNTFSできまり｡パーティション統合はするな｡ウイル ス飛散を助長する｡

#ActiveADmin n Rails4　結論:typusの様には自動で既存モデルをよまないので 後述★の様な個別指定が要る｡また､既定で日本語ロケールを表示はしない｡ それから､ 保存しようとするとStrong parameter対応の記述をコントローラー単位でかかねばエ ラーになる｡ typusではこれらが全自動｡
  vim Gemfile
    gem 'activeadmin', github: 'gregbell/active_admin'#, branch: 'rails4'
  rails g active_admin:install --force
  ★rails g active_admin:resource product

  vim config/application.rb
    #coment out
    #     I18n.enforce_available_locales = true

  vim config/routes.rb
    #最下実行行に移動した方が無難
       devise_for :admin_users, ActiveAdmin::Devise.config
    end

  vim config/initializers/kaminari.rb
    #will_paginate使用の場合､以下を追加
    Kaminari.configure do |config|
      config.page_method_name = :per_page_kaminari
    end

  vim /opt/me/oksales_unistandard/db/migrate/20140208075341_create_active_admin_comments.rb
    change_tableブロック内を一切コメントアウト

  rake db:migrate
  vim config/application.rb
    #commentしかのをもどす｡
  bundle exec rails s
  #open localhost:3000/admin
  #login;
    Email: admin@example.com
    Pass: password



#DSL
  #CSS & SLIM/HAML
    mabopako: margin/border/padding/contents
    医者ｸラップ: .=> class, # =>ID
  #prototype.js
    #utility function :  $FARH(obj) (Fetch/Array/Range/Hash---conversion of Object)
  #DNS records
    A-CNAME NS-MX-SOA : Address





#Ruby
present? blank? だけでなく try?(:symbol,args4symbol

Mysql2::Error: This version of MySQL doesn't yet support 'LIMIT & IN/ALL/ANY/SOME subquery':
User.where(:id=>User.limit(3))じゃなくてUser.where(:id=>User.limit(3).map(&:id))で回避(rails3.2にて発生)

　　　

----------------------------------------------------------------


指示等なし、避難準備、避難勧告、避難指示、警戒区域


#diff
	C:\VMstatic\0000000-215\trunk\document\技術検討\AtomFeed
		・TOPプロジェクトにて、Feed用のカスタムクエリを作成し、購読させる
	i	・カスタムクエリの範疇にて、抽出条件のカスタマイズが可能



#redmine-plugin
	rails g redmine_plugin_model lgdis issues_addtion_datum id:integer:yes issue_id:integer

      create  plugins/lgdis/app/models/issues_addtion_datum.rb
      create  plugins/lgdis/test/unit/issues_addtion_datum_test.rb
      create  plugins/lgdis/db/migrate/005_create_issues_addtion_data.rb




mail
	BCC=ON

	#A社からは外部不特定通信先へのSSH通信(:443)とSMTP通信(:25)はみとめられていない｡したがってSMTP機能をつかったﾒｰﾙ配信機能はローカルホスト環境で行った｡



	#Redmine admin>adminユーザー情報変更
	http://192.168.18.130:3000/users/1
		メールアドレス	root@localhost.localdomain　に設定
		password再設定
		time-zone	GMT+9 Tokyo 再設定

	#Redmine admin>設定>管理>メール通知画面　右下最下部のテストメール送信リンクでの確認
	http://192.168.18.130:3000/settings/edit?tab=notifications
		デフォルトの送信者名redmine@example.netを適宜変更して保存してから送信リンクをクリックしてテストする｡保存しないでクリックするとメールヘッダーの送信者名は変わらない｡
i #
  #Rails環境設定
#設定編集 vi /opt/fix/LGDIS/config/environments/development.rb

	#規定値:config.action_mailer.raise_delivery_errors = false　を以下のごとく変更;
	config.action_mailer.perform_deliveries = true
	config.action_mailer.raise_delivery_errors = true
	Rails.application.config.action_mailer.perform_deliveries = true
	Rails.application.config.action_mailer.raise_delivery_errors = true

  #Uglifier無効化
    # Compress JavaScripts and CSS
    #some_body switched from true to false below
    config.assets.compress = false
    #some_body transplanted from development.rb
    # 必要に応じてproduction.rbにも以下を記述 Expands the lines which load the assets
    config.assets.debug = true




#IRB/ConsoleモードでRailsを起動し､以下のテストコマンド発行
<SMTP-Plain>
Lgdis::ExtOut::Mailer.setup( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "root@localhost.localdomain").deliver
Lgdis::ExtOut::SMTP_JichiShokuin.send_message({"mailing_list_name" =>"root@localhost.localdomain", "title" => "title漢字", "message" =>"sss漢字-------------"}, false)
Lgdis::ExtOut::Mailer.setup( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "apl@localhost.localdomain").deliver
Lgdis::ExtOut::Mailer.setup_auth( "apl@localhost.localdomain","SMTP-AUTH引数0", "########################################").deliver

/usr/local/lib/ruby/gems/1.9.1/gems/mail-2.4.4/lib/mail/message.rb
   229                                  debugger
   230          #debugcode  ActionMailer::Base.smtp_settings  ActionMailer::Base.raise_delivery_errors   ActionMailer::Base.perform_deliveries
=> 231          delivery_handler.deliver_mail(self) { do_delivery }

 "utf-8", "some_body@di-system.co.jp", "some_body@di-system.co.jp", "AlphaNumerics")


<SMTP-AUTH>
★Rootパスワードは社外秘
Lgdis::ExtOut::Mailer.setup_auth( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "root@localhost.localdomain", "root", "1qazxsw2").deliver
Lgdis::ExtOut::Mailer.setup_auth( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "root@localhost.localdomain", "apl", "AlphaNumerics").deliver
★MTAサーバー(postfixなど)にSMTP-AUTHの設定がされていない状況で､AUTHのコマンドを叩くと当然失敗する｡
これを複数回くりかえすと､不正接続とみなされて､正しいSMTP-PLAINでのコマンドも失敗する｡
→設定に工夫をくわえると解消される可能性あり｡

 Lgdis::ExtOut::SMTP_JichiShokuin.send_message({"mailing_list_name" =>"some_body@di-system.co.jp", "title" => "title漢字", "message" =>"sss漢字-------------"}, false)
[224, 233] in /usr/local/lib/ruby/gems/1.9.1/gems/mail-2.4.4/lib/mail/message.rb
   224      #  mail = Mail.read('file.eml')
   225      #  mail.deliver
   226      def deliver
   227        inform_interceptors
   228        if delivery_handler
=> 229          delivery_handler.deliver_mail(self) { do_delivery }
(rdb:1) delivery_handler.deliver_mail(self) { do_delivery }
SMTP-Plain postfix bug
Net::SMTPFatalError Exception: 554 5.7.1 <some_body@di-system.co.jp>: Relay access denied
Gmail bug
Encoding::CompatibilityError Exception: incompatible encoding regexp match (US-ASCII regexp with ISO-2022-JP string)
mail.body = mail.body.raw_source.encode('ISO-2022-JP', :invalid => :replace, :undef => :replace).encode('UTF-8')
mail.body = mail.body.raw_source.encode('iso-2022-jp', :invalid => :replace, :undef => :replace).encode('utf-8') #変換エラー対策




	#potfixログ確認
	tail /var/log/maillog



#SMTP-AUTH設定

	#curys-sasl
	cyrus-saslは非常に多機能で、
	一般的な テキスト 認証の他に暗号化認証も扱うことができますし、
	構築中のLinuxサーバー の ユーザーアカウント 名とパスワードをそのまま認証に使うことも、
	別の データベース を使って認証を行うこともできるようになっています。


	#install
		cyrus-sasl-xxxxxxx
		cyrus-sasl-plain


	vi /usr/lib/sasl2/smtpd.conf
		pwcheck_method: saslauthd


	service saslauthd start
		saslauthdを起動中:                                         [  OK  ]

	vim /etc/postfix/main.cf
		myorigin = $myhostname
		 "SMTP Auth"の利用を許可する
		smtpd_sasl_auth_enable = yes

		"anonymous"接続を拒否する。
		smtpd_sasl_security_options = noanonymous

		"OutlookExpress対応
		broken_sasl_auth_clients = yes

		smtpd_sasl_local_domain = $mydomain
		smtpd_recipient_restrictions =
		    permit_mynetworks,
		    permit_sasl_authenticated,
		    reject_unauth_destination,
		    permit_auth_destination,
		    reject

		    permit_mynetworksは、サーバー内のネットワーク、つまり内部からの利用を許可するものです。
		    permit_sasl_authenticated は、sasl認証できたものだけ受け入れる。
		    reject_unauth_destination で、認証できなかったものは、拒否する。
		    permit_auth_destination で、認証できたものは、受け入れる。
		    reject で、その他は、拒否する。

	    etc/init.d/postfix restart

	#curys-sasl password config
		/useradd some_body -s /sbin/nologin
		/usr/sbin/saslpasswd -c some_body
		/usr/sbin/sasldblistusers

		chgrp postfix /etc/sasldb
		chmod 640 /etc/sasldb

	#Mailer-config
		→「アカウント設定」→「サーバー」→「このサーバーは認証が必要」または「送信サーバーは認証が必要」にチェックを入れる。
		or
		→「送信(SMTP)サーバの設定」から「セキュリティと認証」の「ユーザ名とパスワードを使用する」にチェックを入れる

	    etc/init.d/postfix restart
	    または
	　　 service postfix restart
		#/etc/init.d/saslauthdも起動していれば成功　

	#参考:確認コマンド
		postfix　-n
		postfix check


SAMBA
	vi /etc/samba/smb.conf
	最終行に以下の記述を追加
	[opt]
	path = /home/apl
	read only = No

	#再起動する
	/etc/rc.d/init.d/smb restart

	#スタート＞ファイル名を指定して実行＞(VMのIP)でつながります
	#ネットワークドライブを割り当てると便利



================== ====================================
vim -S ~/session-130203 +VE +MRU
==================================================================


# Rubyコーディングスタイル
#
# then 省略
# .blank? .present?をつかう｡　.nil? .empty?はつかわない｡
# ※find_by_xxxという書き方はNG（元々あるメソッドを上書きしてし まうため）
#   find(:all, :conditions => ["name LIKE ?%", "A"], :order => "name ASC")
# ビジネスロジックはモデルに記入
# モデルは共通モデルクラスを継承
#  require_dependency 'model_helper'
#   class Foo < CustomModel extend ModelHelper
#
#文法チェックと警告
# ruby -wc <ファイル名>
	ruby -wTW2 <ファイル名>
#pwdのRDoc生成は　 rdoc -c utf8
#Rails全体の rake doc:app
#
# Stackはスタックを実装するクラスである。
class Stack

#RDoc コメントの付け方

■rdocの生成
rdoc は、手元でドキュメントを生成してみて、ちゃんと出力されることを確認する。
rdoc は、以下のコマンドで生成できる。
$ rdoc -c utf8
ドキュメントはカレントディレクトリの下の doc ディレクトリにHTML形式で生成される。また、オプションに -d をつけると、クラス図もつく（あまりわかりやすい図ではないが）
rails の場合は、以下のようにして生成する。
$ rake doc:app
カレントディレクトリの下の doc/app に生成される。
原則として、実装したクラス、モジュール、メソッド、定数には RDoc 形式のコメントを付ける。

  # スタック・アンダーフロー
  class UnderflowError < RuntimeError;  end

  # スタック・オーバーフロー
  class OverflowError < RuntimeError;  end

  # デフォルトのスタック容量
  DEFAULT_CAPACITY = 10

  # スタックの大きさ
  attr_reader :size
  # スタックの容量
  attr_reader :capacity

  # スタックへオブジェクトをプッシュする。
  # ==== Args
  # _obj_ :: プッシュするオブジェクト
  # ==== Raise
  # OverflowError :: スタック内のオブジェクトが容量を超える場合に発生。
  def push obj
    # TODO Stack#push の実装
  end

  # スタックからオブジェクトをポップする。
  # ==== Return
  # ポップされたオブジェクト。
  # ==== Raise
  # UnderflowError :: スタックが空である場合に発生。
  def pop
    # TODO Stack#pop の実装
  end
end


?	クラスコメント(ファイル先頭部分)のルール
o	require、namespace定義は、クラスコメントより上に記述する。
(クラスコメントより下に記述すると、ファイルのコメント部分に表示されるようになるため)
o	必ずクラス名を含める。
(この部分のRDocの出力にクラスのドキュメントへのリンクが自動で含まれないため)

?	メソッドのコメントルール
o	引数は　# ==== Args以下に # _"変数名"_ :: "変数の説明"形式で記述する。
o	戻り値が有る場合は # === Return以下に必ず記述する。
o	特筆すべき例外は # ==== Raise以下に # "例外クラス名" :: "例外の説明"形式で必ず記述する。


~



================================================================================
git
	linux GUI

	commit=pg uploading
	clone = pg downloading with history

	push = history uploading
		default repositry name = 'origin'
	pull = histoy downloading
		default repositry name = 'origin'
		エラーには
			git commit -a 	<--'automatic'
		か　
			git reset --hard　
		で対処

	merge(ウィthnon-fast-forwarding option)
	統合ブランチ（本流）と
	トピックブランチ（支流）
		default repositry name = 'head'
		checkout [of some branch]= work tree place of head
			stash	=	まだコミットしていない変更点が他のブランチのヘッドに移ることをふせぐ変更点隔離措置



		head~n = -n generation
		head^n = -n parantes

	mergeとrebaseは共に履歴を統合しますが、特徴が異なります。
		merge
		変更内容の履歴はそのまま残るが、履歴が複雑になる。
		rebase
		履歴は単純になるが、元のコミットから変更内容が変更される。
		そのため、元のコミットを動かない状態にしてしまうことがある。
		mergeとrebaseは、チームの運用方針に応じて使い分けます。
		例えば、履歴を一本化するように運用をするのであれば

		トピックブランチに統合ブランチの最新のコードを取り込む場合はrebaseを使う
		統合ブランチにトピックブランチを取り込む場合は、まずrebaseしてからmerge


		Gitでのブランチの運用モデルとして、A successful Git branching modelを紹介します。
		日本語訳:
		http://keijinsonyaban.blogspot.jp/2010/10/successful-git-branching-model.html

	#configurations.yml やroutes.rbなど開発専用ファイルを設定

	rails s --debugger



#Rspec
	vi /opt/fix/LGDIS/config/database.yml
		test:
			adapter: postgresql
			database: LGDIS_test
			host: 127.0.0.1
			username: dev
			password: devdev
			encoding: utf8
	vi ~/.rspecrc
		--debug

 export RAILS_ENV=.
	RAILS_ENV=test rake db:migrate:reset
	RAILS_ENV=test rake redmine:plugins:migrate
	RAILS_ENV=test rake redmine:load_default_data
	RAILS_ENV=test rake db:seed
	RAILS_ENV=test rspec /opt/fix/LGDIS/plugins/lgdis/spec/controllers/shelters_controller_spec.rb

★リダイレクト実行時にdebuggerはオフにすること




vi /opt/fix/LGDIS/spec/factories/evacuation_advisory_factory.rb

	describe/contect   ..... do
		it 'message' do
			*** should_XXXX
			***  == +++




apache+LDAP認証
Google map api
Rhodes


----
Linux GIT GUI


#認証とかの情報設定
ActionMailer::Base.smtp_settings =
{ :address => 'smtp.hoge.co.jp',
	:port => 25,
        :domain => 'hoge.co.jp',
        :user_name => 'sukottotaigaaa',
        :password => 'hogemogepyapypay',
        :authentication => :login
}
----------------------------------------





#LINUX運用コマンド　(開発系)
	#step数ステップ数 メソッド数
# find . -name "*rb" -o -name "*.yml" | xargs wc -l
grep -nirE "def \w" .  --include=**  --exclude=*.sw* --exclude=*~ --exclude=*.log > ../../GrepDef.txt

	rake -T |grep stat
	rake stats

		root@localhost:/opt/fix/LGDIS# rake stats

		*** Mocha deprecation warning: Change `require 'mocha'` to `require 'mocha/setup'`.

		+----------------------+-------+-------+---------+---------+-----+-------+
		| Name                 | Lines |   LOC | Classes | Methods | M/C | LOC/M |
		+----------------------+-------+-------+---------+---------+-----+-------+
		| Controllers          |  6397 |  4716 |      49 |     392 |   8 |    10 |
		| Helpers              |  3965 |  2665 |       2 |     234 | 117 |     9 |
		| Models               | 11569 |  8033 |      86 |     871 |  10 |     7 |
		| Libraries            | 32843 | 23889 |     155 |    1378 |   8 |    15 |
		| Integration tests    |  7711 |  5727 |      82 |     168 |   2 |    32 |
		| Functional tests     | 16661 | 13404 |      81 |    1221 |  15 |     8 |
		| Unit tests           | 22610 | 17290 |     119 |    1547 |  13 |     9 |
		+----------------------+-------+-------+---------+---------+-----+-------+
		| Total                | 101756 | 75724 |     574 |    5811 |  10 |    11 |
		+----------------------+-------+-------+---------+---------+-----+-------+
			Code LOC: 39303     Test LOC: 36421     Code to Test Ratio: 1:0.9

 16918 合計


	find . -name "*rb" | xargs wc -l
	find . -name "*rb" -o -name "*.yml" | xargs wc -l
	#手動バックアップ
	 tar cvf lgdis-imamondai4.tar lgdis/ ; mv lgdis-imamondai*.tar /opt/fix ; date; ls -alt /opt/fix/*tar ;


-postit----------------------
ﾒｰﾙｻｰﾊﾞｰ@ubuntu
三菱重工(株)
xin7-pro-productkey:	3K9P7-R7GCK-D9MYH-QFMX4-WT8P7
.blank? 	.nil? 	.empty?	.present?	self.****	RDoc 記法
X.509 Cartificate Token ,SSL(:443)


/usr/local/lib/ruby/gems/1.9.1/gems/soap4r-ruby1.9-2.0.5/sample/showcase/wsdl/PayPalSvc/
gem install soap4r-ruby1.9
---------------------------------------------------------

--------------------------------------------------------------------------------------------------------
Memchachd
	#install

		wget -q -O - http://www.atomicorp.com/installers/atomic |sh
		yum install memcached

		vi /etc/sysconfig/memcached
			PORT=”11211″
		config.cache_classes     = false
		#optional 	config.cache_store = :dalli_store

		service memcached start
	#test
		 rails c --debugger
		Rails.cache.write("foo", "フー", :expires_in => 10)
		foo")
		Rails.cache.write("key", [1,2,3], expires_in: 1.hour)  # １時間で消える。
		# もちろんオブジェクトもキャッシュ可能
		Rails.cache.write('hash', {'hoge' => 'piyo', 'foo' => 'buz'})
		Rails.cache.read('hash') # => {'hoge' => 'piyo', 'foo' => 'buz'}

		Rails.cache.clear # すべてのキャッシュをクリア

	#CSV-locading

		#Rails.root/lib/batches に以下のファイルを配置
		　area.csv
		　address.csv
		　shelter.csv
		　memcache_store.rb

		#バッチを実行
		 rails runner Batches::MemcacheStore.execute

		#値の取得テスト
			Rails.cache.read("area")["6"]["name"]

		# ==== options
		 実行環境の指定 :: -e production
		以下の形式でstoreする

			file => {
				code => {
					項目1 => value,
					項目2 => value,
					項目3 => value,
					...
				}
			}

		住所のオートコンプリート用に以下の値もstoreする
		　state  : 都道府県
		　city   : 市区町村
		　street : 町丁目

		 state => {
			 code => name,
			 code => name,
			 code => name,
			 ...
		 }
	rails runner Batches::MemcacheStore.execute





################rake db: http://namakesugi.blog42.fc2.com/blog-entry-157.html

20130601182530_change_contents_rollout_store_type_to_string.rb
X
  注意：ファイル名とクラス名が完全一致しないと失敗します。
  class ChangeContentsRolloutStoreTypeToString < ActiveRecord::Migration
    def change
      change_column :contents, :rollout_store_type, :text
    end
  end


rake db:migrate:down VERSION=[バージョン番号]
  rake db:migrate:down VERSION=20130601182535

  特定のmigrationをrevertするmigration
    require_relative '20130414_migratino_file_name_without_extention_rb'

    class RevertProductsChangePrimaryKey < ActiveRecord::Migration
      def change
        revert ChangeProductsPrimaryKey
      end
    end



  Joinテーブルの作成をするmigrationファイルの作成
    書式: `CreateJoinTableXXXYYY XXX YYY` XXX, YYYには結合するモデル名を指定する。
    以下の場合はproductとcategoryのN:Nを結合するテーブルcategories_productsが生成される。
    rails g migration create_join_table_product_category product category

  フィールドの変更
    def change
      reversible do |dir|
        change_table :products do |t|
          dir.up { t.change :foo, :integer }
          dir.down { t.change :foo, :string, limit: 32 }
        end
      end
    end

  rails g migration RemoveFooFromProducts foo:string
    複数のフィールドの追加/削除のmigrationファイルの作成
    rails g migration add_foo_and_bar_to_products foo:integer bar:integer




#troubleshooting
  irm/mv Gemfile.lock
  rm db/schema.rb
  rake db:reset


#Device

Devise.secret_key was not set. Please add the following to your Devise initializer:

  config.secret_key = '7d221d00af9414240910d5dfa712d48d45dc6ca2b47e328ffa75787207ecaa9f5f827da630d3d9961b4a5b7f92d900e33f7f916ddee943fd8fdb9d59964aef9d'

　　　

plugins/lgdis/db/migrate/008_create_evacuation_advisories.rb
+    add_index(:evacuation_advisories, :area, :unique => true, :where => 'deleted_at is NULL')
  	56 	+    add_index(:evacuation_advisories, :identifier, :unique => true, :where => 'deleted_at is NULL')



----------------------------------------------------------------

#diff
	C:\VMstatic\0000000-215\trunk\document\技術検討\AtomFeed
		・TOPプロジェクトにて、Feed用のカスタムクエリを作成し、購読させる
	i	・カスタムクエリの範疇にて、抽出条件のカスタマイズが可能



#redmine-plugin
	rails g redmine_plugin_model lgdis issues_addtion_datum id:integer:yes issue_id:integer

      create  plugins/lgdis/app/models/issues_addtion_datum.rb
      create  plugins/lgdis/test/unit/issues_addtion_datum_test.rb
      create  plugins/lgdis/db/migrate/005_create_issues_addtion_data.rb


	#Redmine admin>adminユーザー情報変更
	http://192.168.18.130:3000/users/1
		メールアドレス	root@localhost.localdomain　に設定
		password再設定
		time-zone	GMT+9 Tokyo 再設定

	#Redmine admin>設定>管理>メール通知画面　右下最下部のテストメール送信リンクでの確認
	http://192.168.18.130:3000/settings/edit?tab=notifications
		デフォルトの送信者名redmine@example.netを適宜変更して保存してから送信リンクをクリックしてテストする｡保存しないでクリックするとメールヘッダーの送信者名は変わらない｡
i #
  #Rails環境設定
#設定編集 vi /opt/fix/LGDIS/config/environments/development.rb

	#規定値:config.action_mailer.raise_delivery_errors = false　を以下のごとく変更;
	config.action_mailer.perform_deliveries = true
	config.action_mailer.raise_delivery_errors = true
	Rails.application.config.action_mailer.perform_deliveries = true
	Rails.application.config.action_mailer.raise_delivery_errors = true

#IRB/ConsoleモードでRailsを起動し､以下のテストコマンド発行
<SMTP-Plain>
Lgdis::ExtOut::Mailer.setup( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "root@localhost.localdomain").deliver
Lgdis::ExtOut::SMTP_JichiShokuin.send_message({"mailing_list_name" =>"root@localhost.localdomain", "title" => "title漢字", "message" =>"sss漢字-------------"}, false)
Lgdis::ExtOut::Mailer.setup( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "apl@localhost.localdomain").deliver
Lgdis::ExtOut::Mailer.setup_auth( "apl@localhost.localdomain","SMTP-AUTH引数0", "########################################").deliver

/usr/local/lib/ruby/gems/1.9.1/gems/mail-2.4.4/lib/mail/message.rb
   229                                  debugger
   230          #debugcode  ActionMailer::Base.smtp_settings  ActionMailer::Base.raise_delivery_errors   ActionMailer::Base.perform_deliveries
=> 231          delivery_handler.deliver_mail(self) { do_delivery }

 "utf-8", "some_body@di-system.co.jp", "some_body@di-system.co.jp", "AlphaNumerics")


<SMTP-AUTH>
★Rootパスワードは社外秘
Lgdis::ExtOut::Mailer.setup_auth( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "root@localhost.localdomain", "root", "1qazxsw2").deliver
Lgdis::ExtOut::Mailer.setup_auth( "root@localhost.localdomain","SMTP-AUTH引数0", "SMTP-AUTH引数1", "utf-8", "root@localhost.localdomain", "apl", "AlphaNumerics").deliver
★MTAサーバー(postfixなど)にSMTP-AUTHの設定がされていない状況で､AUTHのコマンドを叩くと当然失敗する｡
これを複数回くりかえすと､不正接続とみなされて､正しいSMTP-PLAINでのコマンドも失敗する｡
→設定に工夫をくわえると解消される可能性あり｡

 Lgdis::ExtOut::SMTP_JichiShokuin.send_message({"mailing_list_name" =>"some_body@di-system.co.jp", "title" => "title漢字", "message" =>"sss漢字-------------"}, false)
[224, 233] in /usr/local/lib/ruby/gems/1.9.1/gems/mail-2.4.4/lib/mail/message.rb
   224      #  mail = Mail.read('file.eml')
   225      #  mail.deliver
   226      def deliver
   227        inform_interceptors
   228        if delivery_handler
=> 229          delivery_handler.deliver_mail(self) { do_delivery }
(rdb:1) delivery_handler.deliver_mail(self) { do_delivery }
SMTP-Plain postfix bug
Net::SMTPFatalError Exception: 554 5.7.1 <some_body@di-system.co.jp>: Relay access denied
Gmail bug
Encoding::CompatibilityError Exception: incompatible encoding regexp match (US-ASCII regexp with ISO-2022-JP string)
mail.body = mail.body.raw_source.encode('ISO-2022-JP', :invalid => :replace, :undef => :replace).encode('UTF-8')
mail.body = mail.body.raw_source.encode('iso-2022-jp', :invalid => :replace, :undef => :replace).encode('utf-8') #変換エラー対策




	#potfixログ確認
	tail /var/log/maillog



#SMTP-AUTH設定

	#curys-sasl
	cyrus-saslは非常に多機能で、
	一般的な テキスト 認証の他に暗号化認証も扱うことができますし、
	構築中のLinuxサーバー の ユーザーアカウント 名とパスワードをそのまま認証に使うことも、
	別の データベース を使って認証を行うこともできるようになっています。


	#install
		cyrus-sasl-xxxxxxx
		cyrus-sasl-plain


	vi /usr/lib/sasl2/smtpd.conf
		pwcheck_method: saslauthd


	service saslauthd start
		saslauthdを起動中:                                         [  OK  ]

	vim /etc/postfix/main.cf
		myorigin = $myhostname
		 "SMTP Auth"の利用を許可する
		smtpd_sasl_auth_enable = yes

		"anonymous"接続を拒否する。
		smtpd_sasl_security_options = noanonymous

		"OutlookExpress対応
		broken_sasl_auth_clients = yes

		smtpd_sasl_local_domain = $mydomain
		smtpd_recipient_restrictions =
		    permit_mynetworks,
		    permit_sasl_authenticated,
		    reject_unauth_destination,
		    permit_auth_destination,
		    reject

		    permit_mynetworksは、サーバー内のネットワーク、つまり内部からの利用を許可するものです。
		    permit_sasl_authenticated は、sasl認証できたものだけ受け入れる。
		    reject_unauth_destination で、認証できなかったものは、拒否する。
		    permit_auth_destination で、認証できたものは、受け入れる。
		    reject で、その他は、拒否する。

	    etc/init.d/postfix restart

	#curys-sasl password config
		/useradd some_body -s /sbin/nologin
		/usr/sbin/saslpasswd -c some_body
		/usr/sbin/sasldblistusers

		chgrp postfix /etc/sasldb
		chmod 640 /etc/sasldb

	#Mailer-config
		→「アカウント設定」→「サーバー」→「このサーバーは認証が必要」または「送信サーバーは認証が必要」にチェックを入れる。
		or
		→「送信(SMTP)サーバの設定」から「セキュリティと認証」の「ユーザ名とパスワードを使用する」にチェックを入れる

	    etc/init.d/postfix restart
	    または
	　　 service postfix restart
		#/etc/init.d/saslauthdも起動していれば成功　

	#参考:確認コマンド
		postfix　-n
		postfix check




================== ====================================
vim -S ~/session-130203 +VE +MRU
==================================================================


# Rubyコーディングスタイル
#
# then 省略
# .blank? .present?をつかう｡　.nil? .empty?はつかわない｡
# ※find_by_xxxという書き方はNG（元々あるメソッドを上書きしてし まうため）
#   find(:all, :conditions => ["name LIKE ?%", "A"], :order => "name ASC")
# ビジネスロジックはモデルに記入
# モデルは共通モデルクラスを継承
#  require_dependency 'model_helper'
#   class Foo < CustomModel extend ModelHelper
#
#文法チェックと警告
# ruby -wc <ファイル名>
	ruby -wTW2 <ファイル名>
#pwdのRDoc生成は　 rdoc -c utf8
#Rails全体の rake doc:app
#
# Stackはスタックを実装するクラスである。
class Stack




================================================================================

	#configurations.yml やroutes.rbなど開発専用ファイルを設定

	rails s --debugger


★リダイレクト実行時にdebuggerはオフにすること



vi /opt/fix/LGDIS/spec/factories/evacuation_advisory_factory.rb

	describe/contect   ..... do
		it 'message' do
			*** should_XXXX
			***  == +++


----
Linux GIT GUI


#認証とかの情報設定
ActionMailer::Base.smtp_settings =
{ :address => 'smtp.hoge.co.jp',
	:port => 25,
        :domain => 'hoge.co.jp',
        :user_name => 'sukottotaigaaa',
        :password => 'hogemogepyapypay',
        :authentication => :login
}


----------------------------------------




	 grep -nirE "remark" * --include=*.rb
grep -nirE "total_pages" /data/on_gree/bm_gree/* --include=**  --exclude=*.sw* --exclude=*~ --exclude=*spec* --exclude=*log  --exclude=*svn*

	前後5行を出力する例
grep -nirE "total_pages" /data/on_gree/bm_gree/* --include=**  --exclude=*.sw* --exclude=*~ --exclude=*spec* --exclude=*log  --exclude=*svn* -C5

##############
 rails g redmine_plugin_controller lgdis issue_geographies
 rails g redmine_plugin_model lgdis issue_geography
find . -name "*geog*" -print |sort


#LINUX運用コマンド　(開発系)
	#step数ステップ数 メソッド数
# find . -name "*rb" -o -name "*.yml" | xargs wc -l
grep -nirE "def \w" .  --include=**  --exclude=*.sw* --exclude=*~ --exclude=*.log > ../../GrepDef.txt

	rake -T |grep stat
	rake stats

		root@localhost:/opt/fix/LGDIS# rake stats

		*** Mocha deprecation warning: Change `require 'mocha'` to `require 'mocha/setup'`.

		+----------------------+-------+-------+---------+---------+-----+-------+
		| Name                 | Lines |   LOC | Classes | Methods | M/C | LOC/M |
		+----------------------+-------+-------+---------+---------+-----+-------+
		| Controllers          |  6397 |  4716 |      49 |     392 |   8 |    10 |
		| Helpers              |  3965 |  2665 |       2 |     234 | 117 |     9 |
		| Models               | 11569 |  8033 |      86 |     871 |  10 |     7 |
		| Libraries            | 32843 | 23889 |     155 |    1378 |   8 |    15 |
		| Integration tests    |  7711 |  5727 |      82 |     168 |   2 |    32 |
		| Functional tests     | 16661 | 13404 |      81 |    1221 |  15 |     8 |
		| Unit tests           | 22610 | 17290 |     119 |    1547 |  13 |     9 |
		+----------------------+-------+-------+---------+---------+-----+-------+
		| Total                | 101756 | 75724 |     574 |    5811 |  10 |    11 |
		+----------------------+-------+-------+---------+---------+-----+-------+
			Code LOC: 39303     Test LOC: 36421     Code to Test Ratio: 1:0.9

 16918 合計


	find . -name "*rb" | xargs wc -l
	find . -name "*rb" -o -name "*.yml" | xargs wc -l
	#手動バックアップ
	 tar cvf lgdis-imamondai4.tar lgdis/ ; mv lgdis-imamondai*.tar /opt/fix ; date; ls -alt /opt/fix/*tar ;


root@localhost:/opt/LGDIS# rake -T |grep redmine
rake redmine:attachments:prune            # Removes uploaded files left unattached after one day.
rake redmine:email:read                   # Read an email from standard input.
rake redmine:email:receive_imap           # Read emails from an IMAP server.
rake redmine:email:receive_pop3           # Read emails from an POP3 server.
rake redmine:email:test[login]            # Send a test email to the user with the provided login name
rake redmine:fetch_changesets             # Fetch changesets from the repositories
rake redmine:load_default_data            # Load Redmine default configuration data.
rake redmine:migrate_from_mantis          # Mantis migration script
rake redmine:migrate_from_trac            # Trac migration script
rake redmine:permissions                  # List all permissions and the actions registered with them
rake redmine:plugins                      # Migrates and copies plugins assets.
rake redmine:plugins:assets               # Copies plugins assets into the public directory.
rake redmine:plugins:migrate              # Migrates installed plugins.
rake redmine:plugins:test                 # Runs the plugins tests.
rake redmine:plugins:test:functionals     # Run tests for {:functionals=>"db:test:prepare"}
rake redmine:plugins:test:integration     # Run tests for {:integration=>"db:test:prepare"}
rake redmine:plugins:test:units           # Run tests for {:units=>"db:test:prepare"}
rake redmine:send_reminders               # Send reminders about issues due in the next days.
rake redmine:tokens:prune                 # Removes expired tokens.
rake redmine:watchers:prune               # Removes watchers from what they can no longer view.


root@localhost:/opt/LGDIS# rake routes|grep evacuation
GET	/evacuation_advisories(.:format)	evacuation_advisories#index
POST	/evacuation_advisories(.:format)	evacuation_advisories#create
GET	/evacuation_advisories/new(.:format)	evacuation_advisories#new
GET	/evacuation_advisories/:id/edit(.:format)	evacuation_advisories#edit
GET	/evacuation_advisories/:id(.:format)	evacuation_advisories#show
PUT	/evacuation_advisories/:id(.:format)	evacuation_advisories#update
DELETE	/evacuation_advisories/:id(.:format)	evacuation_advisories#destroy


root@localhost:/opt/LGDIS# rake routes|grep evacuation
         project_evacuation_advisories GET      /projects/:project_id/evacuation_advisories(.:format)                             evacuation_advisories#index
                                       POST     /projects/:project_id/evacuation_advisories(.:format)                             evacuation_advisories#create
       new_project_evacuation_advisory GET      /projects/:project_id/evacuation_advisories/new(.:format)                         evacuation_advisories#new
      edit_project_evacuation_advisory GET      /projects/:project_id/evacuation_advisories/:id/edit(.:format)                    evacuation_advisories#edit
           project_evacuation_advisory GET      /projects/:project_id/evacuation_advisories/:id(.:format)                         evacuation_advisories#show
                                       PUT      /projects/:project_id/evacuation_advisories/:id(.:format)                         evacuation_advisories#update
                                       DELETE   /projects/:project_id/evacuation_advisories/:id(.:format)                         evacuation_advisories#destroy


root@localhost:/opt/LGDIS# Connecting to database specified by database.yml
OpenIdAuthentication.store is nil. Using in-memory store.


#some_body dev:  @evacuation_advisory_const が避難所モデルのままなので､invertなどはつかえない｡%>

irb(main):112:0> Constant::hash_for_table(EvacuationAdvisory.table_name)
  Constant Load (212.0ms)  SELECT "constants".* FROM "constants" WHERE (kind1='TD' AND kind2='evacuation_advisories') ORDER BY kind3 ASC, _order ASC
=> {"openable_flag"=>{"1"=>"可", "0"=>"不可"}, "sort_criteria"=>{"1"=>"未開設", "2"=>"開設", "3"=>"閉鎖", "4"=>"不明", "5"=>"常設"}, "status"=>{"1"=>"空き", "2"=>"混雑", "3"=>"定員一杯", "4"=>"不明"}, "type"=>{"1"=>"避難所", "2"=>"臨時避難所", "3"=>"広域避難所：開設措置なし", "4"=>"一次避難所：開設措置なし"}, "usable_flag"=>{"1"=>"可", "0"=>"不可"}}


-postit----------------------
ﾒｰﾙｻｰﾊﾞｰ@ubuntu
三菱重工(株)
xin7-pro-productkey:	3K9P7-R7GCK-D9MYH-QFMX4-WT8P7
.blank? 	.nil? 	.empty?	.present?	self.****	RDoc 記法
X.509 Cartificate Token ,SSL(:443)


/usr/local/lib/ruby/gems/1.9.1/gems/soap4r-ruby1.9-2.0.5/sample/showcase/wsdl/PayPalSvc/
gem install soap4r-ruby1.9
---------------------------------------------------------


--------------------------------------------------------------------------------------------------------
Memchachd
	#install

		wget -q -O - http://www.atomicorp.com/installers/atomic |sh
		yum install memcached

		vi /etc/sysconfig/memcached
			PORT=”11211″
		config.cache_classes     = false
		#optional 	config.cache_store = :dalli_store

		service memcached start
	#test
		 rails c --debugger
		Rails.cache.write("foo", "フー", :expires_in => 10)
		foo")
		Rails.cache.write("key", [1,2,3], expires_in: 1.hour)  # １時間で消える。
		# もちろんオブジェクトもキャッシュ可能
		Rails.cache.write('hash', {'hoge' => 'piyo', 'foo' => 'buz'})
		Rails.cache.read('hash') # => {'hoge' => 'piyo', 'foo' => 'buz'}

		Rails.cache.clear # すべてのキャッシュをクリア

	#CSV-locading

		#Rails.root/lib/batches に以下のファイルを配置
		　area.csv
		　address.csv
		　shelter.csv
		　memcache_store.rb

		#バッチを実行
		 rails runner Batches::MemcacheStore.execute

		#値の取得テスト
			Rails.cache.read("area")["6"]["name"]

		# ==== options
		 実行環境の指定 :: -e production
		以下の形式でstoreする

			file => {
				code => {
					項目1 => value,
					項目2 => value,
					項目3 => value,
					...
				}
			}

		住所のオートコンプリート用に以下の値もstoreする
		　state  : 都道府県
		　city   : 市区町村
		　street : 町丁目

		 state => {
			 code => name,
			 code => name,
			 code => name,
			 ...
		 }
	rails runner Batches::MemcacheStore.execute

#Rdoc
	# 処理内容
	# ==== Args

	# _objectname_ :: description
	# ==== Return
	# _objectname_ :: description
	# ==== Raise

	# 処理内容
	#
	# ==== Args
	# __ ::
	# ==== Return
	# __ ::
	# ==== Raise

	■rdocの生成
	rdoc は、手元でドキュメントを生成してみて、ちゃんと出力されることを確認する。
	rdoc は、以下のコマンドで生成できる。
	$ rdoc -c utf8
	ドキュメントはカレントディレクトリの下の doc ディレクトリにHTML形式で生成される。また、オプションに -d をつけると、クラス図もつく（あまりわかりやすい図ではないが）
	rails の場合は、以下のようにして生成する。
	$ rake doc:app


#HAML
  -debugger
  irbでの検証は以下括弧内にHAML式を代入
    Haml::Engine.new('  ').render

  Haml Comments: -#
  DRIW
  - --> run ruby code
  = insert ruby code
  `code`

  : --> filter
  & --><input>
  |






################rake db: http://namakesugi.blog42.fc2.com/blog-entry-157.html

20130601182530_change_contents_rollout_store_type_to_string.rb
X
  注意：ファイル名とクラス名が完全一致しないと失敗します。
  class ChangeContentsRolloutStoreTypeToString < ActiveRecord::Migration
    def change
      change_column :contents, :rollout_store_type, :text
    end
  end


rake db:migrate:down VERSION=[バージョン番号]
  rake db:migrate:down VERSION=20130601182535

  特定のmigrationをrevertするmigration
    require_relative '20130414_migratino_file_name_without_extention_rb'

    class RevertProductsChangePrimaryKey < ActiveRecord::Migration
      def change
        revert ChangeProductsPrimaryKey
      end
    end



  Joinテーブルの作成をするmigrationファイルの作成
    書式: `CreateJoinTableXXXYYY XXX YYY` XXX, YYYには結合するモデル名を指定する。
    以下の場合はproductとcategoryのN:Nを結合するテーブルcategories_productsが生成される。
    rails g migration create_join_table_product_category product category

  フィールドの変更
    def change
      reversible do |dir|
        change_table :products do |t|
          dir.up { t.change :foo, :integer }
          dir.down { t.change :foo, :string, limit: 32 }
        end
      end
    end

  rails g migration RemoveFooFromProducts foo:string
    複数のフィールドの追加/削除のmigrationファイルの作成
    rails g migration add_foo_and_bar_to_products foo:integer bar:integer





*postgresql 9.3, Java SpringToolSuite 4,x, spring-batch-framework

報告
#Java言語でのi18n国際化手順

#spring-tool-framework
  ★spring-tool-suite-3.3.0.RELEASE-e4.3-win32-installer 550MB required : はﾛｰｶﾙｲﾝｽﾄｰﾙしないとJDK認識ｴﾗｰ
  " error coping file "...と表示されるときはworkspaceつくりなおす

  #plugin
    dashbord--> ページ左下の2タブ目 Extentions→SEarch subclipse --> check , next, install
    or
    Help-> Install New Software
      url : http://subclipse.tigris.org/update_1.6.x

   utf-8 editing = ecklipse property editor
    http://propedit.sourceforge.jp/eclipse/updates/



  #既存PJのマウントは file-import-general-"Existing Project into WorkSpace"
    File->new->others-> SVNからcheckout-> 新規repoi
        ->http://192.168.216.127/svn/tmdb

 MVCうごかないときは右クリックでmaven-upgrade

 #I/O
  workspace間の設定ファイルI/O：Eclipseの設定をクリックして、エクスポート先と名前を選択する


#jUnit(eclipseやnetbeans IntelliIDEには初めから組み込み済み )
 project right-click--> new--> other--> java-> junit-> test case
 junit test生成後 以下の如くする

	public void test() {
		//fail("Not yet implemented");
		assertEquals(1,1);
	}

 テストクラス右クリック→run as jUnit testをえらぶ

 log設定は
   /tmdb/target/m2e-wtp/web-resources/log4j.properties
   /tmdb/target/m2e-wtp/web-resources/log4j.xml

  DB設定は
  /tmdb/src/main/resources/META-INF/spring/database.properties
  dbschemaは
    pgadmin->プラグイン->psql consoleで
      \l

  controllerは
    /tmdb/src/main/java/jp/co/nttcom/business/tmdb/web

  VIEWは
  /APPROOT/src/main/webapp/WEB-INF/views
  Localeは
  /APPROOT/src/main/webapp/WEB-INF/i18n


  /tmdb/src/main/webapp/WEB-INF/layouts/*jsp
  に
  <%@ taglib uri="http://www.springframework.org/tags" prefix="spring"%>
  と記述すると；
  /tmdb/src/main/webapp/WEB-INF/views/ 直下の*jspについては言語別ロケールファ
イル(i18n/*.properties)のメッセージを認識できるようになる；

  /tmdb/src/main/webapp/WEB-INF/views/ 配下サブフォルダーの下の*jspについて
は、各*.jspファイルごとに同様の記述をしないといけない。

各i18n/*.properties内部の記述はRailsのlocale/*ymlのインデント階層で表現はでき
ない。
  xxx.yyy.zzzの如くピリオドで階層構造を表現した単一階層的表記しかできない。

※グローバル変数的にタグライブラリーとその名前の宣言をするやり方は、いろいろし
らべましたが、Javaの初心者には調査がつきませんでした。
  <%@ taglib uri="http://www.springframework.org/tags" prefix="spring"%>

#eclipseでのライブラリー追加方法
　target -> libにはりつけ→PJ property→ JavaBuild path -> library -> Add jars
  tool->Run->Run configurations -> config -> EnvironmentにDOS変数追加
    MAIN (java)
    Arguments (JVM+プログラム)

# LINUXとWindows環境の同期について
  #winとgithub/some_body/vimの同期
    git add .
    git pull origin master_win
    git commit
    git push origin master_win
    #some_body jBC

  #winとlinuxの同期
    fireftp たちあげ
    ADSOL-VMに接続
    windowsからlinuxに差分ファイル手作業同期



ecoinux
	sudo link /usr/bin/perl /usr/local/bin/perl
	sudo apt-get gcc make vim gnome-terminal
	#vim config
		# ~/.vimrc
			set number
			set tabstop=2
			# set nocompatible
			syntax on
			...etc
	#transpantation of Windows file
		/user/bin/perl --
		or
		chang to \n= LF

	#FereFox3 -prifile config & transplantation
	#uninstall gnome pre-installed apps
		-rwxr-xr-x 1 root root 151396 2008-05-24 05:07 /usr/bin/xfce4-terminal
		xterm

	#customize ,desktop, Iterface, (mousepad,Thuanr)

	#ctrlpanel-->add system-source
		deb http://cz.archive.ubuntu.com/ubuntu dapper-backports main universe
		deb http://packages.mediaubuntu.org/gutsy free non-free
	ctrlpanel-->add "gthumb clamAV"
	ctrlpanel-->権限add?
	sudo apt-get install adobereader-jpn realplayer sysv-rc-conf ntfs-config
	sudo apt-get install streamtuner streamripper

	sudo sysv-rc-conf
		stop : anacron, apmd, atd, bloetooth, cupsys, hotkey-setup, rsync
		#case non-Gforce, also stop nvidia-kernel
	start-menu---> adobereader install

	日本語環境問題
		Javaアプリへのキー入力の問題 はどうやらUbuntu特有のものらしい。UIMに変更すればもちっと安定するらしいので変更してみる。
			sudo apt-get install uim uim-anthy uim-qt
			sudo update-alternatives --config xinput-ja_JP で、/etc/X11/xinit/xinput.d/uim-systrayを選択。 （ここで一旦ログアウト…/etc/X11/xinit/xinput.d/uim-toolbarだとJavaアプリに日本語入力できなかった）
			そのままでは日本語入力できなかったので、システムトレイに追加されたUIMの設定ボタンをクリックし、グループ（全体設定）の『使用可能にする入力方式』『標準の入力方式』をAnthyにすれば,日本語入力できるようになる。はず。



Apache2.0----------------------------------------------
	$ ./configure --prefix=[path:default=/usr/local/apache2]
	$ sudo make
	$ sudo make install
	$ PREFIX/bin/apachectl start
	#compiling instll webmin
		sh setup.sh
		sudo /usr/local/apache2/bin/apachectl start
		sudo /usr/local/apache2/bin/httpd start
		/usr/local/apache2/htdocs/takami/

	premature end of script headers
		--> /usr/bin/perl --
		--> change \n into LF
	attempt to invoke directory as script: /.../htdocs/hogehoge/cgi-bin/

	Apache2.0では、 SetHandler server-parsedの命令文を入れると、DirectoryIndex命令が効かなくなるよ
	うです。Turbo Desktop 10に、Apacheの2.0をソースコードからコンパイルすると、ブ
	ラウザは同じように「ファイル未検出（404）」のエラーを返します。Apacheが起動す
	る時に、「SetHandler server-parsed文があると、DirectoryIndex命令は無効になりま
	すよ」といったメッセージを出してくれれば、話は分かるのですが・・・。

	-----------------------------------------------------------------
	■変更後
	<Directory "/home/aaa/cgi-bin/">
	　　AddHandler perl-script .cgi
	　　PerlResponseHandler ModPerl::Registry
	　　PerlOptions +ParseHeaders
	　　Options ExecCGI +MultiViews
	</Directory>

	■設定3で追記した通常のCGIで動作させるDirecitoryディレクティブは削除
	------------------------------------------------
		 mod_userdir
			 CustmeLog /log/acess/log SetEnvIf


			 --------------------------------
			 http://wiki.apache.org/httpd/Errors/DirectoryAsScript

			 For example, replace this:

			 ScriptAlias /cgi-bin /var/www/cgi-bin

			 with this:

			 Alias /cgi-bin /var/www/cgi-bin
			 <Directory /var/www/cgi-bin>
			  AddHandler cgi-script cgi pl
			   Options ExecCGI
			   </Directory>



			   ---------
			   f all your CGI scripts end in .py, you can fix the problem by replacing
			   SetHandler cgi-script
			   with
			   AddHandler cgi-script py
			   -----------------------------

			   /var/www
			   ├ / (/var/www/html)
			   │　└ index.html　
			   └ cgi-bin/
			   　　└ test/
			   　　　　└ index.cgi

			   /home/username/public_html
			   ├ / (/home/username/public_html/html)
			   │　└ index.html
			   └ cgi-bin/
			   　　└ test/
			   　　　　└ index.cgi

			   ScriptAliasMatch /~(..*)/cgi-bin/(.*) /home/$1/public_html/cgi-bin/$2


			   を設定し、

			   http://192.168.*.*/cgi-bin/test/index.cgi
			   http://192.168.*.*/~username/cbi-bin/test/index.cgi


			   と、ファイルネームまで指定して CGI を動作させることまでは出来ました。

			   が、次のようにディレクトリの URL でアクセスして index.cgi を動作させることが出来ません。

			   http://192.168.*.*/cgi-bin/test/
			   http://192.168.*.*/~username/cbi-bin/test/
			   ・この際、（考えにくいことですが）ScirptAlias 内では希望の動作は出来ないものと仮定して、
			   　ScriptAlias はコメントアウト、ScriptAliasMatch は削除。
			   ・Alias, AliasMatch 両ディレクティブを追加して CGI 用ディレクトリを新たに設定。
			   ・<Directory "/var/www/html"> Options +ExecCGI </Directory>
			   ・<Directory ~ "^/home/.*/public_html/cgi-bin(ユーザ CGI ディレクトリの正規表現)"> Options +ExecCGI </Directory>

			   DirectoryIndex index.cgi

			   #ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
			   Alias /cgi-bin/ "/var/www/cgi-bin/"
			   AliasMatch /~(..*)/cgi-bin/(.*) /home/$1/public_html/cgi-bin/$2

			   <Directory "/var/www/html">
				   Options +ExecCGI
				   </Directory>

				   <Directory ~ "^/home/.*/public_html/cgi-bin">
					   Options +ExecCGI
					   </Directory>

					   AddHandler cgi-script .cgi



					   結果、これで希望の動作をさせることが出来ました。

					   ただ、この状態はセキュリティ的に何か問題は無いのでしょうか。
					   結局、このような解決策を採るドキュメントは検索にヒットしませんでしたし、
					   このままだと、CGI 用ディレクトリに収めた .html や画像など、何でも表示してしまいます。
					   大丈夫でしょうか？
					   返信 014 miz [UA] 	2007-03-15 18:30
					   ＞このままだと、CGI 用ディレクトリに収めた .html や画像など、何でも表示してしまいます。
					   ＞大丈夫でしょうか？

					   ご心配の通り、大丈夫ではありません。
					   大事なパスワード用ファイルや個人情報ファイルなどもファイル名さえ知られてしまえば、だだ漏れです。

					   FilesMatchセクションを使って、cgi用(拡張子.cgi,.pl)以外は全部拒否の設定をしてみては？
					   実際のコードは、私には検証出来る環境がないので、下記サイトをじっくり読んで設定を試みて下さい。
					   http://httpd.apache.org/docs/2.0/sections.html
					   --------------------------------------
						.htaccessが使用可能であればindex.cgiをドキュメントディレクトリ直下におき.htaccessを下記のように編集して
						Options +ExecCGI
						http://hogehoge/でアクセスしてみてください。



								-----------------------------
								UNIXやCygWinのシェルをつかえるひとがWindowsをつかいつづける浪費の比較

								LINUX
								大半のファイル操作コマンドにRecursive1探索オプションとワイルドカード（正規表現）オプションがある
								Windows
								なにかしようとすると再起探索処理する専用ソフト
								ワイルドカード（正規表現）オプションについても有無を調査しないとだめ

								-----------------------------
								WindowsをつかったひとがLINUXをつかう浪費

								LINUX
								zipコマンドがWindows改行コードのファイルを圧縮できない
								しかtなくgzipをつかう
								Windows
								どの圧縮ソフトもそうではない。

								LINUX
								シェルexplorerのundoができない
								Windows
								できる


								LINUX
								実行中のプログラムをroot権限でchmodするとdirectory破損する
								Windows
								警告が事前に出る



	#password CGI
		unzip password
		chmod -R 777 /usr/local/apache2/cgi-bin/*
		DrectoryIndexaa??a??i??aindex.cgi index.html index.html.var
		index　ーー＞　index.cgi index.html index.html.var

		#ftp://some_body.vs.land.to/
		http://some_body.vs.land.to/view.cgi?href=0&id=takami&pass=vlml8877

	#module-check
		sudo  /usr/local/apache2/bin/httpd -l
#WiFi@triplet-gate
	(WiFiよりダイアルが優先するのを止める)：
		#コントロールパネルのダイアルアップで既定接続のチェックをはずす。IE接続プロパティーでダイヤルしない設定にする。
	#OS-Windows-zero-configi(Wifi-ctrl-panel) & Wired-autoconfigi(IEEE802.1auth)が起動していて利用可能なネットワークがWindowsで検出、コントロールパネルのアダプタプロパティーにタブ表示されることが基本。これ以外は不正常。
		範囲内で接続するにチェック、FLETSならばIEEE802.1認証にチェック
	*BWsvcなど3rdPratyのサービスは制御をよこどりするので止める。
	*ツールでの接続障害時には、まずOSレベルで疎通確立する。
		WindowsタスクトレイのアイコンはSSID&WEP-keyでの疎通レベルまでしか表示しない。認証は別物。

#EC-suite-dependencies:
	ec-rider0.8.2/ec_front/ Rails requires RubyGems >= 1.3.2 (you have 1.3.1). Please `gem update --system` and try again.
	elecoma-2.0.3/ /usr/local/lib/site_ruby/1.8/rubygems/custom_require.rb:32:in `gem_original_require': no such file to load -- gettext (MissingSourceFile)	from /RoR/EC/elecoma-2.0.3/config/environment.rb:9
	substruct_rel_1-3-1/ config.gem: Unpacked gem subexec-0.0.4 in vendor/gems has no specification file. Run 'rake gems:refresh_specs' to fix this. RubyGem version error: rack(1.0.1 not ~> 1.1.0) (Gem::LoadError)
#ubuntu on VMware troubleshooting
	#VMware converterのメリット
		WS.SVとはちがい、複数の変換タスクを、WS/SVの作業をとめることなく実行できる。
			これに比べ、WS/SVのインポート変換機能は 一個の変換作業でWS/SV全体を止めてしまう。
		WS/SVとはちがい、snapshot削除や完全クローン作成,resizeを事前に準備しなくとも、直近状態だけを変換してくれる。
	#version確認方法	cat /etc/lsb-release
		DISTRIB_ID=Ubuntu
		DISTRIB_RELEASE=8.10
		DISTRIB_CODENAME=intrepid
		DISTRIB_DESCRIPTION="Ubuntu 8.10"
	#partitiona&swap拡張
		VMware-WS/SV　>6.xで snapshot全部削除後、または完全クローンに対して　"HDDの拡張"(=vmware-cdiskmanager.exe)で拡張
			-VMware WS/SVの"import"メニューも動作不審
			-Vmware Converterは動作不審
		GpartedのCD起動。/dev/*d*/ マウントパスは自動作成される
	#拡張ずみswapのmount
		/etc/fstab 内のuuidを/dev/disk/by-uuid で認識されたものにかきかえ
		hybernate-error---> /etc/initramfs-tools/conf.d もかきかえ
		sudo dpkg-reconfigure  initramfs-tools
		sudo swapon -a; sudo swapon -s;
	Tshoot1: case :loobackアドレス以外のNIC(lo only, no eth0..ethn)
		ipaddress missing ,DNS failure and boot message "SIOCSIFADDR no such device "
			sudo mv /etc/udev/rules.d/70-persistent-net.rules /etc/udev/rules.d/70-persistent-net.rules.bak
			init 6 / shutodown -now
	#TShoot2: vmware usb arbitration driver windows 7 do not run why fix
		AMD-CPU, Huawei, Sony-ErriscsonのUSBドライバーなどはVMWRWS-7.x(筆者の場合は7.1)でもエラー続出。
		MS標準のUSBドライバーにroll-backか削除でもどす。
		These issues occur when unknown USB drivers are installed on a Windows machine hosting the VMware Workstation software.
		To resolve these issues, roll back to the original Microsoft USB drivers on the host:
		   1. Right-click (My) Computer and select Manage.
		   2. In the left pane of the Computer Management window, select Device Manager.
		   3. Expand Universal Serial Bus Controllers.
		   4. Right-click USB Root Hub and select Properties.
		   5. In the Driver tab, click Roll Back Driver.

		For computers with AMD processors:
		   1. Right-click (My) Computer and select Manage.
		   2. In the left pane of the Computer Management window, select Device Manager.
		   3. Expand Universal Serial Bus Controllers.
		   4. Locate the AMD USB Filter Driver.
		   5. Right-click it and select Uninstall.
		   6. Select Uninstall the driver software for the device.
		   7. Restart your computer.
		if the above method fails, you can also uninstall the AMD USB driver manually. To do so:
		   1. Open the Windows registry, and go to HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Class\{36FC9E60-C465-11CF-8056-444553540000}.
		   2. Remove the usbfilter value from the UpperFilter string.
		   3. Go to HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\.
		   4. Delete the usbfilter string (=string value ).
		   5. Delete this file: %system32%\drivers\usbfilter.sys.
		   6. Reboot your computer


#VBadd-in How-TO
	winMe.vm
	win2KproEng.vm
	winSVJP.vm
	USB-X
	VB6combo
#Ubuntu-config 頓挫項目
	#rdebug-config
		2rdb:1) show commands
		No readline suport

	vim
		unix - 日本語charsetをステータスバーに表示
		:Rtags	 Calls ctags -R on the current application root and writes the result to tmp/tags.
		Exuberant ctags must be installed.  Additional arguments can be passed to ctags with |g:rails_ctags_arguments|.
			#Exuberant ctags
				sudo sh ./configure
				sudo make clean
				sudo make install
				sudo make
				cd ../
				rm ctags-5.7.tar
				ctags -R --languages="-JavaScript"
		fastri qri reference:
			let g:RCT_ri_cmd =
		rcodetools.vimを~/.vim/pluginにコピー。インストーラーは不完全
			#RTC_completion失敗
			/usr/lib/ruby/gems/1.8/gems/rcodetools-0.8.4.0/lib/rcodetools/completion.rb:166:in `runtime_data_with_class': -:24: can't convert Fixnum into String (TypeError) (Rcodetools::ProcessParticularLine::NewCodeError)
		refe日本語環境
			 sudo vi /usr/lib/ruby/gems/1.8/gems/refe-0.8.0.3/lib/refe/searcher.rb のshift-jis?ブロックをコメントアウト




	#done
		vim
			helptag generation
			omni-completion
		OCR & scanner
		gems local installation 	=>	sudo gem[ersion number] install --local
		ebian local   installation	=>	sudo dpkg -i [packagename].deb
		ebian local uninstallation	=>	sudo dpkg -r [package-nickname]
		rails 1.2.x & 2.0.x
		WiFi troubleshooting ---FLET-spot & 3rd vendor daemon
		Yahoo auction automation
		shareware publishing
		Windows Mobile on smartphone
		VMware on UMPC
		mashup: greasemonkey & Yahoo pipes
		将来に期待のbad know-how, bad-hack。
			Foxitreader---- 起動は三秒、Adobe reader 9 の六倍ほど。しかし、linux版マニュアル自体がpdfでかかれていたり、ubuntuには*.bz2版ではなく、*.deb版をダウンロードしてdpkg- -iでローカルインストールする必要がある。さらに、550KBしかないPDFをよみこむとクラッシュ。そもそもubuntu公式レポジトリーに登録されておらず、ネットワークインストールできないアプリはさわるべからず、という悪例。
			mplayer ---rm file

#narrow-obile-band compatible hosting
	wikispases=initial oadig 27sec, @wiki=20sec

#bash commands
	kick job in background	=>	[command]&
##Linode	cd ~;rm vimhomeold.tar*;tar -cvf vimhomeold.tar .vim* *vim* .ve_* MyWiki/ .*rc  ;gzip vimhomeold.tar; cd -
	cd ~/RoRapps/; tar -cvf 2chnrg-latest.tar  2chnrg ;gzip 2chnrg-latest.tar; cd -
##Linode	cd ~/RoRapps/; tar -cvf 2chnrg-dev.tar 2chnrg/ ;gzip 2chnrg-dev.tar;cd -
##Linode	cd ~/RoRapps/; tar -cvf dev232plain.best.tar dev232plain/ ;gzip dev232plain.best.tar; cd -
##Linode	sftp xxx.xxx.xxx ;(su password & root password) --> mput *gz /root
##LInode	gem install chronic packet
			ruby script/plugin install http://svn.devjavu.com/backgroundrb/trunk
			rake backgroundrb:setup; rake db:migrate
##Linode	ruby script/server -p 80 -b 74.207.240.145 -e production
			ruby lib/scraper.rb 2nn

##Linode    Ubuntu Hardy に ImageMagick RMagick をインストールす
	くどいくらいやる。リポジトリの場所の改廃が早いため-->
		% sudo aptitude update
		% sudo aptitude install imagemagick libmagick9-dev
	ヴァージョン合わせる。そしてローカルコンパイルに数十分かかる-->
		% sudo gem1.8 install rmagick -v 1.15.13
	確認は，
		$ irb
		irb(main):001:0> require 'rubygems'
		=> true
		irb(main):002:0> require 'RMagick'
		=> true
##Linode   file_column plugin to rails app
		"webからfile_column.tar.gz をダウンロード、展開、file_colmnにフォルダー名かきかえ
		EDIT: /home/you/RoRapps/2chnrg/vendor/plugins/file-column/lib/file_column.rb
			#org       my_options = FileColumn::init_options(options, Inflector.underscore(self.name).to_s, attr.to_s)
			  my_options = FileColumn::init_options(options, self.name.to_s.underscore, attr.to_s)
	grep -RI "1.2" ./MAN*/*htm*>tmpgrep.txt

	#tar tvf xvf cvf zZ option is buggy.

==============================================================================
#wget
	wget -o wgetlog.txt -S -x -r --level=2 -k -p -A --accept=htm,html,shtml,jpg,jpeg,gif,png
		http://www.asahi-net.or.jp/~aa4t-nngk/ipttut/output/index.html
	wget -O - -q ftp://ftp.apnic.net/pub/stats/apnic/delegated-apnic-latest | grep ipv4 | grep JP | grep -v grep | perl -a -F'/\|/' -n -l -e 'BEGIN{ print "order deny,allow\ndeny from all\n" } $mask = 32; $square = 0; $value = $F[4]; while($value != 1){ $value /= 2; $square++ } print "allow from $F[3]/" . ($mask - $square)' > /path/to/.htaccess

#webmin-operaton
	tail /root/2chnrg/log/backgroundrb_11006.log -n 50; vmstat -S M ;ps -ef|grep back;ps -ef|grep script/server
	#HDD残量調査
	df -a
	#apacheの過剰アクセス調査
	sort /usr/local/apache2/logs/access_log |grep 484 |grep -P "+\.+\.+\.+ - "

#iptables-webmin-way
		 #apt-get install iptables fwbuilder ssh-server
		 sudo su
		 iptables -F
		 sh filter.sh
		 iptables -L
		 iptables-save > /etc/iptables.up.rules
		 iptables-restore < /etc/iptables.up.rules
		 #webmin set
	http://sei.qee.jp/docs/program/hta/makeDeny/index.html
	iptables  http://www.hakusan.tsg.ne.jp/tjkawa/lib/krfilter/index.jsp

	#show process tree
	ps efaux
	# sort /usr/local/apache2/logs/access_log |grep 484 |grep -P "\d+\.\d+\.\d+\.\d+ - " >CPUoverloadElement.txt
	#status code 484 アドレスが不完全 WORST secu-hole-clawlers' IP aaadresses:
	94.101.118.24
	200.247.215.250
	72.26.201.162
	201.77.202.151
	61.19.255.14
	88.203.203.149
	217.24.240.68
	112.78.193.229
	188.165.64.227
	157.27.10.105
	92.240.68.152
	85.17.88.9
	74.83.233.125
	109.230.221.171

	#status code 484 アドレスが不完全で旧リンクをクロール seldome-maintained-clawlers' IP aaadresses:
	119.63.193.60 119.63.193.61
	119.63.193.113 119.63.193.114
	119.63.193.224

#SQLite3
	1|some_body||some_body@gmail.com||||ba854c204ba2b82c32ffc8bdb54e3fa8427bca80|1147b878f81136cd10845c8d79789e42969811ab||||ee029d36aec513eb2e4c0ef2eccc8bc50f886fc5|||f|2009-04-25 19:27:24|2009-07-24 07:08:56|2009-04-25 19:27:22|
	sqlite> select * from users;
	1|some_body||some_body@gmail.com||||ba854c204ba2b82c32ffc8bdb54e3fa8427bca80|1147b878f81136cd10845c8d79789e42969811ab||||ee029d36aec513eb2e4c0ef2eccc8bc50f886fc5|||f|2009-04-25 19:27:24|2009-07-24 07:08:56|2009-04-25 19:27:22|
	sqlite> select * from sections;
	1|Page|1||1|2|home|home|Home|||--- {}
	||-1||

	//　まずは、データベースを指定してsqliteを起動
	> sqlite3 database_name

	//　デフォルトでは、セパレータが｜になっているので,csv形式のカンマ区切りに変更
	//　これを忘れると次のimport処理ではまる。馬鹿らしい・・
	sqlite> .separator ,

	//　インポートのコマンドでcsvファイルとテーブルを指定する。別に.csvという拡張子でなくとも.txtでもかまわない。
	sqlite> .import csv_file_name table_name

	// 　エラーがでなかったらsqlコマンドでデータが入っているか確認
	sqlite> select * from table_name

	// 　もう一度取り込みなおしたいならdeleteでデータを消す
	sqlite> delete from table_name

	//おまけ・・・csvファイルを作成する
	csvファイルを作成するのにMACだとexcelが使えない（正確には買うのがもったいない、OpenOfficeはちょっと重たいし、日本語がだめ）
	なので、もっとも簡単なのがGoogle DocsでExportするのが便利。。
	ただし、カラム名はインポートするファイルからは削除しておかないとエラーになるので要注意。
	投稿者 ToolsCafe 時刻: 23:39


OCRこつ
	そもそも灰色網掛け背景に要点がかいてある本はえらぶな。
	OCRがもっとも認識不得意とする。
	白黒二色印刷、DTPレイアウトなしのワープロうちの本が一番よい。

	monocrome 600DPI, cuting page border & ページ中央の黒ずみ(黒棒一個は段組認識にOK)

	マニュアルでページ選択しつつ、傾き補正、ノイズ小除去、レイアウト認識、をやるのが結局早くしあがる。
		1領域を文字以外に自動判別する
		2領域認識連続失敗でハング
	という問題を回避するためでもある

	認識結果はメモリ上でtxtにコピー。ファイル直は失敗する。

	txteditorでのごみ除去パターン

		\n\n*	\n
		 +レ\n	\n
		･･*	""
		^ +	""
		･･+	""
		<.?.?十	""
		 *＼＼* *	""
		" +"	" "
		([\w\s\t])9(\w?)	\1g\2
		([\w\s\t])1(\w?)	\1l\2
		「	r
		[國圓圖]	■
		VV	W
		vv	w
		g	\n



	ExcelでHimem用に11	in	out		0 形式に整形


	3ｷｬﾘｱ対応USB充電+予備ｱﾀﾞﾌﾟﾀ白一式 美品




Mshaver改筆
	an MS-Outlook
	e-mail[s]	e-mail
	accuracy	reliable acuracy
	精度	正確性(確かさ)

	MailShaver is a MS-Outlook add-in software that recognizes OVERLAPPING OF E-MAIL CONTENTS, then automatically "squeezes(=condense)"/disposes your e-mail containing obsolete contents/context. this is difference from other tools that only sweeps duplicated copies of e-mail....
	MailShaver also has following automatic functionality:
	auto-cleaning of e-mail subject / auto-categorizing / auto-outdenting / timer-based cleaning / dumping or retrieving attachments
	/ Listing e-mail addresses  / Show&reach a full-path of MS-Outlook Namespace / Peeking into e-mail without opening mail /disabling "sent items" box
	+ plus some more features...



	MailShaver also has following automatic functionality:
	MailShaver can automatically "squeeze(=condense)"and disposes obsolete e-mail,  cleans e-mail subjects,  categorizes/outdents mail, dumps/retrieves attachments
	,  generates mail addresses  in CSV, Shows full-path to a mail, peeking into e-mails,, disabling "sent items" box
	+ plus some more features...


調査メモ
	共有フォルダ VMware　-3.5h
	無線LANアダプタかいかえとMACアドレス依存のHOT-SPOT接続トラブル　-3h

	vimrc
	vimmacro
	fletstool uninstall@wakou-eki

	　　Acer
	　　　├A-open
	　　　└BEN-Q

	ASUS
	ASUStek
	MSI
	Kingston
	Prinston technology
	GreenHouse = Korea

	■yahoo pipe
		hatena---> 大手小町、
	Daijob http://www.daijob.com/jobs/search?pg=0&kw=ruby&kf[]=1&kf[]=2&ns=0&xs=0&la=&lb=&hs=0&hx=0&el[]=5&as[]=1&as[]=2&as[]=3&li=0&submit.x=51&submit.y=13&submit=%E5%86%8D%E6%A4%9C%E7%B4%A2
	==================================＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
	人民元箪笥預金=半年１００万円しかおろせない。





#linux-rehabilitaion menu
	#3month-blank
		 vi---set nowrap, set nonumber, set list
		 w3m google.co.jp
		 login to webmin with ID= "some_body"
		 sudo ruby R2chnnInitfork.rb help
		 sudo ruby R2chnnInitfork.rb start localdebug home


#mySQL
	#Linode	sudo apt-get install mysql-server mysql-client libmysqlclient15-dev libmysql-ruby1.8 -y
		you@ecolnux:~/RoRapps/2chnrg/lib$ ps -ef |grep sql
		root      3300     1  0 17:29 ?        00:00:00 /bin/sh /usr/bin/mysqld_safe
		mysql     3446  3300  0 17:29 ?        00:00:01 /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --user=mysql --pid-file=/var/run/mysqld/mysqld.pid --skip-external-locking --port=3306 --socket=/var/run/mysqld/mysqld.sock
		root      3447  3300  0 17:29 ?        00:00:00 logger -p daemon.err -t mysqld_safe -i -t mysqld

	#Linode >	mysqladmin create r2chnn -u root -p
	#Linode >
		rake adva:install:core;rake adva:uninstall engines=blog
		rake db:migrate
	#cf.	rails -d mysql [pj-name]
	#edit config/database.yml
		development:
			adapter: sqlite3
			database: db/development.sqlite3
			pool: 5
			timeout: 5000
		dev:
			adapter: mysql
			database: r2chnn
			username: "root"
			password: "alison"
			timeout: 5000
			socket: /var/run/mysqld/mysqld.sock
			#encoding: utf8
	cp config/environment/development.rb config/environment/dev.rb
	>	mysql -u root -p
		 show databases;
		 use [DBname];
		 show tables;
		 describe [table-name];
		\h	help
		\q	quit
		status

	mysql> select * from users ;
		+----+------------+-----------+----------------------+----------+-------+-----------+------------------------------------------+------------------------------------------+------+-------+---------+-------------+-----------+------------------+-----------+---------------------+---------------------+---------------------+------------+
		| id | first_name | last_name | email                | homepage | about | signature | password_hash                            | password_salt                            | ip   | agent | referer | remember_me | token_key | token_expiration | anonymous | created_at          | updated_at          | verified_at         | deleted_at |
		| +----+------------+-----------+----------------------+----------+-------+-----------+------------------------------------------+------------------------------------------+------+-------+---------+-------------+-----------+------------------+-----------+---------------------+---------------------+---------------------+------------+
		| |  1 | some_body | NULL      | some_body@gmail.com | NULL     | NULL  | NULL      | d9e778c53529bcf488846230be0f6bf6f3a922d4 | 9ee11fa50003a673b6c783263a61770f37254b55 | NULL | NULL  | NULL    | NULL        | NULL      | NULL             |         0 | 2009-07-25 09:19:17 | 2009-07-25 09:19:17 | 2009-07-25 09:19:16 | NULL       |
		| +----+------------+-----------+----------------------+----------+-------+-----------+------------------------------------------+------------------------------------------+------+-------+---------+-------------+-----------+------------------+-----------+---------------------+---------------------+---------------------+------------+
		| 1 row in set (0.00 sec)
		|

	 MySQL インポートとエクスポート（テキストデータ） Submitted by sasaki on 月曜, 2007-01-15 15:44
		 #erace all existing rows
			 mysql -u root -p
			 use r2chnn;
			 delete from kokuekis;
		 ■テキストTAB形式でのエクスポート
			  データベースmydbのempテーブルからタブ区切りのテキストデータでエクスポートする。
				 $ sudo mysql -B --skip-column-names -D mydb -e 'select * from emp;' -u tanaka -p > out.txt
				 $ sudo mysql -B --skip-column-names -D r2chnn -e 'select * from kokuekis;' -u root -p > test.txt
			  --skip-column-namesを削除して実行すれば、カラム名も出力されるので便利。
		 #vi replace mysq-export&import
			%s/】\t\t/】\t\t2009\//gc
			%s/】\t\t2009\/03/】\t\t2010\/03/gc
			%s/】\t\t2009\/02/】\t\t2010\/02/gc
			%s/】\t\t2009\/01/】\t\t2010\/01/gc
				#置換もれがあるのでvi上でチェック
		  #文字化け対策
		  ■テキストデータのインポート mysqlimport編
			  データベースmydbのempテーブルにテキストデータをインポートする。
				  tar cvf tbl.tar *tbl.*; #<----sftp with binmode
				  SHOW VARIABLES LIKE 'character_set%';
						SHOW VARIABLES LIKE 'character_set%';
						+--------------------------+----------------------------+
						| Variable_name            | Value                      |
						| +--------------------------+----------------------------+
						| | character_set_client     | latin1                     |
						| | character_set_connection | latin1                     |
						| | character_set_database   | utf8                       |
						| | character_set_filesystem | binary                     |
						| | character_set_results    | latin1                     |
						| | character_set_server     | latin1                     |
						| | character_set_system     | utf8                       |
						| | character_sets_dir       | /usr/share/mysql/charsets/ |
						| +--------------------------+----------------------------+
						? 解決方法その3 root になれるなら MySQL のデフォルト文字コードを UTF-8 に変更する。 /etc/my.cnf か /etc/mysql/my.cnf を開き（ない場合は mysql が起動するときの設定ファイルを探す）、MySQLのデフォルト文字コードを UTF-8 に変更する。
						# vi /etc/my.cnf
						[mysqld]
						default-character-set = utf8
						[mysql]
						default-character-set = utf8
						[mysqldump]
						default-character-set = utf8
				  $ sudo mysqlimport --local mydb emp.txt -u root -p
				  $ sudo mysqlimport --local r2chnn kokuekis.tbl.tsv -u root -p
				 select * from kokuekis where sbm > 900;
			 mydb：　データベース名
			 emp.sql：　テーブル名.sql（中身はテキストタブのデータ）
			 テキストエディタやExcel等で、TEXT-TAB形式で書き出した後、「テーブル名.txt」へ変更する
			 --localを指定しないと、「Access denied」エラーが発生する。





■ActieRecord-troubleshooting
 QuestChapter.all.map{|record| [record.id, record.quest_sections.count]}
 QuestChapter.where(id: 39).first.quest_sections
 QuestChapter.all.map(&:id)

■マスター管理スクリプト
[19:13:00] 純一 大島: bundle exec rake dxd:db:master:update

■コーディング規約
 #@jっていう変数名はインスタンス変数として使う場合は、意味の取れる名前に変更

 svn status| grep -niE "*rb$"



[-tmp-]
[-ecolinux-config-steps-]
[-vim-]
	[-vimScript-]
	[-vimWindowTab-]
[-RubyMainOTL-]
	[-hpricot-]
[-RailsApache-]
	[-railsDBapi-]
	[-rails_activescafhold-]
	[-hpricot-]#test
sudo /usr/local/apache2/bin/httpd& start
#mod_rails-passenger RailsMaxPoolSize =2でもlinode360で不安: mongrel cluster N=3 で50K/dayこえたら検討
#-----------------------------------------------------------------------------
you@ecolnux:~/RoRapps/2chnrg$ vmstat -S M
	you@ecolnux:~/RoRapps/2chnrg$ passenger Node=1 below
	procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
	 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa
	 3  0    196      8      1     27    0    0    27    19  144   98  9 14 75  2
	you@ecolnux:~/RoRapps/2chnrg$ mongrel_cluster Node=1 below
	procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
	 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa
	 2  0    126     13      4     41    0    0    27    19  144   98  9 14 75  2
	you@ecolnux:~/RoRapps/2chnrg$ mongrel_cluster Node=2 below
	procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
	 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa
	 4  0    126      6      3     32    0    0    27    19  144   99  9 14 75  2
	-------------------------------------------------------------------------------

---------------------------------------------------------------------------

-------------------------------------------------------------------------------

-------------------------------------------------------------------------------

dumma
[-tmp-]
[-ecolinux-config-steps-]
[-vim-]
	[-vimScript-]
	[-vimWindowTab-]
[-RubyMainOTL-]
	[-hpricot-]
[-RailsApache-]
	[-railsDebuggers-]
	[-railsDBapi-]
	[-rails_activescafhold-]
	[-hpricot-]#test




#Ruby and RoR on ubuntu/ecolinux
	#WWW::Machanize
		sudo vim  /usr/lib/ruby/gems/1.8/gems/mechanize-0.9.2/lib/www/mechanize.rb
		User Agent aliases takami
			AGENT_ALIASES = {
			'Windows IE 6' => 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)',
			'Windows IE 7' => 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)',
			'Windows Mozilla' => 'Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.4b) Gecko/20030516 Mozilla Firebird/0.6',
			'Mac Safari' => 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/418 (KHTML, like Gecko) Safari/417.9.3',
			'Mac FireFox' => 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.0.3) Gecko/20060426 Firefox/1.5.0.3',
			'Mac Mozilla' => 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.4a) Gecko/20030401',
			'Linux Mozilla' => 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.4) Gecko/20030624',
			'Linux Konqueror' => 'Mozilla/5.0 (compatible; Konqueror/3; Linux)',
			'iPhone' => 'Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1C28 Safari/419.3',

				'SO903i' => 'DoCoMo/2.0 F903i(c100;TJ)',
			#     #
			'Mechanize' => "WWW-Mechanize/#{VERSION} (http://rubyforge.org/projects/mechanize/)"
			}

				  sudo gem1.8 install schof-searchlogic
					#copy/edit config/configgb.yml
					  sudo rake gems:install schof-searchlogic
			  sudo chmod 664 /usr/lib/ruby/gems/1.8/gems/sqlite3-ruby-1.2.4/lib/sqlite3/database.rb
			  sudo chmod 664 /usr/lib/ruby/gems/1.8/gems/sqlite3-ruby-1.2.4/lib/sqlite3/translator.rb
	##Linode	sudo ssh 74.207.240.145
	##Linode	apt-get update	#update package-list
	##Linode	sudo apt-get install gcc make language-pack-ja cron
	#instllation of ruby, rails, and other related tools
	  sudo apt-get install ruby irb rdoc ri
	  or
	##Linode	gem install -v=2.3.2 rails
	#Linode	download latest RubyGEMS from http://rubyforge.org/frs/?group_id=126
		  # wget http://rubyforge.org/frs/download.php/45905/rubygems-1.3.1.tgz
		  tar zxvf rubygems-1.3.1.tgz
		  cd rubygems-1.3.1
		  sudo ruby setup.rb
	#Linode	dpkg-reconfigure locales; update-locale LANG=ja_JP.UTF-8; dpkg-reconfigure tzdata	#tzdata=timezone-config

	  sudo apt-get install libopenssl-ruby
	  sudo gem1.8 install rails -y
		  sudo apt-get install ruby1.8-dev libsqlite3-dev sqlite3
		  sudo gem1.8 install sqlite3-ruby
		  ls -tal  /usr/lib/ruby/gems/1.8/gems/sql*/lib/sql*/
			  sudo chmod 664 /usr/lib/ruby/gems/1.8/gems/sqlite3-ruby-1.2.4/lib/sqlite3/database.rb
			  sudo chmod 664 /usr/lib/ruby/gems/1.8/gems/sqlite3-ruby-1.2.4/lib/sqlite3/translator.rb
	  sudo gem1.8 install rails --version 1.2.6
		  sudo apt-get install mysql-client-5.0
	  rails test
		  ruby test/script/server
		  http://localhost:3000
	#debugger & help-manual installation
		sudo gem1.8 install ruby-debug
		xmpfilter
			sudo gem1.8 install rcodetools
			sudo gem1.8 install fastri
				fastri-server -b; fastri-server -B	;#create TOC & full-text-index @ ~/.fastri-***
				fastri-server       ;#invoke index server, instead you can use -L  option to be offline.
				fri -h;fri -e NKF
	#vim config for Rails
		#vim-rubyインストール手順は既存の設定ファイルやプラグインに影響しないが、心配ならば ~/.vimrc と~./vimを事前バックアップ
		デフォルトのvimはrubyインタフェースを実装していないので、対応版をインストール (upgradeだと依存環境全部更新するのでinstall )
			sudo apt-get install vim-ruby
		vim-rubyのインストール。上記と名前は一緒ですが、今回はrubyのvimのライブラリです。
			sudo gem1.8 install vim-ruby
			sudo vim-ruby-install.rb
				Possible Vim installation directories:
				        1) /home/[yourID]/.vim
				Please select one (or anything else to specify another directory):  ←1を入力
		~/.vimrcを編集。以下を追加
			filetype on
			filetype  plugin indent on

		これで、編集中にCtrl-x Ctrl-oを押すと 補完がききます。オムニ補完っていうらしい。
		キーバインドを変更するには、以下のようにvimrcを設定することで可能です。ここではCtrl-kに割り当てています。
			imap <C-k> <C-x><C-o>
		#" :h competion" to see completion-command, such as C-n, C-p
		~/.rdebugrc作成・編集
			  set autoeval
			  set autolist
			  set autoreload
		~/irbrc作成・編集
			# 補完を有効
			require 'irb/completion'
			module Kernel
				def r(arg)
					puts `refe #{arg}`
				end
				private :r
			end
			class Module
				def r(meth = nil)
					if meth
						if instance_methods(false).include? meth.to_s
							puts `refe #{self}##{meth}`
						else
							super
						end
					else
						puts `refe #{self}`
					end
				end
			end


		#vimbrowse.pl
			cpan LWP::UserAgent
				In addition, the vim plugin synmark.vim is required. This is vim script 1128, available at:
				  http://vim.sf.net/scripts/script.php?script_id=1128
				  cp -r vim/* ~/.vim; cp -r perl ~/.vim; cp -r extra/* ~/.vim;
				  :helptags ~/.vim/doc

				#after installing perldoc
					"bin/vimbrowse.pl
					perldoc vimbrowse.pl
					perldoc browser.pod
					or
					vimbrowse.pl --man
						you@ecolnux:~/.vim$ grep -inRI "ViewSource" . "*.*m"


			#anthy
				http://ore.saizensen.net/にしたがってAnthy再設定
					以下をインストールするパッケージとしてマーク。インストール済みのは再インストール指定。
					*  Synaptic Package Managerを起動
					* “SCIM“|"kasumi"でパッケージを検索

					  scim-anthy
					  scim-bridge-agent
					  scim-bridge-agent-gtk
					  scim-bridge-agent-qt
					  scim-bridge-agent-qt4
					  scim-gtk2-immodule
					  scim-qtimm
					  kasumi
				* 次に、Ubuntuの起動時にSCIMを標準の言語入力インターフェイスとして定義するためにファイル作成 or 編集
					  sudo vi gedit /etc/X11/Xsession.d/74custom-scim_startup
					  74custom-scim_startupa??a?￠a?≪a-?a?¨a??a??a?´a??a?￣a≫\a，?a?Re!?a??e??a??a?a?aa??a?´a??a?￣a?°e|?a?≪a??a??a??a??a??a?
					  export XMODIFIERS="@im=SCIM"
					  export GTK_IM_MODULE="scim"
					  export XIM_PROGRAM="scim -d"
					  export QT_IM_MODULE="scim"
				* OS再起動。init 6
					 ~/irbrc編集
			gems&plugins--------------------------------
				sudo apt-get install libxml2-dev libxslt1-dev git-core subversion
				 sudo gem1.8 install creator
				  sudo gem1.8 install schof-searchlogic
					#copy/edit config/configgb.yml
					  sudo rake gems:install schof-searchlogic
				  sudo gem1.8 install railroad --local
				  sudo gem1.8 install jpmobile-0.0.4.gem --local
					  RAILS_ROOT/config/environment.rb の Rails::Initializer.run do |config| ? end 内に
						config.gem "jpmobile"
						の行を追加する。

					=== pluginとしてインストールする場合
					リリース版:
					  % ./script/plugin install http://jpmobile.rubyforge.org/svn/tags/rel-x.x.x/jpmobile
					  (x.x.xはバージョン)

					開発版:
					  % ./script/plugin install git://github.com/darashi/jpmobile.git


				  sudo gem1.8 install gmailer --local

				[-hpricot-]
				  sudo gem1.8 install hpricot mechanize
					  or sudo gems1.8 install mechanize --local

				ruby script/plugin install http://github.com/two2twelve/onlooker
					git submodule add git://github.com/two2twelve/onlooker.git vendor/plugin_name

				action_mailer_tls プラグインを入れて config/mailer.yml に必要な情報を書いて
				config/initializers/smtp_gmail.rb でactionmailerにオプションをセットするという感じ。
				To install action_mailer_tls the plugin (the old way):

					  1. `./script/plugin install git://github.com/openrain/action_mailer_tls.git -r 'tag v1.0.0'`
					  2. Copy vendor/plugins/action_mailer_tls/sample/smtp_gmail.rb to config/
					  3. Copy vendor/plugins/action_mailer_tls/sample/mailer.yml.sample to config/
					  4. Update the configuration file with your settings

					To install the gem (the preferred way):

					  1. `sudo gem install openrain-action_mailer_tls -s http://gems.github.com`
					  2. `./script/generate action_mailer_tls`
					  3. Copy RAILS_ROOT/config/smtp_gmail.yml.sample to RAILS_ROOT/config/smtp_gmail.yml
					  4. Update the configuration file with your settings

					To (optionally) vendor this gem:

					  1. Add the following entry to config/environment.rb
						* config.gem "openrain-action_mailer_tls", :lib => "smtp_tls.rb", :source => "http://gems.github.com"
					  2. rake gems:unpack


					Testing it out
					--------------

					  1. `./script/generate mailer Notifier hello_world`
					  2. Add the following lines to config/environments/development.rb
						* config.action_mailer.raise_delivery_errors = true
						* config.action_mailer.perform_deliveries = true
						* config.action_mailer.delivery_method = :smtp
					  3. Update the recipients and from fields in app/models/notifier.rb
					  4. `./script/console `


				#Active scaffold
					#rails2.x
						script/plugin install git://github.com/lackac/render_component.git -r rails-edge
						cd /vendor/plugins;
						git clone git://github.com/activescaffold/active_scaffold.git activescaffold
						*normal motion on rails 2.2.x is suspicious. to b checked. ouhave to "git clone" & edit"config/environment.rb":
						#NOTE: not natively compatible with Spree app.
					#rails1.x
						ruby script/plugin install http://activescaffold.googlecode.com/svn/tags/active_scaffold
						ruby script/plugin install http://activescaffold.googlecode.com/svn/tags/active_scaffold -r rails-2.2

				#my_admin
					ruby script/plugin install http://railsmyadmin.googlecode.com/svn/trunk/my_admin/
					#downloading error Plugin not found: ["http://railsmyadmin.googlecode.com/svn/trunk/my_admin/"]

					#Once the plugin is installed, generate the railsMyAdmin files with:
						_Note: this will copy files from the plugin folders into your application folders._
						ruby script/generate my_admin

							  create  app/controllers/my_admin
							  create  app/helpers/my_admin
							  create  app/views/my_admin
							  create  app/views/my_admin/main
							  create  app/views/my_admin/model
							  create  app/views/my_admin/spy
							  create  public/my_admin
							  create  public/my_admin/images
							  create  app/controllers/my_admin/common_controller.rb
							  create  app/controllers/my_admin/main_controller.rb
							  create  app/controllers/my_admin/model_controller.rb
							  create  app/controllers/my_admin/spy_controller.rb
							  create  app/controllers/my_admin/my_admin_tool.rb
							  create  app/helpers/my_admin/common_helper.rb
							  create  app/helpers/my_admin/main_helper.rb
							  create  app/helpers/my_admin/model_helper.rb
							  create  app/helpers/my_admin/spy_helper.rb
							  create  app/views/layouts/my_admin.rhtml
							  create  app/views/my_admin/main/_ajax.rhtml
							  create  app/views/my_admin/main/_includes.rhtml
							  create  app/views/my_admin/main/index.rhtml
							  create  app/views/my_admin/main/main.rhtml
							  create  app/views/my_admin/main/models.rhtml
							  create  app/views/my_admin/model/_form.rhtml
							  create  app/views/my_admin/model/edit.rhtml
							  create  app/views/my_admin/model/list.rhtml

							  create  app/views/my_admin/model/new.rhtml
							  create  app/views/my_admin/spy/_single.rhtml
							  create  app/views/my_admin/spy/index.rhtml
							  create  public/my_admin/my_admin.css
							  create  public/my_admin/my_admin.js
							  create  public/my_admin/images/destroy.png
							  create  public/my_admin/images/edit.png
							  create  public/my_admin/images/home.png
							  create  public/my_admin/images/new.png
							  create  public/my_admin/images/ajax_indicator.gif


					#Next, copy the following code snippet into the bottom of your environment.rb file:
						## MY ADMIN CONFIG
						require 'my_admin/my_admin_tool'
						# If you only want certain models to be available to RailsMyAdmin, set :all_models to false and specify the desired models in MY_ADMIN_MODELS
						MY_ADMIN_GLOBALS  = {:all_models => true, :confirm_destroy => false}
						# Uncomment this next line if you set :all_models to false above.
						#MY_ADMIN_MODELS  = [Page, Comment, User]
						MY_ADMIN_AUTH     = Proc.new { |c| c.send("admin_logged_in?") }
	#rails plugins to install
		ruby script/plugin install http://activescaffold.googlecode.com/svn/tags/active_scaffold -r rails-2.2
		ruby ruby script/plugin install http://railsmyadmin.googlecode.com/svn/trunk/my_admin/
		ruby script/plugin install http://activescaffold.googlecode.com/svn/tags/active_scaffold
		ruby script/plugin install http://code.openrain.com/rails/action_mailer_tls/
		ruby script/plugin install http://svn.plasticrain.com/projects/plugins/mysql_backup/
		ruby script/plugin install http://github.com/two2twelve/onlooker.git
		git submodule add git://github.com/two2twelve/onlooker.git vendor/plugin_name
		ruby script/plugin install http://svn.robertrevans.com/gems/creator/
		gem install creator
		script/plugin install svn://rubyforge.org/var/svn/betternestedset/tags/stable/betternestedset
	#WWW::Machanize
		sudo vim  /usr/lib/ruby/gems/1.8/gems/mechanize-0.9.2/lib/www/mechanize.rb
		User Agent aliases takami
			AGENT_ALIASES = {
			'Windows IE 6' => 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)',
			'Windows IE 7' => 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)',
			'Windows Mozilla' => 'Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.4b) Gecko/20030516 Mozilla Firebird/0.6',
			'Mac Safari' => 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/418 (KHTML, like Gecko) Safari/417.9.3',
			'Mac FireFox' => 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.0.3) Gecko/20060426 Firefox/1.5.0.3',
			'Mac Mozilla' => 'Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.4a) Gecko/20030401',
			'Linux Mozilla' => 'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.4) Gecko/20030624',
			'Linux Konqueror' => 'Mozilla/5.0 (compatible; Konqueror/3; Linux)',
			'iPhone' => 'Mozilla/5.0 (iPhone; U; CPU like Mac OS X; en) AppleWebKit/420+ (KHTML, like Gecko) Version/3.0 Mobile/1C28 Safari/419.3',

				'SO903i' => 'DoCoMo/2.0 F903i(c100;TJ)',
			#     #
			'Mechanize' => "WWW-Mechanize/#{VERSION} (http://rubyforge.org/projects/mechanize/)"
			}

	#Heroku-----------------------------------------------------------------------------------------------------------------
			 sudo gem1.8 install heroku
			 sudo gem1.8 install herokugarden
				 ssh-keygen -t rsa
					Generating public/private rsa key pair.
					Enter file in which to save the key (/home/you/.ssh/id_rsa):
					Created directory '/home/you/.ssh'.
					Enter passphrase (empty for no passphrase):
					Enter same passphrase again:
					Your identification has been saved in /home/you/.ssh/id_rsa.
					Your public key has been saved in /home/you/.ssh/id_rsa.pub.
					The key fingerprint is:
					e6:22:07:46:2e:48:1a:48:14:65:76:a4:3e:bd:30:ea you@ecolnux
					The key's randomart image is:
					+--[ RSA 2048]----+
					|.+o+.o           |
					|o o o            |
					|o. ..            |
					|oo.o.            |
					|o .=+.  S        |
					|  .o+..o         |
					| .  ..o .        |
					|.    o .         |
					| E               |
					+-----------------+

				heroku keys:add
				git init
				git add .
				git commit -m "new app"
				heroku create	/	herokugarden create

					Enter your Heroku credentials.
					Email: some_body@gmail.com
					Password:
					Uploading ssh public key /home/you/.ssh/id_rsa.pub
					Created http://untitled-f2fa5a.herokugard1en.com/ | git@herokugarden.com:untitled-f2fa5a.git
						Git remote heroku added

					Created http://cold-wind-71.heroku.com/ | git@heroku.com:cold-wind-71.git

				git push heroku master

					Enter passphrase for key '/home/you/.ssh/id_rsa':
					Counting objects: 686, done.
					Compressing objects: 100% (606/606), done.
					Writing objects: 100% (686/686), 1.44 MiB | 3 KiB/s, done.
					Total 686 (delta 60), reused 0 (delta 0)

					-----> Heroku receiving push
					-----> Rails app detected
						   Compiled slug size is 1.3MB
					-----> Launching........ done
						   App deployed to Heroku

					.To git@heroku.com:cold-wind-71.git
					 * [new branch]      master -> master

				heroku rake db:migrate
					error-->edit config/environment.rb
				heroku open



				#repeat
					git push heroku

				#heroku&git commande---------------------------------------------------------------------------------------------
					  503  heroku keys
						you@ecolnux:~/RoRapps/takamisoft2$ heroku keys
						=== 1 key for some_body@gmail.com
						ssh-rsa AAAAB3NzaC...vF7ojbsQ== you@ecolnux

					  504  heroku list
						you@ecolnux:~/RoRapps/takamisoft2$ heroku list
						radiant-journey-14
						gentle-planet-73

						heroku destroy [--app appname]
							heroku destroy --app gentle-planet-73

					  505  heroku info [appnameIntheList]
						you@ecolnux:~/RoRapps/takamisoft2$ heroku info radiant-journey-14
						=== radiant-journey-14
						Web URL:        http://radiant-journey-14.heroku.com/
						Git Repo:       git@heroku.com:radiant-journey-14.git
						Collaborators:  some_body@gmail.com
						you@ecolnux:~/RoRapps/takamisoft2$ heroku info gentle-planet-73
						=== gentle-planet-73
						Web URL:        http://gentle-planet-73.heroku.com/
						Git Repo:       git@heroku.com:gentle-planet-73.git
						Collaborators:  some_body@gmail.com

					 git remote add heroku git@heroku.com:appname.git

						   git-remote [-v | --verbose]
						   git-remote add [-t <branch>] [-m <master>] [-f] [--mirror] <name> <url>
						   git-remote rm <name>
						   git-remote update [group]
						   git-remote show [-n] <name>
						   git-remote prune [-n | --dry-run] <name>
					usage: git [--version] [--exec-path[=GIT_EXEC_PATH]] [-p|--paginate|--no-pager] [--bare] [--git-dir=GIT_DIR] [--work-tree=GIT_WORK_TREE] [--help
					] COMMAND [ARGS]

					The most commonly used git commands are:
					   add        Add file contents to the index
					   bisect     Find the change that introduced a bug by binary search
					   branch     List, create, or delete branches
					   checkout   Checkout a branch or paths to the working tree
					   clone      Clone a repository into a new directory
					   commit     Record changes to the repository
					   diff       Show changes between commits, commit and working tree, etc
					   fetch      Download objects and refs from another repository
					   grep       Print lines matching a pattern
					   init       Create an empty git repository or reinitialize an existing one
					   log        Show commit logs
					   merge      Join two or more development histories together
					   mv         Move or rename a file, a directory, or a symlink
					   pull       Fetch from and merge with another repository or a local branch
					   push       Update remote refs along with associated objects
					   rebase     Forward-port local commits to the updated upstream head
					   reset      Reset current HEAD to the specified state
					   rm         Remove files from the working tree and from the index
					   show       Show various types of objects
					   status     Show the working tree status
					   tag        Create, list, delete or verify a tag object signed with GPG


#summary of spree new app local generation
	spree [railsappname] -d mysql
	mysqladmin create [dbname] -u root -p
	cd [railsappname]
	#edit config/database.yml
	#paste /vendor/lib/smtp_tls.rb for ruby1.8.7 compatibility bug
	rake db:bootstrap
	rake db:migrate
	sudo ruby script/server -p 80 -u
	#login to http://localhost/admin/products/ and edit "Available on:" date making it to be the PAST date
			Email [spree@example.com]:
			Password [spree]:
#spree normal installaton )----------------------------------------------------
	#NG: gem1.8 update spree
		#version 0.9.1 rubygemへの依存度やバージョン管理がややこしくて、updateはおろかinstallすらむずかしい
		#gem install spreeで通信応答せず。git cloneでもってきて以下をやるがだめ。
		#製作者たちにしかupdate/nstallできないソフトはパッケージとは言えず特注システムでしかない。
			sudo gem1.8 update authlogic
			sudo gem1.8 install chriseppstein-compass
			sudo gem1.8 install rsl-stringex
			sudo gem1.8 install javan-whenever
			sudo gem1.8 install searchlogic
			#mv config/database.yml.sample config/database.yml
			#vim config/environment.rb ":
				config.gem 'haml', :version => '>=2.2.0'
			sudo rake db:migrate
			rake db:admin:create

	#かりにspreeのアンインストールコマンドが充実していたら、以下の2chnrgとの統合も検討の余地が出てくる：
		#rename 2chnrg
		#spree -s 2chnrg -d mysql
		cd 2chnrg
		#migrate config/database.yml
		#paste /vendor/lib/smtp_tls.rb for ruby1.8.7 compatibility bug
		rake db:bootstrap
		rake db:migrate
#spree on heroku (failed)----------------------------------------------------
		sudo gem1.8 sources -a http://gems.github.com
		cd -
		git clone git://github.com/schof/spree.git spree
		rake -h;rails -v
		vim config/boot.rb
		vim lib/tasks/release.rake
		rake gems:install
		cd spree/config/
			cp database.yml.example database.yml
			#edit config/boot.rb line58 as follows
				load_rails("2.2.2")  # note: spree requires rails 2.2.2 (change at your own risk)
			touch #RAILS_ROOT/lib/smtp_gmail.rb
			#vim smtp_gmail.rb above
			#vim database.yml
		#rake gems:install
		grep -R 1.15 *
		vim config/environment.rb
		sudo gem1.8 install has_many_polymorphs
		sudo gem1.8 install highline --version 1.4.0
		sudo gem1.8 install mini_magick
		sudo gem1.8 install tlsmail
			cp -R calendar_date_select-1.15/ /home/you/RoRapps/spree/spree/vendor/gems/
			cp -R authlogic-2.0.9/ /home/you/RoRapps/spree/spree/vendor/gems/
			cp -R activemerchant-1.4.1/ /home/you/RoRapps/spree/spree/vendor/gems/
			cp -R has_many_polymorphs-2.13/ /home/you/RoRapps/spree/spree/vendor/gems/
			cp -R highline-1.4.0/ /home/you/RoRapps/spree/spree/vendor/gems/
			cp -R mini_magick-1.2.3/ /home/you/RoRapps/spree/spree/vendor/gems/
			cp -R tlsmail-0.0.1/ /home/you/RoRapps/spree/spree/vendor/gems/
		#install postgresql
			sudo apt-get install postgresql postgresql-client postgresql-contrib pgadmin3
			# PostgreSQLe¨-aR?a?

				# passwd postgres ##postgresa?|a??a?¶a??a?Ra??a?1a?￣a??a??a??e¨-aR?a?
				# su postgres
				$ psql template1
					template1=# alter user postgres with password '******'; ## ******a?￣e?ca??a?aa??a?1a?￣a??a??a??e¨-aR?a?
					template1=# \q ## \qa?§cμ?ao?a?
				$ createuser -AdPE hoge ## hogea?￣e?ca??a?aa，e?￢a?|a??a?¶a??a?，a?a，e?￢a?|a??a?¶a?，a?Ra??a??a??a??a??a?1a??a??a¨ce??e¨-aR?a?
				$ vi /etc/postgresql/8.3/main/postgresql.conf
					listen_addresses = 'localhost'
					a??
					listen_addresses = '*' ##'*'a?，a??a?´a?
				$ vi /etc/postgresql/8.3/main/pg_hba.conf
					##a≫\a，?a??a??a?!a??a?≪a?a，?e?¨a?，e??a??a?192.168.11.1a?￣a??e?aa??a??a??a?￣a??a?￣c?°a￠?a?，a?
					local   all         all                               trust
					host    all         all  192.168.11.1 255.255.255.255  trust
					host    all         all  0.0.0.0     0.0.0.0          password crypt

				$ exit
			# /etc/init.d/postgresql-8.3 restart
		edit database.yml configuration:

			development:
			adapter: postgresql
			host: localhost
			port: 5432
			database: postgres
			username: postgres
			password: [your-password]


		rake db:bootstrap
			Create the admin user (press enter for defaults).
			Email [spree@example.com]:
			Password [spree]:
			Load Sample Data? [y]:

			Sample products have been loaded into to the store

			Finished.

#adva-cms Know-how-----------------------------------------------------------------------------------------------------------------
		#installation: follow the README.doc
		rake adva:install:core
		sudo rake adva:install engines=adva_theme,adva_assets
		sudo rake db:migrate
		#engines
			#adva-wiki
				post comment[s]
				MethodError in CommentsController#create
				undefined method `wiki_content_path' for #<CommentsController:0xb5163c34>
				RAILS_ROOT: /home/you/RoRapps/2chnrg
				Application Trace | Framework Trace | Full Trace
		#you@ecolnux:~/RoRapps/2chnrg$ rake adva:uninstall engines=blog

		#buggy
			redirection to previous page after login page does not work well. it makes a user being rejected login. but turns out successrful login only when the user goes to the root directory(ie., top page of the website)

#rails2.3.2 最後リリースのADVA0.2.0インストール
	rails 2ch2 -m  /home/you/RoRapps/svenfuchs-adva_cms-ef1f561/templates/adva-cms.0.2.0.rb
#rails2.3.2 最後リリースのADVA0.2.0 で めだったplugin
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_cms/vendor/plugins/safemode/README.markdown
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_cms/vendor/plugins/has_options/lib/has_options.rb
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_cms/vendor/plugins/has_filter/lib/has_filter/filter.rb
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_cms/vendor/plugins/has_filter/lib/has_filter.rb
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_cms/vendor/plugins/filtered_column/README
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_calendar/vendor/plugins/later_dude/README
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_newsletter/vendor/gems/cronedit-0.3.0/lib/cronedit.rb
	/home/you/RoRapps/svenfuchs-adva_cms-ef1f561/engines/adva_spam/vendor/plugins/viking/Readme.txt

#mySQL
	#Linode	sudo apt-get install mysql-server mysql-client libmysqlclient15-dev libmysql-ruby1.8 -y
		you@ecolnux:~/RoRapps/2chnrg/lib$ ps -ef |grep sql
		root      3300     1  0 17:29 ?        00:00:00 /bin/sh /usr/bin/mysqld_safe
		mysql     3446  3300  0 17:29 ?        00:00:01 /usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql --user=mysql --pid-file=/var/run/mysqld/mysqld.pid --skip-external-locking --port=3306 --socket=/var/run/mysqld/mysqld.sock
		root      3447  3300  0 17:29 ?        00:00:00 logger -p daemon.err -t mysqld_safe -i -t mysqld
	#Linode >	mysqladmin create r2chnn -u root -p
	#cf.	rails -d mysql [pj-name]
	#edit config/database.yml
		development:
			adapter: sqlite3
			database: db/development.sqlite3
			pool: 5
			timeout: 5000
		dev:
			adapter: mysql
			database: r2chnn
			username: "root"
			password: "alison"
			timeout: 5000
			socket: /var/run/mysqld/mysqld.sock
			#encoding: utf8
	cp config/environment/development.rb config/environment/dev.rb
	>	mysql -u root -p
		 show databases;
		 use [DBname];
		 show tables;
		 describe [table-name];
		\h	help
		\q	quit
		status

	mysql> select * from users ;
		+----+------------+-----------+----------------------+----------+-------+-----------+------------------------------------------+------------------------------------------+------+-------+---------+-------------+-----------+------------------+-----------+---------------------+---------------------+---------------------+------------+
		| id | first_name | last_name | email                | homepage | about | signature | password_hash                            | password_salt                            | ip   | agent | referer | remember_me | token_key | token_expiration | anonymous | created_at          | updated_at          | verified_at         | deleted_at |
		| +----+------------+-----------+----------------------+----------+-------+-----------+------------------------------------------+------------------------------------------+------+-------+---------+-------------+-----------+------------------+-----------+---------------------+---------------------+---------------------+------------+
		| |  1 | some_body | NULL      | some_body@gmail.com | NULL     | NULL  | NULL      | d9e778c53529bcf488846230be0f6bf6f3a922d4 | 9ee11fa50003a673b6c783263a61770f37254b55 | NULL | NULL  | NULL    | NULL        | NULL      | NULL             |         0 | 2009-07-25 09:19:17 | 2009-07-25 09:19:17 | 2009-07-25 09:19:16 | NULL       |
		| +----+------------+-----------+----------------------+----------+-------+-----------+------------------------------------------+------------------------------------------+------+-------+---------+-------------+-----------+------------------+-----------+---------------------+---------------------+---------------------+------------+
		| 1 row in set (0.00 sec)
		|

	 MySQL インポートとエクスポート（テキストデータ） Submitted by sasaki on 月曜, 2007-01-15 15:44
		 #erace all existing rows
			 mysql -u root -p
			 use r2chnn;
			 delete from kokuekis;
		 ■テキストTAB形式でのエクスポート
			  データベースmydbのempテーブルからタブ区切りのテキストデータでエクスポートする。
				 $ sudo mysql -B --skip-column-names -D mydb -e 'select * from emp;' -u tanaka -p > out.txt
				 $ sudo mysql -B --skip-column-names -D r2chnn -e 'select * from kokuekis;' -u root -p > test.txt
			  --skip-column-namesを削除して実行すれば、カラム名も出力されるので便利。
		 #vi replace mysq-export&import
			%s/】\t\t/】\t\t2009\//gc
			%s/】\t\t2009\/03/】\t\t2010\/03/gc
			%s/】\t\t2009\/02/】\t\t2010\/02/gc
			%s/】\t\t2009\/01/】\t\t2010\/01/gc
				#置換もれがあるのでvi上でチェック
		  #文字化け対策
		  ■テキストデータのインポート mysqlimport編
			  データベースmydbのempテーブルにテキストデータをインポートする。
				  tar cvf tbl.tar *tbl.*; #<----sftp with binmode
				  SHOW VARIABLES LIKE 'character_set%';
						SHOW VARIABLES LIKE 'character_set%';
						+--------------------------+----------------------------+
						| Variable_name            | Value                      |
						| +--------------------------+----------------------------+
						| | character_set_client     | latin1                     |
						| | character_set_connection | latin1                     |
						| | character_set_database   | utf8                       |
						| | character_set_filesystem | binary                     |
						| | character_set_results    | latin1                     |
						| | character_set_server     | latin1                     |
						| | character_set_system     | utf8                       |
						| | character_sets_dir       | /usr/share/mysql/charsets/ |
						| +--------------------------+----------------------------+
						? 解決方法その3 root になれるなら MySQL のデフォルト文字コードを UTF-8 に変更する。 /etc/my.cnf か /etc/mysql/my.cnf を開き（ない場合は mysql が起動するときの設定ファイルを探す）、MySQLのデフォルト文字コードを UTF-8 に変更する。
						# vi /etc/my.cnf
						[mysqld]
						default-character-set = utf8
						[mysql]
						default-character-set = utf8
						[mysqldump]
						default-character-set = utf8
				  $ sudo mysqlimport --local mydb emp.txt -u root -p
				  $ sudo mysqlimport --local r2chnn kokuekis.tbl.tsv -u root -p
				 select * from kokuekis where sbm > 900;
			 mydb：　データベース名
			 emp.sql：　テーブル名.sql（中身はテキストタブのデータ）
			 テキストエディタやExcel等で、TEXT-TAB形式で書き出した後、「テーブル名.txt」へ変更する
			 --localを指定しないと、「Access denied」エラーが発生する。
#文字化けutf-8
	解決方法その3 root になれるなら MySQL のデフォルト文字コードを UTF-8 に変更する。 /etc/my.cnf か /etc/mysql/my.cnf を開き（ない場合は
		mysql が起動するときの設定ファイルを探す）、MySQLのデフォルト文字コードを UTF-8 に変更する。
		# vi /etc/my.cnf
		[mysqld]
		default-character-set = utf8
		[mysql]
		default-character-set = utf8
		[mysqldump]
		default-character-set = utf8








	#1liner
		ruby test.rb yomikaku.txt >new ;sort     new >new2
		ruby test.rb yomikaku.txt >new ;sort -b new >new2

		-e … このオプションのあとにスクリプト片を与えると、ファイルからスクリプトを読み込むのではなくそれをそのまま実行してくれます。
			ruby -e ‘print “Hello World!\n”‘ 		画面にHello World!が表示されます
			ruby -ne ‘gsub(/ +/, “\t”)’ <filename	ファイル中のスペースの連続をTSVタブに置換
			ruby -ne ‘$_.upcase!’ <filename		ファイル中のアルファベットをすべて大文字に


		-p … このオプション（引数なし）を与えると、プログラム全体が

			while gets
				…
				print $_
			end


		FILE SPACING:

		# double space a file
			$  ruby -pe 'puts' < file.txt
		# triple space a file
			$  ruby -pe '2.times {puts}' < file.txt
		# undo double-spacing (w/ and w/o whitespace in lines)
			$  ruby -lne 'BEGIN{$/="\n\n"}; puts $_' < file.txt
			$  ruby -ne 'BEGIN{$/="\n\n"}; puts $_.chomp' < file.txt
			$  ruby -e 'puts STDIN.readlines.to_s.gsub(/\n\n/, "\n")' < file.txt

		NUMBERING:

		# number each line of a file (left justified).
			$  ruby -ne 'printf("%-6s%s", $., $_)' < file.txt
		# number each line of a file (right justified).
			$  ruby -ne 'printf("%6s%s", $., $_)' < file.txt
		# number each line of a file, only print non-blank lines
			$  ruby -e 'while gets; end; puts $.' < file.txt
		# count lines (emulates 'wc -l')
			$  ruby -ne 'END {puts $.}' < file.txt
			$  ruby -e 'while gets; end; puts $.' < file.txt

		TEXT CONVERSION AND SUBSTITUTION:

		# convert DOS newlines (CR/LF) to Unix format (LF)
		# - strip newline regardless; re-print with unix EOL
			$  ruby -ne 'BEGIN{$\="\n"}; print $_.chomp' < file.txt

		# convert Unix newlines (LF) to DOS format (CR/LF)
		# - strip newline regardless; re-print with dos EOL
			$  ruby -ne 'BEGIN{$\="\r\n"}; print $_.chomp' < file.txt

		# delete leading whitespace (spaces/tabs/etc) from beginning of each line
			$  ruby -pe 'gsub(/^\s+/, "")' < file.txt

		# delete trailing whitespace (spaces/tabs/etc) from end of each line
		# - strip newline regardless; replace with default platform record separator
			$  ruby -pe 'gsub(/\s+$/, $/)' < file.txt

		# delete BOTH leading and trailing whitespace from each line
			$  ruby -pe 'gsub(/^\s+/, "").gsub(/\s+$/, $/)' < file.txt

		# insert 5 blank spaces at the beginning of each line (ie. page offset)
			$  ruby -pe 'gsub(/%/, "   ")' < file.txt
			FAILS! $  ruby -pe 'gsub(/%/, 5.times{putc " "})' < file.txt

		# align all text flush right on a 79-column width
			$  ruby -ne 'printf("%79s", $_)' < file.txt

		# center all text in middle of 79-column width
			$  ruby -ne 'puts $_.chomp.center(79)' < file.txt
			$  ruby -lne 'puts $_.center(79)' < file.txt

		# substitute (find and replace) "foo" with "bar" on each line
			$  ruby -pe 'gsub(/foo/, "bar")' < file.txt

		# substitute "foo" with "bar" ONLY for lines which contain "baz"
			$  ruby -pe 'gsub(/foo/, "bar") if $_ =~ /baz/' < file.txt

		# substitute "foo" with "bar" EXCEPT for lines which contain "baz"
			$  ruby -pe 'gsub(/foo/, "bar") unless $_ =~ /baz/' < file.txt

		# substitute "foo" or "bar" or "baz".... with "baq"
			$  ruby -pe 'gsub(/(foo|bar|baz)/, "baq")' < file.txt

		# reverse order of lines (emulates 'tac') IMPROVE
			$  ruby -ne 'BEGIN{@arr=Array.new}; @arr.push $_; END{puts @arr.reverse}' < file.txt

		# reverse each character on the line (emulates 'rev')
			$  ruby -ne 'puts $_.chomp.reverse' < file.txt
			$  ruby -lne 'puts $_.reverse' < file.txt

		# join pairs of lines side-by-side (like 'paste')
			$  ruby -pe '$_ = $_.chomp + " " + gets if $. % 2' < file.txt

		# if a line ends with a backslash, append the next line to it
			$  ruby -pe 'while $_.match(/\\$/); $_ = $_.chomp.chop + gets; end' < file.txt
			$  ruby -e 'puts STDIN.readlines.to_s.gsub(/\\\n/, "")' < file.txt

		# if a line begins with an equal sign, append it to the previous line (Unix)
			$  ruby -e 'puts STDIN.readlines.to_s.gsub(/\n=/, "")' < file.txt

		# add a blank line every 5 lines (after lines 5, 10, 15, etc)
			$  ruby -pe 'puts if $. % 6 == 0' < file.txt

		SELECTIVE PRINTING OF CERTAIN LINES

		# print first 10 lines of a file (emulate 'head')
			$  ruby -pe 'exit if $. > 10' < file.txt

		# print first line of a file (emulate 'head -1')
			$  ruby -pe 'puts $_; exit' < file.txt

		# print the last 10 lines of a file (emulate 'tail'); NOTE reads entire file!
			$  ruby -e 'puts STDIN.readlines.reverse!.slice(0,10).reverse!' < file.txt

		# print the last 2 lines of a file (emulate 'tail -2'); NOTE reads entire file!
			$  ruby -e 'puts STDIN.readlines.reverse!.slice(0,2).reverse!' < file.txt

		# print the last line of a file (emulates 'tail -1')
			$  ruby -ne 'line = $_; END {puts line}' < file.txt

		# print only lines that match a regular expression (emulates 'grep')
			$  ruby -pe 'next unless $_ =~ /regexp/' < file.txt

		# print only lines that DO NOT match a regular expression (emulates 'grep')
			$  ruby -pe 'next if $_ =~ /regexp/' < file.txt

		# print the line immediately before a regexp, but not the regex matching line
			$  ruby -ne 'puts @prev if $_ =~ /regex/; @prev = $_;' < file.txt

		# print the line immediately after a regexp, but not the regex matching line
			$  ruby -ne 'puts $_ if @prev =~ /regex/; @prev = $_;' < file.txt

		# grep for foo AND bar AND baz (in any order)
			$  ruby -pe 'next unless $_ =~ /foo/ && $_ =~ /bar/ && $_ =~ /baz/' < file.txt

		# grep for foo AND bar AND baz (in order)
			$  ruby -pe 'next unless $_ =~ /foo.*bar.*baz/' < file.txt

		# grep for foo OR bar OR baz
			$  ruby -pe 'next unless $_ =~ /(foo|bar|baz)/' < file.txt

		# print paragraph if it contains regexp; blank lines separate paragraphs
			$  ruby -ne 'BEGIN{$/="\n\n"}; print $_ if $_ =~ /regexp/' < file.txt

		# print paragraph if it contains foo AND bar AND baz (in any order); blank lines separate paragraphs
			$  ruby -ne 'BEGIN{$/="\n\n"}; print $_ if $_ =~ /foo/ && $_ =~ /bar/ && $_ =~ /baz/' < file.txt

		# print paragraph if it contains foo AND bar AND baz (in order); blank lines separate paragraphs
			$  ruby -ne 'BEGIN{$/="\n\n"}; print $_ if $_ =~ /(foo.*bar.*baz)/' < file.txt

		# print paragraph if it contains foo OR bar OR baz; blank lines separate paragraphs
			$  ruby -ne 'BEGIN{$/="\n\n"}; print $_ if $_ =~ /(foo|bar|baz)/' < file.txt

		# print only lines of 65 characters or greater
			$  ruby -pe 'next unless $_.chomp.length >= 65' < file.txt
			$  ruby -lpe 'next unless $_.length >= 65' < file.txt

		# print only lines of 65 characters or less
			$  ruby -pe 'next unless $_.chomp.length < 65' < file.txt
			$  ruby -lpe 'next unless $_.length < 65' < file.txt

		# print section of file from regex to end of file
			$  ruby -pe '@found=true if $_ =~ /regex/; next unless @found' < file.txt

		# print section of file based on line numbers (eg. lines 2-7 inclusive)
			$  ruby -pe 'next unless $. >= 2 && $. <= 7' < file.txt

		# print line number 52
			$  ruby -pe 'next unless $. == 52' < file.txt

		# print every 3rd line starting at line 4
			$  ruby -pe 'next unless $. >= 4 && $. % 3 == 0' < file.txt

		# print section of file between two regular expressions, /foo/ and /bar/
			$  ruby -ne '@found=true if $_ =~ /foo/; next unless @found; puts $_; exit if $_ =~ /bar/' < file.txt

		SELECTIVE DELETION OF CERTAIN LINES

		# print all of file except between two regular expressions, /foo/ and /bar/
			$  ruby -ne '@found = true if $_ =~ /foo/; puts $_ unless @found; @found = false if $_ =~ /bar/' < file.txt

		# print file and remove duplicate, consecutive lines from a file (emulates 'uniq')
			$  ruby -ne 'puts $_ unless $_ == @prev; @prev = $_' < file.txt

		# print file and remove duplicate, non-consecutive lines from a file (careful of memory!)
			$  ruby -e 'puts STDIN.readlines.sort.uniq!.to_s' < file.txt

		# print file except for first 10 lines
			$  ruby -pe 'next if $. <= 10' < file.txt

		# print file except for last line
			$  ruby -e 'lines=STDIN.readlines; puts lines[0,lines.size-1]' < file.txt

		# print file except for last 2 lines
			$  ruby -e 'lines=STDIN.readlines; puts lines[0,lines.size-2]' < file.txt

		# print file except for last 10 lines
			$  ruby -e 'lines=STDIN.readlines; puts lines[0,lines.size-10]' < file.txt

		# print file except for every 8th line
			$  ruby -pe 'next if $. % 8 == 0' < file.txt

		# print file except for blank lines
			$  ruby -pe 'next if $_ =~ /^\s*$/' < file.txt

		# delete all consecutive blank lines from a file except the first
			$  ruby -e 'BEGIN{$/=nil}; puts STDIN.readlines.to_s.gsub(/\n(\n)+/, "\n\n")' < file.txt

		# delete all consecutive blank lines from a file except for the first 2
			$  ruby -e 'BEGIN{$/=nil}; puts STDIN.readlines.to_s.gsub(/\n(\n)+/, "\n\n")' < file.txt

		# delete all leading blank lines at top of file
			$  ruby -pe '@lineFound = true if $_ !~ /^\s*$/; next if !@lineFound' < file.txt



#redmine
	rake db:migrate
		#adva-cmsとはDBtable 'comments'が衝突してmigrate頓挫する。両方のcommentsテーブルは構成がにていて、ADVA-CMSのcommentsテーブルの方が多くのカラムを持つが、包含関係ではない。
		したがって互換性もなく、共存させたければADVA-CMSとRedmineのマイグレーションファイルをマージしてからmigrateするハックが必要。DBtable 'boards'も同様。
		comments
		boards
	admin/adminで初回ログイン
	open-IDつかいたいならば -->  sudo gem install ruby-openid
#redmine-overwriting-upgrade
	0.8.x series & 0.9.x series ---> DBに互換性なし
	sudo gem1.8 uninstall rack
	#rackup0.1, synatraもけす

	sudo gem1.8 install --version '= 1.0.1' rack
	rake db:migrate
	#vim /config/environment.rb
		chars = ('a'..'z').to_a + ('A'..'Z').to_a + ('0'..'9').to_a
		secret = Array.new(60){chars[rand(chars.size)]}.join
		config.action_controller.session = { :key => "_hello_session", :secret => secret }
#redmine plugin making つまるところ以下の手順でプラグインが開発できる。
	See: http://rails-engines.org/
	1. script/generate redmine_plugin でプラグインの雛形を作る
		ruby script/generate redmine_plugin r2chnn
	1b file-copy
		railsでつくったMVCをREDMINE/vendor/plugins 配下にコピーし差をうめ 　　
		元RailsAppのRAILS_ROOT/lib はREDMINE_ROOT/libにコピー
		元RailsAppのRAILS_ROOT/public/* はREDMINE_ROOT/public にコピー
		元RailsAppのRAILS_ROOT/public/images/* はREDMINE_ROOT/public/images/ にコピー
		元RailsAppのRAILS_ROOT/vendor/plugins/* はREDMINE_ROOT/vendor/lugins/ にコピー(ただしRedmineのbootエラーが出るプラグインはどこかに退避させる）
	2. init.rb を編集する
		Redmine::Plugin.register :redmine_continuous_deployment do
		  name 'Redmine Continuous Deployment plugin'
		  author 'Takayuki Kyowa'
		  description 'Redmine Continuous Deployment plugin'
		  version '0.0.1'

		#メニューの追加先をプロジェクトメニューにしています 初期設定で最も重要なのは表示メニューへの追加です。追加可能な表示箇所は以下の4つに分類さ れます。
			 1. トップメニュー（top_menu）
			 2. アカウントメニュー（account_menu）
			 3. プロジェクト非選択時のアプリケーションメニュー（application_menu）
			 4. プロジェクト選択時メニュー（project_menu）（①）。プロジェクトメニューa project-IDが必須にな ります。
		#:paramオプションで:project_idを指定するとURLにプロジェクトIDが付与されます(②)。
		  menu :project_menu, :deploy_history,  # ①
			   { :controller => 'deployments', :action => 'index' }, :caption => "デプロイ", :last => true,
			   :param => :project_id # ②
			#プロジェクトメニューはデフォルトで非表示にな っているため，permissionメソッドで表示/非表示を制御します(③)。
			#注意事項：URLを直打ちするとpermissionはきかない。一般公開を目的としたプラグインを作成する場合には指定せず権限の管理画面（/roles/report）からロール毎に表示／非表示を設定します。

			  permission
				:deploy_histories,              # パーミッションの名前。パーミッション全体で一意でなければならない。
				{ :deployments => [ :index ] }, # 制御対象の画面をあらわすハッシュ。menuメソッドで指定したコントローラ / アクションを指定する。
				:public => true                 # trueにすると常に表示される。

		end

		#例
		class ModelName < ActiveRecord::Migration
		  def self.up
			create_table :deploy_histories do |t|
			  t.column :project_id, :integer    # デプロイ時のプロジェクト
			  t.column :deployer_id, :integer   # デプロイしたユーザ
			  t.column :changeset_id, :integer  # デプロイ時のチェンジセット（リビジョン）
			  t.column :started_on, :datetime   # 開始時間
			  t.column :deployed_on, :datetime  # 終了時間
			  t.column :return_code, :integer   # デプロイの実行結果。コマンドの終了ステータスを保存する。
			  t.column :log, :text              # デプロイのログ
			end
		  end

		  def self.down
			drop_table :deploy_histories
		  end
		end

		一通り作成したらmigrateを実行します。
		$ RAILS_ENV=production rake db:migrate_plugins

	3. 共通設定移植
		application_contoroller の独自共通メソッド
		config/database.yml
		config/environments.rb
		config/routes.rb
	3. Contoroller 移植(@project を基点にプロジェクトの情報を得る)
		#これをいれるとredmine標準layout   layout 'base'
		  unloadable
		  before_filter :find_project #, :authorize  <----会員専用ページ
			...
		private
		  def find_project
			@project=Project.find(params[:id])
		  end
		class
		EOF
		#プロジェクト配下では@projectインスタンス変数が必須になる為，URLで渡されたプロジェクトIDからProjectモデルのインスタンスを取得し，
		@projectイ ンスタンス変数にセットしています。基本的にすべての画面で必要になるため，before_filterで記述しています（①）。

	4. View を書く
		  値の取得例：<%= button_to "デプロイ！", { :action => "deploy", :project_id => params[:project_id] } %>
			def hogehoge
				@project = Project.find(params[:project_id])
			end
		PG:redmine:plugin: setting/*erb のファイル名はインストール済みプラグインの名前空間で衝突しない独特名にしないと、早番順同名ファイルがよみこまれたりする。
		#PLUGIN_ROOT/app/views/で
			<%#  takami disabled below due to 'stack level too deep' error%>
			<%#  <%= stylesheet_link_tag 'scaffold' +|%>
	5. PLUGINROT/lang/nn.yml  config/locales 言語ファイルを書く
		lang/en.yml
			en:
			  button_exec_deploy: Deploy!
			  text_confirm_deploy: Are you sure you want to deploy?
		lang/ja.yml
			ja:
			  button_exec_deploy: デプロイ！
			  text_confirm_deploy: デプロイします。よろしいですか？

		アプリ側からメッセージを読み込むには「l」というメソッドの引数に言語ファイルで定義したラベルを指定します。
		app/views/deployments/index.html.erb
			<%= button_to l(:button_exec_deploy), { :action => "deploy", :project_id => params[:project_id] }, :confirm => l(:text_confirm_deploy) %>

	6. /home/you/RoRapps/redmine-0.9.5/app/controllers/settings_controller.rb

	rake db:migrate_plugins


	#Redmineで名前空間内衝突をおこし、そのままつかえない人気プラグイン
		#Paperclip::Attachment:Classと redmine-0.8.4/app/models/attachment.rbのAttachment:Classと名前衝突、誤動作
			/home/you/RoRapps/redmine-0.8.4/app/models/attachment.rb:34: undefined method `table_name' for Paperclip::Attachment:Class (NoMethodError)
		#jpmobile (* 0.9.5はbootエラーなし。)
			/home/you/RoRapps/redmine-0.8.4/vendor/plugins/jpmobile/lib/jpmobile/hook_action_view.rb:26: undefined method `find_template' for class `ActionView::PathSet' (NameError)
		--> require '/usr/lib/ruby/gems/1.8/gems/jpmobile-0.0.4/lib/jpmobile.rb'  #some_body
		#XXX_path, XXX_urlの書き換え
	#if redmine 0.8.x系 then
		environments.rb /config/environmnts/[envname]rb config.plugin_reload=true

	#redmine-gmail-combo
		#ruby script/plugin install git://github.com/collectiveidea/action_mailer_optional_tls.git
		i#config/email.ymlはタブをスペースに変換すること。
#linode new-plugin/mdule配備手順
	ローカルにデプロイ演習DB作っておいて演習する。
	いろいろmigrationむけrake task ommandはあるが、rake:db:migrateでエラーになるファイルをさけつつガリガリやってDBtable作成を目視確認するのがはやみち。
		rake db:migrate:plugin                                 # Migrate a specified plugin.
		rake db:migrate:plugins                                # Migrate plugins to current status.
		rake db:migrate:redo                                   # Rollbacks the database one migration and re migrate up.
		rake db:migrate_plugins                                # Migrates installed plugins.
		rake db:migrate:upgrade_plugin_migrations              # For engines coming from Rails version < 2.0 or for those previously updated to work with Sven Fuch's fork of engines, you need to upgrade the schema info table

#@editable はwiki_controller-->iMixinWikiController::def indexとよばれる。document_controllerではこのながれはない。

#redminePG: http://localhost:3000/projects/convert/documents?sort_by=author  きかない docusmnt/index ではattachments.authorでソートするので添付ファイル泣ければ動作しない
#Linode環境移行手順
	#db-migration
		/root/TMPDIR/DBbak/r2chnn_core_selected_tables.gz
		/root/redmine-0.9.5/config/database.yml
	#httpd-env
		/usr/local/apache2/conf/extra/httpd-proxy.conf
		/usr/local/apache2/conf/httpd.conf
		/root/redmine-0.9.5/config/environments/development.rb
		/root/redmine-0.9.5/config/environments/production.rb
	#appdir & cronpath
		/root/redmine-0.9.5/lib/R2chnnInitfork.rb
#webalizer-------------------------------------------------------------------------------
	#かならずshellで作業。vimのシェルコマンドではうまくslinkがつくられない
	#cd #{RAILS_ROOT}/public
	!sudo ln -s var/log/webalizer webalizer
~

wget -O - --no-cache localhost:3000/r2chnns
 ruby script/generate scaffold r2chnn genre:string ndc1:string ndc2:string sbm:integer rate:integer Thread:text THref:text kisha:string src1:string src2:string src3:string issue2nn:integer issueOfWeek:integer issueOfMonth:integer issueOfSeason:integer issueOfYear:integer issueOfDecade:integer

#index.htmk.erb を偽装して通常のhtmlを表示させる方法＝＞ <%= stylesheet_link_tag 'scaffold' %>だけをのこしてあとをいれかえる。
#Rails scrach
#//ver2予定:mobyle.seisyun.netも書き換えたい http://mobile.seisyun.net/cgi/read.cgi/newsplus/mamono_newsplus_1214022204/1
#
#driverSW update  HTMLeditoron FIrefox / / dentist/ 投信
	./browser/plugin/short.vim:45:command! -bar -bang ViewSource call BrowserViewSource(<q-bang>)
	./browser/plugin/main.vim:82:command! -bar -bang BrowserViewSource call BrowserViewSource(<q-bang>)
	netbeans-linux
	http://eigenclass.org/hiki.rb?fastri  and it's also available in gem format
	(rdb:1) show command
		No readline suport
	#Yahoo pipes
		2NN- 芸能|フィギュア|労働新聞|自治議論|遺棄|自殺|殺害|少子化|晩婚|婚活|アラフォー|アラサー|Mac |iPod|iPhone|Podcast|テレビ|ラジオ|が話題|(になる|する)\!?[\?？]|SMAP|しょこたん|くまぇり|ネチズン|ブログ|シー..?シェパード|||||||||||||||||||||||||||||||||||||||||||||||
		-Twitter|Wassr|Myspace|facebook|flickr|Mac |iPod|iPhone|Podcast|テレビ|ラジオ|(になる|する)\!?[\?？]|Shibuya.pm|last.fm|Tumblr|イケメン||||||||||||||||||||||||||||||||||||||
	#mashup
		http://railsify.com/search
		http://wiki.rubyonrails.org/?do=search&id=WORD1+WORD2


	#js2rb.rb
		/else if/elsif/
#
	<dl>
	<dt>3 ：<span class="name">七つの海の名無しさん </span>：2009/05/04(月) 14:28:56 ID:l1rmttGY
	 <input id="3" name="edit_res[]" value="3" checked="checked" type="checkbox">
	  <label for="3">このレスを掲載する</label></dt>
	   <dd> <a href="http://gimpo.2ch.net/test/read.cgi/news5plus/1241414647/1" target="_blank">&gt;&gt;1</a> <br> グロ張らないで頂戴！！！！！！！！！！ <br></dd>

	   <dt>38 ：<span class="name">七つの海の名無しさん </span>：2009/05/04(月) 17:08:24 ID:584C/LGG
	    <input id="38" name="edit_res[]" value="38" checked="checked" type="checkbox">
		 <label for="38">このレスを掲載する</label></dt>
		  <dd> <a href="http://gimpo.2ch.net/test/read.cgi/news5plus/1241414647/1" target="_blank">&gt;&gt;1</a> <br> 良い仕事したな。ナイスオパーイ <br></dd>


require 'scanf'
require 'action_pack'
require 'action_view'
require 'jpmobile/request_with_mobile'
require 'tempfile'

(rdb:1191) request.headers["HTTP_HOST"]
"localhost:3000"
(rdb:1191) request.headers["REQUEST_PATH"]
"/"
(rdb:1191) request.headers["PATH_INFO"]
"/r2chnns/readurl/825"

(rdb:1191) request.headers["HTTP_REFERER"]
"http://localhost:3000/r2chnns/refresh/1"
	(rdb:1191) request.headers["REQUEST_URI"]
		"http://localhost:3000/r2chnns/readurl/825"

		request.headers["PATH_INFO"]=url
		request.headers["REQUEST_PATH"]=url
		#request.headers["HTTP_HOST"]=
#ADVA-CMS-HACK
		LOGOUT:	Parameters: {"return_to"=>"http://localhost:3000/", "action"=>"new", "controller"=>"session"}
			CACHE (0.0ms)   SELECT * FROM "sites" WHERE ("sites"."host" = 'localhost:3000') LIMIT 1
			CACHE (0.0ms)   SELECT * FROM "sections" WHERE ("sections"."parent_id" IS NULL) AND ("sections"."site_id" = 1) ORDER BY lft LIMIT 1
			  User Load (4.5ms)   SELECT * FROM "users" WHERE ("users"."id" = '1') LIMIT 1
			  SQL (1.5ms)   SELECT count(*) AS count_all FROM "users" WHERE (id = 1 AND remember_me = 'ee029d36aec513eb2e4c0ef2eccc8bc50f886fc5' AND verified_at IS NOT NULL)
			  User Load (15.1ms)   SELECT * FROM "users" WHERE ("users"."id" = 1) LIMIT 1

		LOGIN:	Parameters: {"action"=>"destroy", "_method"=>"delete", "authenticity_token"=>"fCmjxS2tJJLWqxy46mXGKcejW9uQffss4lcjX4eXZqo=", "controller"=>"session"}
			  CACHE (0.0ms)   SELECT * FROM "sites" WHERE ("sites"."host" = 'localhost:3000') LIMIT 1
			  CACHE (0.0ms)   SELECT * FROM "sections" WHERE ("sections"."parent_id" IS NULL) AND ("sections"."site_id" = 1) ORDER BY lft LIMIT 1
	(rdb:1056) SessionController.instance_methods.grep(/current/i)
		["current_user", "assign_current_user_to_models", "current_resource", "current_page"]
	(rdb:1163) current_user
		#<User id: 1, first_name: "some_body", last_name: nil, email: "some_body@gmail.com", homepage: nil, about: nil, signature: nil, password_hash: "d9e778c53529bcf488846230be0f6bf6f3a922d4", password_salt: "9ee11fa50003a673b6c783263a61770f37254b55", ip: nil, agent: nil, referer: nil, remember_me: nil, token_key: nil, token_expiration: nil, anonymous: false, created_at: "2009-07-25 09:19:17", updated_at: "2009-07-25 09:19:17", verified_at: "2009-07-25 09:19:16", deleted_at: nil>
	(rdb:1056) SessionController.instance_methods.grep(/veri/i)
		["verify_authenticity_token", "verified_request?", "verifiable_request_format?", "hash_for_verify_user_url", "verify_user_url", "formatted_verify_user_url", "hash_for_verify_user_path", "verify_user_path", "formatted_verify_user_path"]
	(rdb:1056) SessionController.instance_methods.grep(/user/i)
		["hash_for_new_user_url", "new_admin_user_path", "new_user_url", "hash_for_admin_site_user_url", "formatted_new_admin_user_path", "formatted_new_user_url", "admin_site_user_url", "hash_for_new_user_path", "formatted_admin_site_user_url", "hash_for_edit_admin_user_url", "new_user_path", "hash_for_admin_site_user_path", "edit_admin_user_url", "formatted_new_user_path", "formatted_admin_site_user_path", "formatted_edit_admin_user_url", "hash_for_edit_user_url", "hash_for_edit_admin_user_path", "edit_user_url", "edit_admin_user_path", "formatted_edit_user_url", "hash_for_user_roles_url", "formatted_edit_admin_user_path", "hash_for_edit_user_path", "user_roles_url", "edit_user_path", "formatted_user_roles_url", "hash_for_admin_user_url", "formatted_edit_user_path", "hash_for_user_roles_path", "admin_user_url", "current_user", "user_roles_path", "formatted_admin_user_url", "hash_for_verify_user_url", "formatted_user_roles_path", "hash_for_admin_user_path", "verify_user_url", "formatted_admin_user_path", "formatted_verify_user_url", "assign_current_user_to_models", "hash_for_verify_user_path", "hash_for_user_object_roles_url", "hash_for_admin_site_users_url", "verify_user_path", "user_object_roles_url", "handle_user_settings", "admin_site_users_url", "formatted_verify_user_path", "formatted_user_object_roles_url", "formatted_admin_site_users_url", "admin_site_users_path", "hash_for_user_url", "hash_for_user_object_roles_path", "authenticate_user", "hash_for_admin_site_users_path", "user_url", "user_object_roles_path", "formatted_admin_site_users_path", "formatted_user_url", "formatted_user_object_roles_path", "hash_for_user_path", "admin_users_path", "hash_for_new_admin_site_user_url", "user_path", "new_admin_site_user_url", "formatted_user_path", "formatted_new_admin_site_user_url", "admin_user_path", "hash_for_new_admin_site_user_path", "hash_for_admin_users_url", "admin_site_user_path", "new_admin_site_user_path", "admin_users_url", "formatted_new_admin_site_user_path", "formatted_admin_users_url", "hash_for_admin_users_path", "hash_for_edit_admin_site_user_url", "formatted_admin_users_path", "edit_admin_site_user_url", "formatted_edit_admin_site_user_url", "hash_for_new_admin_user_url", "hash_for_edit_admin_site_user_path", "new_admin_user_url", "edit_admin_site_user_path", "formatted_new_admin_user_url", "formatted_edit_admin_site_user_path", "hash_for_new_admin_user_path"]

	(rdb:1132) t(:'adva').keys
		[:wikipage, :wiki_helper, :session, :assets, :labels, :cells, :plugins, :messages, :signup, :footer, :theme_files, :locations, :sidebar, :roles, :state, :blog, :info, :spam, :common, :sections, :sites, :titles, :boards, :users, :categories, :themes, :topics, :wiki, :comments, :tracking, :resources, :settings, :posts, :articles, :passwords, :subscription, :cached_pages, :links, :flash, :wikipages_helper, :activity, :contents]
	(rdb:1132) t(:'adva.sites')
		{:no_sites=>"You currently do not have any sites created.", :title=>{:create=>"Create a new site", :home_section=>"Home section"}, :attributes=>{:host=>"Host", :name=>"Name"}, :no_users=>"Site does not have any users.", :hints=>{:admin_email=>"Shown in emails sent from your site", :host_name=>"Include the port if it's a non-standard one. E.g. localhost:3000"}, :confirm_delete=>"Are you sure you wish to delete this site?", :no_available_users=>"Site does not have any available user.", :label=>{:timezone=>"Website Timezone", :admin_email=>"Administrator email", :title=>"Website title", :host=>"Host name", :name=>"Website name", :subtitle=>"Website subtitle"}, :flash=>{:create=>{:success=>"The site has been created.", :failure=>"The site could not be created"}, :destroy=>{:success=>"The site has been deleted.", :failure=>"The site could not be deleted"}, :install=>{:success=>"Congratulations! You have successfully set up your site.", :error_already_complete=>"Installation is already complete. Please log in with your admin account.", :failure=>"The following models could not be created: {{models}}."}, :update=>{:success=>"The site has been updated.", :failure=>"The site could not be updated"}}, :links=>{:delete=>"Delete this site", :create_site_and_account=>"Create site & account ≫", :manage_new=>"Manage your new site &raquo;"}, :install=>{:success_fully_created=>"You have successfully created your site. Enjoy!", :section_default=>"Home", :can_always_change_settings=>"Don't worry. You can always change these settings later.", :welcome_to_installation=>"Welcome to the less-than-two-minutes installation process. Just fill in the information below and you're done. "}}
	(rdb:1132) t(:'adva.session')
		{:labels=>{:remember_me=>"Remember me"}, :flash=>{:create=>{:success=>"Logged in successfully.", :failure=>"Could not login with this email and password."}, :destroy=>{:success=>"Logged out successfully."}}}
	kkkkkkkk

	 Rails::Initializer.run do |config| $rails_config = config end
	$rails_config.to_a.split(/@/)

	#VMguest@local
	procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
	 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa
	  3  0    153      4      5     45    0    0    21    16  144   29  9 15 75  1

	root@ecolnux:~/RoRapps/2chnrg/vendor/adva/engines# grep -inR "site.host.*=" *
	adva_blog/test/integration/admin/blog_article_test.rb:44:      request.url.should == "http://#{@site.host}/2008/1/1/the-article-title?cl=en"
	adva_cms/test/unit/models/site_test.rb:81:    @site.host = '    t e s t.advabest.de'
	adva_cms/test/unit/models/site_test.rb:86:    @site.host = 't e s t.advabest.de'
	adva_cms/test/unit/models/site_test.rb:91:    @site.host = 't e s t.advabest.de    '
	adva_cms/test/integration/admin/section_article_test.rb:98:      request.url.should == "http://#{@site.host}/articles/the-article-title?cl=en"
	adva_cms/test/integration/admin/section_article_test.rb:103:      request.url.should == "http://#{@site.host}/articles/the-article-title-de?cl=de"
	adva_cms/test/integration/admin/sites_test.rb:30:      fill_in 'site[host]',  :with => 'http://the-new-site.com'
	adva_newsletter/test/unit/model/issue_test.rb:325:    @issue.body = %(<a href="http://#{@issue.newsletter.site.host}/newest-products.html?order=date">View our newest products</a>)
	adva_newsletter/test/unit/model/issue_test.rb:328:    expected = %(<a href="http://#{@issue.newsletter.site.host}/newest-products.html?order=date&utm_medium=newsletter&utm_campaign=#{URI.escape(@issue.tracking_campaign)}&utm_source=#{URI.escape(@issue.tracking_source)}">View our newest products</a>)
	adva_newsletter/test/unit/model/issue_test.rb:334:    @issue.body = %(<a href="http://#{@issue.newsletter.site.host}/newest-products.html?order=date">View our newest products</a>)
	adva_newsletter/test/unit/model/issue_test.rb:339:    @issue.body_html.should == %(<a href="http://#{@issue.newsletter.site.host}/newest-products.html?order=date">View our newest products</a>)
	root@ecolnux:~/RoRapps/2chnrg/vendor/adva/engines# grep -inR "request.host.*=" *
	adva_cms/test/contexts.rb:11:    @request.host = @site.host if @request && @site
	adva_cms/test/test_helper/extensions/rails_patch.rb:34:    request.host = @request.host if @request
	adva_forum/test/functional/forum_cache_references_test.rb:14:    @request.host = @forum.site.host
	adva_forum/test/functional/forum_cache_references_test.rb:53:    @request.host = @forum.site.host

	root@ecolnux:/usr/lib/ruby/gems/1.8/gems/mongrel-1.1.5# grep -inR "3000" *
		README:63: h = Mongrel::HttpServer.new("0.0.0.0", "3000")
		README:68:If you run this and access port 3000 with a browser it will say "hello!".  If you access it with any url other than "/test" it will give a simple 404.  Check out the Mongrel::Error404Handler for a basic way to give a more complex 404 message.
		bin/mongrel_rails:27:        ['-p', '--port PORT', "Which port to bind to", :@port, 3000],
		examples/mongrel.conf:8::port: 3000
		examples/mongrel_simple_service.rb:110:  :port            => 3000,
		examples/camping/tepee.rb:146:  server = Mongrel::Camping::start("0.0.0.0",3000,"/tepee",Tepee)
		examples/camping/tepee.rb:147:  puts "** Tepee example is running at http://localhost:3000/tepee"
		examples/builder.rb:17:  listener :port => 3000 do
		lib/mongrel/configurator.rb:14:  #     listener :port => 3000 do
		lib/mongrel.rb:56:  #   server = HttpServer.new("0.0.0.0", 3000)
	root@ecolnux:/usr/lib/ruby/gems/1.8/gems/mongrel-1.1.5# cd ../mongrel_cluster-1.0.5/
	root@ecolnux:/usr/lib/ruby/gems/1.8/gems/mongrel_cluster-1.0.5# grep -inR "3000" *
		lib/mongrel_cluster/init.rb:20:        "port" => 3000,
		lib/mongrel_cluster/init.rb:287:        ['-p', '--port PORT', "Starting port to bind to", :@port, 3000],






#メソッド名!は例外を発生させる。!がなければオブジェクトか:nilをかえすのが通例。
obj.find_by_name("dave")
ret=obj.find_by_sql("select * fro xxx")
obj.select_all
book = Product.find_or_create_by_name_and_price('book', 2079)
	リスト7●productsテーブルからnameが'book'，priceが2079であるようなProductオブジェクトを読み取り，存在しなかった場合はデータベースにレコードを新規作成する処理
