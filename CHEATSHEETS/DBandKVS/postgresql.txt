#postgres
	sudo /etc/init.d/postgresql start
	$ sudo passwd postgres
	su - postgres
	psql redmine_pg_dev
	psql SetupInfoManagement_production -U postgres -W
	#注意点
		.config/database.yml はhost: 127.0.0.1にしないと､既存user/pwでもident認証
		にひっかかる｡postgresqlはident認証(unix id/pw = postgres d/pwで一致)がデフォル
		ト｡
			#gem pg  fileでpgのインストールをもとめられたら
				REHL:
					事前にPATHとsoci-postgresql-devel.i686
						を準備しないとgem install はこける｡
						in case of REHL linuxes(REHL, centOS, fedora)
						you hae to make sure PATH and/or postgresql-devel is prepared as example below;
						export PATH=/usr/pgsql/bin:$PATH
						yum install soci-postgresql-devel.i686
					gem "pg", ">= 0.11.0", :platforms => [:mri, :mingw]
			　
				CentOS:
					パス指定しないとエラー Can't find the 'libpq-fe.h header
					sudo yum -y install ruby-devel
					gem  install pg -- --with-pg-dir=/usr/pgsql/

			#peer認証:既定のpeer認証では、ユーザ名がUnixのユーザ名と一致していないとエラーになります。
			sudo /etc/init.d/postgresql stop
				REHL: vim /var/lib/pgsql/9.2/data/pg_hba.conf
        DEB : $ sudo vim /etc/postgresql/9.3/main/pg_hba.conf
					--> peer を　passwordに
						81 # local   all             all                                     peer
						82 local   all             all                                  password
			sudo /etc/init.d/postgresql start　
		　#connect t DB
			psql redmine_pg_dev -U root
			#db creation
				CREATE DATABASE tkt_redmine_development;
				\l:
			#user creation
				createuser root;
				SELECT * FROM pg_shadow;
			#password creation
				alter user postgres with password 'root';
		　　su - postgres
			sudo /etc/init.d/postgresql stop
			psql redmine_pg_dev -U postgres
			alter user root with password '';
			sudo /etc/init.d/postgresql start
			select * from schema_migrations ;
				\d issues_addtion_datat
			ALTER evacuation_advisories rename type to advisory_type;
			root@localhost:/opt/fix/LGDIS# psql --version
			psql (PostgreSQL) 9.2.1
			ALTER TYPE
			Name
			列　拡張
				alter table hoge alter COLUMN hoge_column TYPE varchar(10)
			alter table issues add  mail_subject varchar(15)
**PostgreSQLの基本的(よく使う)コマンド**
	CREATE ROLE catalog WITH SUPERUSER LOGIN;
	(role変更はALTER ROLE catalog WITH SUPERUSER LOGIN ;)
RRRoR #postgres2mysql
sudo yum install imagemagick ImageMagick-devel gettext hiredis hiredis-devel
git submodule init
git submodule update
lat lib/submodules/Publis_Authoring/
gem install rmagick -v '2.13.2'

#Gemfileでアダプターをmysql2<->pg　でいれかえ

NOKOGIRI_USE_SYSTEM_LIBRARIES=1 bundle install --path vendor/bundle --binstubs vendor/bin

# adapter  = 'postgresql'
# encoding = 'unicode'
adapter = 'mysql2'
encoding = 'utf8mb4'
username = 'root'
password = ''
host = '127.0.0.1'
pool = 5


#migration fileのindex操作無効化
$ greper "(_index|CREATE INDEX|bytea|binary|ALTER)" db/migrate/ |grep -vE "add|remove|rename"
#execute 文コメントアウト, 次の行に分が分かれているかも！　^ +name: とか
##PG add_column :contents, :compressed_images_json, :bytea, null: trueadd_column :contents, :compressed_images_json, :binary, null: true

  def change
    # create_table :owner_coin_histories, { id: :bigserial } do |t|
    create_table :owner_coin_histories, id: false do |t|
      t.column   :id, "BIGINT PRIMARY KEY AUTO_INCREMENT"

#CSV入力
　RailsではまずCSVをUTF8保存してVIコマンド
  : set fenc=utf-8 | :set ff=unix | :w!
  | %s/^\w*,/NULL,/gc
　注意1:ID列のようなauto incrementカラムへはNULLを挿入する｡
        しかし時刻列にNULLをインポートするとNULLではなく0000-00-00 00:00:00 に
化けたりして､論理削除前提の動作環境では変になる｡(取得0件)
        Excelで空白列にNULLとかくと変なことになりうまくいかない｡

  LOAD DATA LOCAL INFILE "/opt/me/oksales_unistandard/db/seeds/var_prices.csv" INTO TABLE var_prices FIELDS TERMINATED BY ',';
　注意2:LOAD文はCSV名とtable-name二カ所なおすこと｡

  結論:デフォルトでUTF8-UNIXでない環境RoRにむかない｡データ作成に手間取るだけ｡
　-->SeedImporter.rbクラスだと､列名不整合やautoincrement対策もしてくれるのでよい｡ただしdeleted_at以降は削れ｡


# mysqlに接続（default character set はutf8に）
chkconfig --level 345 mysqld on
service mysqld start
 mysql -u root -p
	set names utf8;
	 show variables like "character !・>%";
	create database bikkuri_development
	create database bikkuri_mission_development
	create database bikkuri_hase_development
migrateとサーバー起動
	bundle exec rake db:migrate ;
	bundle exec rake db:seed
時計上の時間で検索したい場合は
Time.parse("2012-09-20 22:35").gmtime
といったようにやる。 MySQL上での時間データは、時差を加味しない時間が保存され
ているため、gmtimeで調整する/

 SVN-trunkのダウンロード方法
 ★データ仕様書とダミーデータがあるだけ。
   svn list svn+ssh://svn.drecom.jp/svn/sg/bikkuri/doc/03_開発ドキュメント/
